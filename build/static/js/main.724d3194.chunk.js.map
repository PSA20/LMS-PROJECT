{"version":3,"sources":["redux/reducers/User.js","redux/types/Questions.js","redux/reducers/Questions.js","redux/types/OptionTypes.js","redux/reducers/Option.js","components/Header.js","components/modals/CustomTime.js","components/modals/CustomScore.js","util/colors.js","components/Options.js","components/Schemas/Mcqs.js","components/Categories/Multiple Choice/EditMultipleChoice.js","components/Categories/Multiple Choice/MultipleChoice.js","components/Categories/Multiple Choice/MakeMultipleChoice.js","components/Schemas/BlanksSchema.js","components/Categories/Blanks/MakeFillInTheBlanks.js","components/AddQuestionFooter.js","util/Categories.js","components/Categories/Select-From-dropdown/MakeDropDown.js","components/Categories/TrueAndFalse/MakeTrueFalse.js","components/AddQuestion.js","components/Categories/Blanks/EditFillInTheBlanks.js","components/Categories/Blanks/Blanks.js","components/Categories/Select-From-dropdown/EditDropDown.js","components/Categories/Select-From-dropdown/DropDown.js","components/Categories/TrueAndFalse/EditTrueFalse.js","components/Categories/TrueAndFalse/TrueAndFalse.js","redux/actions/QuestionActions.js","components/Main.js","App.js","redux/ConfigureStore.js","reportWebVitals.js","index.js"],"names":["User","state","username","ADD_QUESTION","DELETE_QUESTION","UPDATE_QUESTION","CHANGE_COLOR","CHANGE_SCORE","CHANGE_TIME","Questions","questions","id","category","description","options","ans","color","score","time","action","type","types","payload","concat","newArray","filter","item","question","foundIndex","findIndex","x","opt","Header","props","setIsOpen","setState","isOpen","toggle","Navbar","fixed","light","expand","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Component","CustomTime","visible","loading","title","onOk","handleOk","onCancel","handleCancel","footer","formItemLayout","Item","hasFeedback","validateStatus","onChange","val","value","style","width","React","labelCol","xs","span","sm","wrapperCol","CustomScore","LIGHTBLUE","LIGHTYELLOW","LIGHTGREEN","ERROR_COLOR","Options","showModalTime","ModalTimeVisible","ModalTimeLoading","setTimeout","showModalScore","ModalScoreVisible","handleOkScore","ModalScoreLoading","handleCancelScore","ColorMenu","onChangeColor","target","rel","colors","ScoreMenu","onChangeScore","TimeMenu","onChangeTime","renderColorName","scoreError","timeError","className","marginTop","overlay","placement","arrow","block","Joi","string","required","option","min","TextArea","Input","errorStyleText","MakeMultipleChoice","e","onFinish","values","console","log","onFinishFailed","errorInfo","onChangeOptionField","optionValue","onChangeDescription","onAddOption","result","validate","Schemas","error","optionValueError","details","message","some","toUpperCase","onDelete","index","indexOf","splice","renderOptions","radioStyle","display","height","lineHeight","map","Group","DeleteTwoTone","twoToneColor","onAddQuestion","length","descriptionError","optionsError","data","updateQuestion","placeholder","rows","marginLeft","success","MultipleChoice","showModal","deleteQuestion","backgroundColor","actions","EditTwoTone","fontSize","quesNo","addQuestion","MakeFillInTheBlanks","useState","blankValue","bankValueError","setQuestion","i","desc","arr","split","newArr","count","dashcount","forEach","push","join","deleteBlankInDescription","blankValueError","updateDesc","onAddBlank","questionOption","onBlankValueChange","AddQuestionFooter","FILL_IN_THE_BLANKS","MULTIPLE_CHOICE","SELECT_FROM_DROPDOWN","TRUE_AND_FALSE","MakeDropDown","dropdownCount","match","optionCount","CategoryTypes","key","onEnterOptionValue","addOptionFields","onOptionChangeValue","optionIndex","optionArray","newOptionArray","onDeleteOptionValue","ansValue","newOptionValue","onChangeCheckedOptionValue","onAddOptionValueBtn","addOptionFieldsError","optionsValue","includes","newOptionsValue","onDeleteDropDown","str","newDesc","finalDesc","Desc","n","newStr","finaldescription","c","f","onAddDropdown","renderAddDropdownSection","textAlign","CloseCircleTwoTone","margin","PlusOutlined","verticalAlign","checked","ansError","position","right","MakeTrueFalse","setValue","AddQuestion","onCatChange","catergory","menu","CategoryLoader","justifyContent","postion","icon","EditFillInTheBlanks","blankString","Blanks","toggleModal","array","textDecoration","makeDescription","EditDropDown","_handleKeyDown","onKeyDown","DropDownSelect","onRenderDropdownQuestion","dataArray","ansIndex","item2","isNumeric","preventDefault","optionsArr","danger","isNaN","parseFloat","EditTrueFalse","TrueAndFalse","Main","Number","test","changeTime","changeScore","changeColor","btnClick","renderQuestionRows","orientation","flex","flexDirection","alignItems","withRouter","connect","user","dispatch","ActionTypes","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.724d3194.chunk.js","sourcesContent":["\r\nexport const User= (state={username: \"user123\"}, action) =>{\r\n return state;\r\n}","export const ADD_QUESTION=\"ADD_QUESTION\";\r\nexport const DELETE_QUESTION=\"DELETE_QUESTION\";\r\nexport const EDIT_QUESTION=\"EDIT_QUESTION\";\r\nexport const SHOW_QUESTION=\"SHOW_QUESTION\";\r\n\r\nexport const UPDATE_QUESTION=\"UPDATE_QUESTION\";\r\nexport const CHANGE_COLOR=\"CHANGE_COLOR\";\r\nexport const CHANGE_SCORE=\"CHANGE_SCORE\";\r\nexport const CHANGE_TIME=\"CHANGE_TIME\";\r\n","import * as types from \"../types/Questions\";\r\n\r\nexport const Questions = (\r\n  state = {\r\n    questions: [\r\n        {       id:123,\r\n                category: \"Multiple Choice\",\r\n                description: \"How long one-one meeting with the subordinate last.\",\r\n                options: [\"5 mins\", \"10 mins\", \"15 mins\"],\r\n                ans: [\"5 mins\"],\r\n              }, {       id:126,\r\n                category: \"Fill in the Blanks\",\r\n                description: \"____ of America is ____ .but ____ is the capital of Australia\",\r\n                options: [],\r\n                ans: [\"Capital\",\"New York\", \"Sydney\"],\r\n              }, {       id:16,\r\n                category: \"Select From Dropdown\",\r\n                description: \"Islamabad is the capital of  #1 Dropdown#. China is her  #2 Dropdown#\",\r\n                options: [\"Pakistan,India\",\"bestfriend,enemy\"],\r\n                ans: [0,0],\r\n              },{       id:166,\r\n                category: \"True and False\",\r\n                description: \"Is Trump President of America.\",\r\n                options: [],\r\n                ans: [false],\r\n              },\r\n              \r\n    ],color: \"white\",score:1,time:60\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case types.ADD_QUESTION:\r\n       action.payload.id= action.payload.ans[0];\r\n      return { ...state, questions: state.questions.concat(action.payload) };\r\n    case types.DELETE_QUESTION:\r\n        const newArray= state.questions.filter(item=>{return item.id!==action.payload});\r\n        return { ...state, questions: newArray};\r\n     case types.CHANGE_COLOR:\r\n         return { ...state, color: action.payload} \r\n         case types.CHANGE_SCORE:\r\n            return { ...state, score: action.payload}\r\n            case types.CHANGE_TIME:\r\n            return { ...state, time: action.payload}   \r\n        case types.UPDATE_QUESTION:\r\n            const question=action.payload;\r\n           // console.log(\"question: \",question);\r\n            const id= question.id;\r\n          //  console.log(\"id: \",id);\r\n            var foundIndex = state.questions.findIndex(x => x.id == id);\r\n           // console.log(\"found index: \",foundIndex);\r\n            state.questions[foundIndex]=question;\r\n            //console.log(\"state: \",state);\r\n            return { ...state, questions: state.questions}        \r\n\r\n  }\r\n  return state;\r\n};\r\n// {\r\n//     category: \"Multiple Choice\",\r\n//     description: \"How long one-one meeting with the subordinate last.\",\r\n//     options: [\"5 mins\", \"10 mins\", \"15 mins\"],\r\n//     ans: \"5 mins\",\r\n//   },\r\n//   {\r\n//     category: \"Multiple Choice\",\r\n//     description: \"How long one-one meeting with the subordinate last.\",\r\n//     options: [\"5 mins\", \"10 mins\", \"15 mins\"],\r\n//     ans: \"5 mins\",\r\n//   },","export const CHANGE_COLOR=\"CHANGE_COLOR\";\r\nexport const CHANGE_SCORE=\"CHANGE_SCORE\";\r\nexport const CHANGE_TIME=\"CHANGE_TIME\";\r\n\r\nexport const GET_COLOR=\"GET_COLOR\";\r\nexport const GET_SCORE=\"GET_SCORE\";\r\nexport const GET_TIME=\"GET_TIME\";","import * as opt from \"../types/OptionTypes\";\r\n\r\nexport const options = (\r\n  state = {\r\n    score: 0,\r\n    time: 0,\r\n    color: \"white\",\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case opt.CHANGE_COLOR:\r\n      return { ...state, color: action.payload };\r\n    case opt.CHANGE_SCORE:\r\n      return { ...state, score: action.payload };\r\n    case opt.CHANGE_TIME:\r\n      return { ...state, time: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText\r\n  } from 'reactstrap';\r\nexport default class Header extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={ isOpen: false};\r\n\r\n    }\r\n\r\n     setIsOpen=()=>{\r\n     this.setState({isOpen: !this.state.isOpen})\r\n }\r\n toggle=()=>{\r\n     this.setIsOpen();\r\n } \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"light\" fixed=\"top\"  light expand=\"md\">\r\n        <NavbarBrand href=\"/\">DYDQuizMaker</NavbarBrand>\r\n        <NavbarToggler onClick={this.toggle} />\r\n        <Collapse isOpen={this.state.isOpen} navbar>\r\n          {/* <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/components/\">Components</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Options\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  Option 1\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  Option 2\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  Reset\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav> */}\r\n          {/* <NavbarText>Simple Text</NavbarText> */}\r\n        </Collapse>\r\n      </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Modal, Button, InputNumber, Form } from 'antd';\r\nimport React from \"react\";\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 5 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 12 },\r\n    },\r\n  };\r\nexport default class CustomTime extends React.Component {\r\n \r\n\r\n  \r\n\r\n  render() {\r\n    const { visible, loading } = this.props;\r\n    return (\r\n      <>\r\n        \r\n        <Modal\r\n          visible={visible}\r\n          title=\"Custom Time\"\r\n          onOk={this.props.handleOk}\r\n          onCancel={this.props.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.props.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.props.handleOk}>\r\n              Submit\r\n            </Button>,\r\n          ]}\r\n        >\r\n          {/* <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p> */}\r\n          <Form {...this.formItemLayout}>\r\n         \r\n         <Form.Item  hasFeedback validateStatus=\"success\">\r\n           <InputNumber onChange={(val)=> {this.props.onChange(val)}} value={this.props.time}  style={{ width: '100%' }} />\r\n         </Form.Item>\r\n               </Form>\r\n             \r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Modal, Button, InputNumber, Form } from 'antd';\r\nimport React from \"react\";\r\n\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 5 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 24 },\r\n    },\r\n  };\r\n\r\nexport default class CustomScore extends React.Component {\r\n \r\n\r\n  \r\n\r\n  render() {\r\n    const { visible, loading } = this.props;\r\n   // console.log(\"score: \", this.props.score)\r\n    return (\r\n      <>\r\n        \r\n        <Modal\r\n          visible={visible}\r\n          title=\"Custom Score\"\r\n          onOk={this.props.handleOk}\r\n          onCancel={this.props.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.props.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.props.handleOk}>\r\n              Submit\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout}>\r\n         \r\n    <Form.Item  hasFeedback validateStatus=\"success\">\r\n      <InputNumber onChange={(val)=> {this.props.onChange(val)}} value={this.props.score}  style={{ width: '100%' }} />\r\n    </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export const LIGHTBLUE=\"#C0E0FD\";\r\nexport const LIGHTYELLOW= \"#FFFFC3\";\r\nexport const LIGHTGREEN=\"#E0F7CC\";\r\nexport const ERROR_COLOR=\"#eb2f96\";\r\n","import React, { Component } from 'react'\r\nimport {Button, Menu, Dropdown } from \"antd\";\r\nimport CustomTime from \"./modals/CustomTime\";\r\nimport CustomScore from \"./modals/CustomScore\";\r\nimport * as colors from \"../util/colors\";\r\n\r\nexport default class Options extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={ \r\n            ModalTimeVisible: false,\r\n            ModalTimeLoading: false,\r\n            ModalScoreVisible: false,\r\n            ModalScoreLoading: false, \r\n          \r\n            scoreError: false,\r\n            timeError: false,\r\n          \r\n        }\r\n    }\r\n  componentDidMount() {}\r\n  \r\n  showModalTime = () => {\r\n    this.setState({\r\n        ModalTimeVisible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ ModalTimeLoading: true });\r\n    setTimeout(() => {\r\n      this.setState({ ModalTimeLoading: false, ModalTimeVisible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ ModalTimeVisible: false });\r\n  };\r\n\r\n  \r\n  showModalScore = () => {\r\n    this.setState({\r\n        ModalScoreVisible: true,\r\n    });\r\n  };\r\n\r\n  handleOkScore = () => {\r\n    this.setState({ ModalScoreLoading: true });\r\n    setTimeout(() => {\r\n      this.setState({ ModalScoreLoading: false, ModalScoreVisible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancelScore = () => {\r\n    this.setState({ ModalScoreVisible: false });\r\n  };\r\n\r\n    ColorMenu =()=> {\r\n        return(\r\n          <Menu>\r\n               <Menu.Item onClick={()=>{this.props.onChangeColor(\"white\");}}>\r\n            <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n              Default\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTBLUE);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" >\r\n              Light Blue\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTYELLOW);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Light Yellow\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTGREEN);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Light Green\r\n            </a>\r\n          </Menu.Item>\r\n         \r\n        </Menu>\r\n    );}\r\n    ScoreMenu =()=> {\r\n      return(\r\n        <Menu>\r\n             <Menu.Item onClick={()=>{this.props.onChangeScore(1);}}>\r\n          <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n            1pt\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeScore(2);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" >\r\n            2pt\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeScore(5);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            5pt\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={this.showModalScore}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            custom\r\n          </a>\r\n        </Menu.Item>\r\n       \r\n      </Menu>\r\n  );}\r\n  TimeMenu =()=> {\r\n      return(\r\n        <Menu>\r\n             <Menu.Item onClick={()=>{this.props.onChangeTime(10);}}>\r\n          <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n            10 mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeTime(15);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" >\r\n            15 mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeTime(30);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            30mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeTime(60);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            60 mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=> {this.showModalTime();}}>\r\n        <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n            custom\r\n          </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n  );}\r\n\r\n  renderColorName=(color)=>{\r\n    if(color===colors.LIGHTYELLOW){\r\n      return \"Light Yellow\";\r\n    }else if(color===colors.LIGHTGREEN){\r\n      return \"Light Green\";\r\n    }else if(color===colors.LIGHTBLUE){\r\n      return \"Light Blue\";\r\n    }else{\r\n      return \"White\";\r\n    }\r\n  }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n            <div style={{marginTop: 10}} className=\"col-md-3 offset-md-1  offset-sm-1 col-sm-10 offset-1 col-10\">\r\n            <Dropdown overlay={this.ColorMenu} placement=\"bottomLeft\" arrow>\r\n        <Button block className=\"\">Choose Color : {this.renderColorName(this.props.color)}</Button>\r\n    </Dropdown>\r\n            </div>\r\n\r\n            <div style={{marginTop: 10}} className=\"col-md-3 offset-md-1 offset-sm-1  col-sm-10 offset-1 col-10\">\r\n            <Dropdown overlay={this.ScoreMenu} placement=\"bottomLeft\" arrow>\r\n        <Button  block className=\"\">Choose Score : {this.props.score} pts</Button>\r\n    </Dropdown>\r\n    <CustomScore onChange={this.props.onChangeScore} score={this.props.score} visible={this.state.ModalScoreVisible} loading={this.state.ModalScoreLoading} handleCancel={this.handleCancelScore} handleOk={this.handleOkScore}  />\r\n            </div>\r\n            <div style={{marginTop: 10}} className=\"offset-1 col-10  col-md-3 offset-md-1 offset-sm-1  col-sm-10  \">\r\n            <Dropdown overlay={this.TimeMenu} placement=\"bottomLeft\" arrow>\r\n        <Button  block className=\"\">Choose Time : {this.props.time}</Button>\r\n      \r\n    </Dropdown>\r\n    <CustomTime onChange={this.props.onChangeTime} time={this.props.time} visible={this.state.ModalTimeVisible} loading={this.state.ModalTimeLoading} handleCancel={this.handleCancel} handleOk={this.handleOk}  />\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import Joi from \"joi-browser\";\r\nexport const description  = {\r\n    description: Joi.string().required()\r\n  };\r\nexport const option  = {\r\n    option: Joi.string().required().min(1)\r\n  };  ","import React, { Component } from \"react\";\r\nimport { Input,  Button, Radio, Divider } from \"antd\";\r\nimport { DeleteTwoTone } from \"@ant-design/icons\";\r\nimport Joi from \"joi-browser\";\r\nimport * as Schemas from \"../../Schemas/Mcqs\";\r\nimport \"./MakeMultipleChoice.css\";\r\nconst { TextArea } = Input;\r\n\r\nconst errorStyleText = {\r\n  color: \"#eb2f96\",\r\n};\r\nexport default class MakeMultipleChoice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: this.props.question.description,\r\n      descriptionError: \"\",\r\n      optionValue: \"\",\r\n      optionValueError: \"\",\r\n      options: this.props.question.options,\r\n      optionsError: \"\",\r\n      value: this.props.question.ans[0],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  onChange = (e) => {\r\n    // console.log(\"radio checked\", e.target.value);\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  onChangeOptionField = (val) => {\r\n    //console.log(val.target.value);\r\n    const value = val.target.value;\r\n    this.setState({ optionValue: value });\r\n\r\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\r\n    // if(result.error)\r\n    //  console.log(result.error.details[0].message);\r\n\r\n    //const errors = {};\r\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\r\n    // console.log(\"errors: \", errors);\r\n  };\r\n\r\n  onChangeDescription = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ description: value });\r\n  };\r\n  onAddOption = () => {\r\n    const result = Joi.validate(\r\n      { option: this.state.optionValue },\r\n      Schemas.option\r\n    );\r\n    if (result.error) {\r\n      this.setState({ optionValueError: result.error.details[0].message });\r\n    } else {\r\n      const found = this.state.options.some(\r\n        (item) => item.toUpperCase() == this.state.optionValue.toUpperCase()\r\n      );\r\n      if (!found) {\r\n        this.setState({\r\n          options: this.state.options.concat(this.state.optionValue),\r\n          optionValueError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ optionValueError: \"Already exists\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  onDelete = (option) => {\r\n    let options = this.state.options;\r\n    const index = options.indexOf(option);\r\n    if (index > -1) {\r\n      options.splice(index, 1);\r\n    }\r\n    this.setState({ options: options });\r\n  };\r\n\r\n  renderOptions = () => {\r\n   \r\n    const radioStyle = {\r\n      display: \"inline-block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n    const { value } = this.state;\r\n    return this.state.options.map((item) => {\r\n      return (\r\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\r\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\r\n            <Radio.Group onChange={this.onChange} value={value}>\r\n              <Radio style={radioStyle} value={item}>\r\n                {item}\r\n              </Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <div className=\"col-2 col-sm-1 \">\r\n            <Button onClick={() => this.onDelete(item)}>\r\n              {\" \"}\r\n              <span>\r\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n          {/* <div className=\"col-2 col-sm-1 \">\r\n       \r\n         <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\r\n     \r\n        </div> */}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  onAddQuestion = () => {\r\n    if (this.state.options.length > 0) {\r\n      // options are present\r\n      const result = Joi.validate(\r\n        { description: this.state.description },\r\n        Schemas.description\r\n      );\r\n      if (result.error) {\r\n        this.setState({\r\n          descriptionError: result.error.details[0].message,\r\n          optionsError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n        if (this.state.value) {\r\n          //      ADD to DATABASE\r\n          // Closing modal\r\n          const ans=[];\r\n          ans[0]=this.state.value;\r\n          const data={category: \"Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans, id:this.props.question.id};\r\n          this.props.updateQuestion(data);\r\n          this.props.handleOk();\r\n        } else {\r\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\r\n        }\r\n\r\n        \r\n      }\r\n    } else {\r\n      // options error : no option present\r\n      this.setState({ optionsError: \"Please add atleast one option\" });\r\n    }\r\n  };\r\n  render() { \r\n    const radioStyle = {\r\n      display: \"inline-block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n    const { value } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\r\n            <Input\r\n              placeholder=\"Enter Option Here\"\r\n              value={this.state.optionValue}\r\n              onChange={(val) => {\r\n                this.onChangeOptionField(val);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-3\">\r\n            <Button\r\n              className=\"add-option\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={this.onAddOption}\r\n            >\r\n              {\" \"}\r\n              Add Option\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.optionValueError}</p>\r\n            <br />\r\n            <p>** Please Select Correct Option **</p>\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        {this.renderOptions()}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\r\n            <p style={errorStyleText}> {this.state.optionsError} </p>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-8\">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 \">\r\n            <Button block\r\n              onClick={() => {\r\n                this.onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Radio,  Card, Modal } from 'antd';\r\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\r\nimport EditMultipleChoice from \"./EditMultipleChoice\";\r\nexport default class MultipleChoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 1,\r\n            visible: false,\r\n          };\r\n    }\r\n    showModal = () => {\r\n      this.setState({ visible: true });\r\n    };\r\n  \r\n    handleOk = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n  \r\n    handleCancel = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n\r\n    onDelete=()=>{\r\n      this.props.deleteQuestion(this.props.data.id);\r\n    }\r\n      onChange = e => {\r\n        //console.log('radio checked', e.target.value);\r\n        this.setState({\r\n          value: e.target.value,\r\n        });\r\n      };\r\n    render() {\r\n        const radioStyle = {\r\n          display: 'block',\r\n          height: '30px',\r\n          lineHeight: '30px',\r\n        };\r\n        const { value } = this.state;\r\n        return (\r\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\r\n                <Card style={{backgroundColor:this.props.color}}\r\n                  actions={[\r\n                    \r\n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\r\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\r\n                  ]}>\r\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\r\n                <Radio.Group value={this.props.data.ans[0]}>\r\n                    {this.props.data.options.map(index=>{\r\n                      \r\n                        return(\r\n                            <Radio key={index} style={radioStyle} value={index}>\r\n                            {index}\r\n                          </Radio>\r\n                        );\r\n                    })}\r\n           \r\n                      \r\n          </Radio.Group>\r\n                </Card>\r\n                <Modal\r\n              style={{ width: 1000 }}\r\n              title=\"Edit Question\"\r\n              visible={this.state.visible}\r\n              onCancel={this.handleCancel}\r\n              width={1200}\r\n              footer={null}\r\n            >\r\n            <EditMultipleChoice updateQuestion={this.props.updateQuestion} question={this.props.data} handleOk={this.handleOk} handleCancel={this.handleCancel}/>\r\n            </Modal>\r\n            </div>\r\n       \r\n        );\r\n      }\r\n    \r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input,  Button, Radio, Divider } from \"antd\";\r\nimport { DeleteTwoTone } from \"@ant-design/icons\";\r\nimport Joi from \"joi-browser\";\r\nimport * as Schemas from \"../../Schemas/Mcqs\";\r\nimport \"./MakeMultipleChoice.css\";\r\nconst { TextArea } = Input;\r\n\r\nconst errorStyleText = {\r\n  color: \"#eb2f96\",\r\n};\r\nexport default class MakeMultipleChoice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\",\r\n      descriptionError: \"\",\r\n      optionValue: \"\",\r\n      optionValueError: \"\",\r\n      options: [],\r\n      optionsError: \"\",\r\n      value: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  onChange = (e) => {\r\n    // console.log(\"radio checked\", e.target.value);\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  onChangeOptionField = (val) => {\r\n    //console.log(val.target.value);\r\n    const value = val.target.value;\r\n    this.setState({ optionValue: value });\r\n\r\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\r\n    // if(result.error)\r\n    //  console.log(result.error.details[0].message);\r\n\r\n    //const errors = {};\r\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\r\n    // console.log(\"errors: \", errors);\r\n  };\r\n\r\n  onChangeDescription = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ description: value });\r\n  };\r\n  onAddOption = () => {\r\n    const result = Joi.validate(\r\n      { option: this.state.optionValue },\r\n      Schemas.option\r\n    );\r\n    if (result.error) {\r\n      this.setState({ optionValueError: result.error.details[0].message });\r\n    } else {\r\n      const found = this.state.options.some(\r\n        (item) => item.toUpperCase() == this.state.optionValue.toUpperCase()\r\n      );\r\n      if (!found) {\r\n        this.setState({\r\n          options: this.state.options.concat(this.state.optionValue),\r\n          optionValueError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ optionValueError: \"Already exists\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  onDelete = (option) => {\r\n    let options = this.state.options;\r\n    const index = options.indexOf(option);\r\n    if (index > -1) {\r\n      options.splice(index, 1);\r\n    }\r\n    this.setState({ options: options });\r\n  };\r\n\r\n  renderOptions = () => {\r\n   \r\n    const radioStyle = {\r\n      display: \"inline-block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n    const { value } = this.state;\r\n    return this.state.options.map((item) => {\r\n      return (\r\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\r\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\r\n            <Radio.Group onChange={this.onChange} value={value}>\r\n              <Radio style={radioStyle} value={item}>\r\n                {item}\r\n              </Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <div className=\"col-2 col-sm-1 \">\r\n            <Button onClick={() => this.onDelete(item)}>\r\n              {\" \"}\r\n              <span>\r\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n          {/* <div className=\"col-2 col-sm-1 \">\r\n       \r\n         <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\r\n     \r\n        </div> */}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  onAddQuestion = () => {\r\n    if (this.state.options.length > 0) {\r\n      // options are present\r\n      const result = Joi.validate(\r\n        { description: this.state.description },\r\n        Schemas.description\r\n      );\r\n      if (result.error) {\r\n        this.setState({\r\n          descriptionError: result.error.details[0].message,\r\n          optionsError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n        if (this.state.value) {\r\n          //      ADD to DATABASE\r\n          // Closing modal\r\n          const ans=[];\r\n          ans[0]=this.state.value;\r\n          const data={category: \"Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans};\r\n          this.props.addQuestion(data);\r\n          this.props.handleOk();\r\n        } else {\r\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\r\n        }\r\n\r\n        \r\n      }\r\n    } else {\r\n      // options error : no option present\r\n      this.setState({ optionsError: \"Please add atleast one option\" });\r\n    }\r\n  };\r\n  render() { \r\n    const radioStyle = {\r\n      display: \"inline-block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n    const { value } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\r\n            <Input\r\n              placeholder=\"Enter Option Here\"\r\n              value={this.state.optionValue}\r\n              onChange={(val) => {\r\n                this.onChangeOptionField(val);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-3\">\r\n            <Button\r\n              className=\"add-option\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={this.onAddOption}\r\n            >\r\n              {\" \"}\r\n              Add Option\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.optionValueError}</p>\r\n            <br />\r\n            <p>** Please Select Correct Option **</p>\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        {this.renderOptions()}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\r\n            <p style={errorStyleText}> {this.state.optionsError} </p>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                this.onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              Add Question\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import Joi from \"joi-browser\";\r\nexport const description  = {\r\n    description: Joi.string().required()\r\n  };\r\nexport const option  = {\r\n    option: Joi.string().required().min(1)\r\n  };  ","import React, {useState} from 'react'\r\nimport {Button, Divider, Input} from \"antd\";\r\nimport {DeleteTwoTone} from \"@ant-design/icons\";\r\nimport Joi from \"joi-browser\";\r\nimport \"./Blanks.css\";\r\nimport * as Schemas from \"../../Schemas/BlanksSchema\";\r\nconst errorStyleText = {\r\n    color: \"#eb2f96\",\r\n  };\r\n  const { TextArea } = Input;\r\n  const blankString=\"____\";\r\nexport  const MakeFillInTheBlanks = (props) => {\r\n    const [question, setQuestion] = useState({\r\n       \r\n        category: \"Fill in the Blanks\",\r\n        description: \"\",\r\n        options: [],\r\n        ans: [],\r\n        \r\n        descriptionError: \"\",\r\n        blankValue: \"\",\r\n        bankValueError: \"\",\r\n    });\r\n    const deleteBlankInDescription=(index)=>{\r\n      console.log(\"index: \", index)\r\n      let desc=question.description;\r\n      const arr = desc.split(\"\");\r\n      let newArr=[];\r\n      let count=0;\r\n      let dashcount=0;\r\n      arr.forEach((item)=>{\r\n     \r\n        if(item === \"_\"){\r\n          console.log(\"dash\");\r\n          if(index===count){\r\n           \r\n\r\n          }else{\r\n            dashcount++;\r\n            newArr.push(item);\r\n           \r\n          }\r\n            \r\n\r\n        }else{\r\n          if(dashcount===4){\r\n            count++;\r\n            dashcount=0;\r\n          }\r\n        \r\n          newArr.push(item);\r\n        }\r\n      });\r\n     \r\n    \r\n      const newDesc= newArr.join(\"\");\r\n      return newDesc;\r\n    };\r\n   const onDelete = (option, i) => {\r\n        let options = question.options;\r\n        const index = options.indexOf(option);\r\n        if (index > -1) {\r\n          options.splice(index, 1);\r\n        }\r\n       const desc= deleteBlankInDescription(i);\r\n       \r\n        setQuestion({ ...question,options: options, description: desc });\r\n      };\r\n      const onBlankValueChange=(e,index)=>{\r\n        const value = e.target.value;\r\n        let questionOption = question.options;\r\n        questionOption[index]= value;\r\n        setQuestion({ ...question,options: questionOption});\r\n\r\n    };\r\n    const renderOptions = () => {\r\n  \r\n      const {options}= question;\r\n        \r\n        return options.map((item, index) => {\r\n          return (\r\n            <div style={{ marginTop: 7 }} id={item} className=\"row\">\r\n              <div className=\"col-5 col-sm-5 offset-sm-1\">\r\n               <Input onChange={(e)=>{onBlankValueChange(e,index);}} value={item}/>\r\n              </div>\r\n              <div className=\"col-2 col-sm-1 \">\r\n                <Button onClick={() => onDelete(item, index)}>\r\n                  {\" \"}\r\n                  <span>\r\n                    <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n                  </span>\r\n                </Button>\r\n              </div>\r\n              {/* <div className=\"col-2 col-sm-1 \">\r\n           \r\n             <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\r\n         \r\n            </div> */}\r\n            </div>\r\n          );\r\n        });\r\n      };\r\n  \r\nconst         onAddBlank=()=>{\r\n    if(question.blankValue){\r\n        const found = question.options.some(\r\n            (item) => item.toUpperCase() == question.blankValue.toUpperCase()\r\n          );\r\n          if (!found) {\r\n              let updateDesc= question.description;\r\n              \r\n              updateDesc= updateDesc.concat(blankString);\r\n\r\n            setQuestion({ ...question,options:question.options.concat(question.blankValue),blankValueError: \"\", description: updateDesc});\r\n\r\n          } else {\r\n              setQuestion({ ...question, blankValueError: \"Already exists\"})\r\n            \r\n          }\r\n    }else{\r\n        setQuestion({ ...question, blankValueError: \"Please enter Value and then Press Button !\"})\r\n    }\r\n};\r\n\r\n\r\nconst onAddQuestion = () => {\r\n    if (question.options.length > 0) {\r\n      // options are present\r\n      const result = Joi.validate(\r\n        { description: question.description },\r\n        Schemas.description\r\n      );\r\n      if (result.error) {\r\n        setQuestion({ ...question,\r\n          descriptionError: result.error.details[0].message,\r\n          optionsError: \"\",\r\n        });\r\n      } else {\r\n        setQuestion({  ...question, descriptionError: \"\", optionsError: \"\" });\r\n        \r\n          //      ADD to DATABASE\r\n          // Closing modal\r\n          const ans=question.options;\r\n         \r\n          const data={category: \"Fill in the Blanks\", description: question.description, options: [], ans: ans};\r\n          props.addQuestion(data);\r\n          props.handleOk();\r\n    \r\n\r\n        \r\n      }\r\n    } else {\r\n      // options error : no option present\r\n      setQuestion({ ...question, optionsError: \"Please add atleast one option\" });\r\n    }\r\n  };\r\n \r\n    return (\r\n        <>\r\n        <div className=\"row no-gutters\">\r\n          <div  className=\"col-12 col-sm-7 offset-sm-1 bankValueStyle\">\r\n            <Input\r\n              placeholder=\"Enter Blank Value Here\"\r\n              value={question.blankValue}\r\n              onChange={(e) => {\r\n                setQuestion({ ...question,blankValue: e.target.value});\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button\r\n              className=\"add-blank\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={()=>{onAddBlank();}}\r\n            >\r\n              {\" \"}\r\n              Add Blank\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{question.blankValueError}</p>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n         <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={question.description}\r\n              onChange={(e)=>setQuestion({...question,description: e.target.value})}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        {renderOptions()}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{question.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              Add Question\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Button} from \"antd\";\r\nexport default class AddQuestionFooter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleOk();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              {this.props.type}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","export const FILL_IN_THE_BLANKS=\"Fill in the Blanks\";\r\nexport const MULTIPLE_CHOICE=\"Multiple Choice\";\r\nexport const SELECT_FROM_DROPDOWN= \"Select From Dropdown\";\r\nexport const TRUE_AND_FALSE= \"True and False\";\r\nexport const MULTIPLE_SELECT= \"Multiple Select\";","import React, { Component } from \"react\";\r\nimport AddQuestionFooter from \"../../AddQuestionFooter\";\r\nimport { Button, Input, Checkbox } from \"antd\";\r\nimport {\r\n  CloseCircleTwoTone,\r\n  PlusOutlined,\r\n  DeleteTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport \"./Styles.css\";\r\nimport { ERROR_COLOR } from \"../../../util/colors\";\r\nimport * as CategoryTypes from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\nexport default class MakeDropDown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\",\r\n      options: [],\r\n      addOptionFields: [],\r\n      addOptionFieldsError: [],\r\n\r\n      ans: [],\r\n\r\n      ansError: \"\",\r\n      descriptionError: \"\",\r\n    };\r\n  }\r\n\r\n  onAddQuestion = () => {\r\n      if(this.state.description.length === 0){\r\n          this.setState({descriptionError: \"Description cannot be Empty!\"});\r\n      }else{\r\n        var temp = this.state.description;\r\n        var dropdownCount = (temp.match(/Dropdown/g) || []).length;\r\n        var optionCount= this.state.options.length;\r\n        if(dropdownCount > optionCount){\r\n            this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n        }else if(dropdownCount === optionCount){\r\n          if(optionCount>0){\r\n            const data={category: CategoryTypes.SELECT_FROM_DROPDOWN, description: this.state.description, options: this.state.options, ans: this.state.ans};\r\n           // console.log(\"data: \", data);\r\n            this.props.addQuestion(data);\r\n            this.props.handleOk();\r\n          }else{\r\n            this.setState({descriptionError: \"Add atleast one Dropdown\"});\r\n          }\r\n        }\r\n        else{\r\n            this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n        }\r\n      }\r\n    \r\n  };\r\n  onChangeDescription = (e) => {\r\n    let value = e.target.value;\r\n    if (e.key === 'Enter') {\r\n     // console.log('do validate');\r\n    \r\n      value= value + \"\\n\";\r\n      //console.log(\"value: \",value);\r\n      this.setState({ description: value });\r\n    }\r\n    console.log(value);\r\n    this.setState({ description: value });\r\n  };\r\n  onEnterOptionValue = (index, e) => {\r\n    const value = e.target.value;\r\n    let newArr = this.state.addOptionFields.splice();\r\n    newArr[index] = value;\r\n    this.setState({ addOptionFields: newArr });\r\n  };\r\n  onOptionChangeValue = (e, index, optionIndex) => {\r\n    const value = e.target.value;\r\n    let optionArray = this.state.options[index].split(\",\");\r\n    optionArray[optionIndex] = value;\r\n    let newOptionArray = optionArray.join(\",\");\r\n    optionArray = this.state.options;\r\n    optionArray[index] = newOptionArray;\r\n    this.setState({ options: optionArray });\r\n  };\r\n  onDeleteOptionValue = (index, optionIndex) => {\r\n    let optionValue = this.state.options[index].split(\",\");\r\n    let del = optionValue.splice(optionIndex, 1);\r\n    let options = this.state.options;\r\n    if (optionIndex === this.state.ans[index]) {\r\n      //if we remove checked then make ans 0 index\r\n      let ans = this.state.ans;\r\n      ans[index] = 0;\r\n      this.setState({ ans });\r\n    }\r\n\r\n    if (optionIndex < this.state.ans[index]) {\r\n      let ans = this.state.ans;\r\n      let ansValue = this.state.ans[index];\r\n      // console.log(\"ans value: \", ansValue);\r\n      ans[index] = ansValue - 1;\r\n      this.setState({ ans });\r\n    }\r\n    const newOptionValue = optionValue.join(\",\");\r\n    options[index] = newOptionValue;\r\n    this.setState({ options: options });\r\n  };\r\n  onChangeCheckedOptionValue = (index, optionIndex) => {\r\n    let ans = this.state.ans;\r\n    ans[index] = optionIndex;\r\n    this.setState({ ans: ans });\r\n  };\r\n  onAddOptionValueBtn = (index) => {\r\n    const value = this.state.addOptionFields[index];\r\n    let addOptionFields = this.state.addOptionFields;\r\n    //addOptionFields--->index\r\n\r\n    //if emty display errors\r\n\r\n    if (value.length === 0) {\r\n      let err = \"Please Enter Value and then Add\";\r\n      let addOptionFieldsError = this.state.addOptionFieldsError;\r\n      addOptionFieldsError[index] = err;\r\n      this.setState({ addOptionFieldsError });\r\n      setTimeout(() => {\r\n        addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = \"\";\r\n        this.setState({ addOptionFieldsError });\r\n      }, 2000);\r\n    } else {\r\n      //check if same exists\r\n      let optionsValue = this.state.options[index].split(\",\");\r\n      if (optionsValue.includes(value)) {\r\n        let err = \"Already Exists\";\r\n        let addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = err;\r\n        this.setState({ addOptionFieldsError });\r\n        setTimeout(() => {\r\n          addOptionFieldsError = this.state.addOptionFieldsError;\r\n          addOptionFieldsError[index] = \"\";\r\n          this.setState({ addOptionFieldsError });\r\n        }, 2000);\r\n      } else {\r\n          if(optionsValue[0]===\"\"){\r\n              optionsValue[0]=value;\r\n              const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n          }else{\r\n        optionsValue.push(value);\r\n        const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n        // adding to options //\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  onDeleteDropDown = (index) => {\r\n    let { ans, options, addOptionFields, addOptionFieldsError, description} = this.state;\r\n    ans.splice(index,1);\r\n   \r\n    options.splice(index,1);\r\n    addOptionFields.splice(index,1);\r\n    addOptionFieldsError.splice(index,1);\r\n    const str= \"#\"+(index+1)+\" Dropdown#\";\r\n    const newDesc=description.split(str).join(\"\");\r\n    let count=1; let first=true; let skip=false;\r\n    let finalDesc=newDesc.split(\"Dropdown#\");\r\n    let Desc=[];\r\n  //  console.log(\"newDesc: \", newDesc);\r\n    //console.log(\"finaldescBefore: \", finalDesc);//\r\n    finalDesc.forEach((item,index)=>{\r\n      \r\n         const length= item.length;\r\n       \r\n         if(item.length>1){\r\n             let n=length-3;\r\n            \r\n             if(item[n]===\"#\"){\r\n                 n++;\r\n                 let str=item.split(\"\");\r\n                 str[n]=count+\"\";\r\n                 let newStr=str.join(\"\");\r\n                 count++;\r\n                // console.log(\"str: \", newStr);\r\n                 Desc.push(newStr);\r\n            \r\n             }else{\r\n               // console.log(\"item: \", item);\r\n                Desc.push(item);\r\n             }\r\n\r\n         }else{\r\n          //  console.log(\"item: \", item);\r\n            Desc.push(item);\r\n         }\r\n  \r\n    });\r\n \r\n    let finaldescription= Desc.join(\"Dropdown#\");\r\n    if(Desc.length===1){\r\n        var c = (finaldescription.match(/Dropdown/g) || []).length;\r\n        var f = (finaldescription.match(/#/g) || []).length;\r\n        if(c===0 && f===1){\r\n        finaldescription=finaldescription+\"Dropdown#\";}\r\n    }\r\n  \r\n    this.setState({ans, options, addOptionFields, addOptionFieldsError, description: finaldescription});\r\n  }\r\n\r\n  onAddDropdown = () => {\r\n        let {description, ans, options, addOptionFields, addOptionFieldsError} = this.state;\r\n        let length = this.state.options.length;\r\n        description = description + \" #\"+(length+1)+\" Dropdown#\";\r\n        ans[length]=0;\r\n        options[length]=\"\";\r\n        addOptionFields[length]=\"\";\r\n        addOptionFieldsError[length]=\"\";\r\n        this.setState({description, ans, options, addOptionFields, addOptionFieldsError});\r\n  }\r\n\r\n  renderAddDropdownSection = (item, index) => {\r\n    const optionArray = item.split(\",\"); //1,2,3\r\n    return (\r\n      <div style={{textAlign: \"center\"}} className=\"col-11 col-sm-4 offset-sm-1 dropdown-container-style\">\r\n        <div id=\"box\">\r\n          <Button onClick={()=>{this.onDeleteDropDown(index);}} type=\"text\" id=\"icon-delete-dropdown\">\r\n            <span>\r\n              <CloseCircleTwoTone\r\n                style={{ fontSize: 20 }}\r\n                twoToneColor=\"#eb2f96\"\r\n              />\r\n            </span>\r\n          </Button>\r\n        </div>\r\n        {/* input field and add button */}\r\n        <h5 style={{margin : 7}}>Dropdown #{index+1}</h5>\r\n        <div\r\n          style={{ marginTop: 10 }}\r\n          className=\"row no-gutters enter-option-value-container\"\r\n        >\r\n          <div className=\"enter-option-value-input\">\r\n            <Input\r\n              value={this.state.addOptionFields[index]}\r\n              onChange={(e) => this.onEnterOptionValue(index, e)}\r\n              placeholder=\"Enter Option Value to Add\"\r\n            />\r\n          </div>\r\n          <div className=\"enter-option-value-add-btn\">\r\n            <Button\r\n              onClick={() => {\r\n                this.onAddOptionValueBtn(index);\r\n              }}\r\n              type=\"primary\"\r\n            >\r\n              <span>\r\n                <PlusOutlined\r\n                  style={{\r\n                    color: \"white\",\r\n                    verticalAlign: \"baseline\",\r\n                    fontSize: 18,\r\n                  }}\r\n                />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        {/* error row */}\r\n        <div className=\"row no-gutters\">\r\n          <p style={{ color: ERROR_COLOR }}>\r\n            {this.state.addOptionFieldsError[index]}\r\n          </p>\r\n        </div>\r\n        {/* List of options */}\r\n\r\n        {this.state.options[index] !== \"\"\r\n          ? optionArray.map((item, optionIndex) => {\r\n              let checked = false;\r\n              if (optionIndex === this.state.ans[0]) {\r\n                checked = true;\r\n              }\r\n              return (\r\n                <div className=\"row \">\r\n                  <div className=\"checkbox-div\">\r\n                    <Button type=\"text\">\r\n                      <Checkbox\r\n                        checked={checked}\r\n                        onChange={(e) => {\r\n                          this.onChangeCheckedOptionValue(index, optionIndex);\r\n                        }}\r\n                      />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"option-value-div\">\r\n                    <Input\r\n                      value={item}\r\n                      onChange={(e) => {\r\n                        this.onOptionChangeValue(e, index, optionIndex);\r\n                      }}\r\n                      placeholder=\"Option Value\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"option-value-delete-div\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.onDeleteOptionValue(index, optionIndex);\r\n                      }}\r\n                    >\r\n                      <span>\r\n                        <DeleteTwoTone\r\n                          twoToneColor=\"#eb2f96\"\r\n                          style={{ verticalAlign: \"baseline\" }}\r\n                        />{\" \"}\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    // console.log(this.state.ans);\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* <h1>Select from Dropdown</h1> */}\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{ color: ERROR_COLOR }}>\r\n                {this.state.descriptionError}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\r\n                <div >\r\n                <Button onClick={()=>this.onAddDropdown()} type=\"primary\" style={{position: \"absolute\", right :13}}>Add Dropdown</Button>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <br/><br/>\r\n        <div className=\"row\">\r\n          {this.state.options.map((item, index) => {\r\n            return <>{this.renderAddDropdownSection(item, index)}</>;\r\n          })}\r\n        </div>\r\n        <AddQuestionFooter\r\n        type= \"Add Question\"\r\n          handleCancel={this.props.handleCancel}\r\n          handleOk={this.onAddQuestion}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Input, Divider, Button, Radio} from \"antd\";\r\nimport {ERROR_COLOR} from \"../../../util/colors\";\r\nimport { TRUE_AND_FALSE} from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\n\r\nexport default function MakeTrueFalse(props) {\r\n    const [question, setQuestion] = useState({\r\n       \r\n        category: \"Fill in the Blanks\",\r\n        description: \"\",\r\n        options: [],\r\n        ans: [],\r\n        \r\n        descriptionError: \"\",\r\n       \r\n    });\r\n    const [value, setValue] = useState(true);\r\n\r\n\r\n    const onAddQuestion = () => {\r\n        if(question.description.length===0){\r\n            setQuestion({ ...question,descriptionError: \"Description Empty!!!\"});\r\n        }else{\r\n            \r\n        let ans=[];\r\n        ans[0]=value;\r\n             \r\n              const data={category: TRUE_AND_FALSE, description: question.description, options: [], ans: ans,descriptionError: \"\" };\r\n             //console.log(data);\r\n               props.addQuestion(data);\r\n              props.handleOk();\r\n        }\r\n      };\r\n\r\n\r\n\r\n      const onChange = e => {\r\n       // console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n      };\r\n      const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n      };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n       \r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{color:ERROR_COLOR}}>{question.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n         <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={question.description}\r\n              onChange={(e)=>setQuestion({...question,description: e.target.value})}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n          <Radio.Group onChange={onChange} value={value}>\r\n      <Radio style={radioStyle} value={true}>True</Radio>\r\n      <Radio style={radioStyle} value={false}>False</Radio>\r\n      \r\n    </Radio.Group>\r\n          </div>\r\n        </div>\r\n        \r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              Add Question\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Menu, Modal, Dropdown, Divider,} from \"antd\";\r\nimport \"./css/main.css\";\r\nimport MakeMultipleChoice from \"./Categories/Multiple Choice/MakeMultipleChoice\"\r\nimport {MakeFillInTheBlanks} from \"./Categories/Blanks/MakeFillInTheBlanks\";\r\nimport MakeDropDown from \"./Categories/Select-From-dropdown/MakeDropDown\";\r\nimport MakeTrueFalse from \"./Categories/TrueAndFalse/MakeTrueFalse\";\r\nimport * as CategoryTypes from \"../util/Categories\";\r\n\r\nexport default class AddQuestion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { visible: false, catergory: \"\"};\r\n  }\r\n\r\n  componentDidMount(){\r\n   // this.props.addQuestion();\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  onCatChange=(value)=>{\r\n    this.setState({catergory: value});\r\n    \r\n  }\r\n\r\n   menu = () =>{\r\n       return (\r\n        <Menu>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.MULTIPLE_CHOICE);}}>\r\n          \r\n              Multiple Choice\r\n         \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.FILL_IN_THE_BLANKS);}}>\r\n           \r\n              Fill in the Blanks\r\n   \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.SELECT_FROM_DROPDOWN);}}>\r\n          \r\n              Select From Dropdown\r\n     \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.TRUE_AND_FALSE);}}>\r\n          \r\n              True and False\r\n     \r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n   }\r\n\r\n \r\n   CategoryLoader=()=>{\r\n      \r\n       if(this.state.catergory === \"Multiple Choice\"){\r\n        \r\n           return (<MakeMultipleChoice addQuestion={this.props.addQuestion} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }else if (this.state.catergory === \"Fill in the Blanks\"){\r\n        return (<MakeFillInTheBlanks addQuestion={this.props.addQuestion}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }else if (this.state.catergory === CategoryTypes.SELECT_FROM_DROPDOWN){\r\n        return (<MakeDropDown addQuestion={this.props.addQuestion}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }else if (this.state.catergory === CategoryTypes.TRUE_AND_FALSE){\r\n        return (<MakeTrueFalse addQuestion={this.props.addQuestion}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       return null;\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12\">\r\n        <div style={{ display: \"flex\" }} className=\"block\">\r\n          <hr />\r\n          <div\r\n            style={{\r\n              justifyContent: \"center\",\r\n              textAlign: \"center\",\r\n              postion: \"fixed\",\r\n            }}\r\n            className=\"mx-auto\"\r\n          >\r\n            <Button\r\n              block\r\n              type=\"primary\"\r\n              icon={\r\n                <PlusOutlined\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    verticalAlign: \"baseline\",\r\n                  }}\r\n                />\r\n              }\r\n              onClick={this.showModal}\r\n            >\r\n              Questions\r\n            </Button>\r\n            <Modal\r\n              style={{ width: 1000 }}\r\n              title=\"Create Question\"\r\n              visible={this.state.visible}\r\n              onCancel={this.handleCancel}\r\n              width={1200}\r\n              footer={null}\r\n            >\r\n              <div>\r\n                <div className=\"cat-choose\">\r\n                  <Dropdown overlay={this.menu} placement=\"bottomLeft\" arrow>\r\n            <Button>{this.state.catergory?this.state.catergory:<span>Click to Choose Catergory</span>}</Button>\r\n                  </Dropdown>\r\n                </div>\r\n\r\n                {/* body */}\r\n                <Divider />\r\n                {this.CategoryLoader()}\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Button, Divider, Input} from \"antd\";\r\nimport {DeleteTwoTone} from \"@ant-design/icons\";\r\nimport Joi from \"joi-browser\";\r\nimport \"./Blanks.css\";\r\nimport * as Schemas from \"../../Schemas/BlanksSchema\";\r\nconst errorStyleText = {\r\n    color: \"#eb2f96\",\r\n  };\r\n  const { TextArea } = Input;\r\n  const blankString=\"____\";\r\nexport   const EditFillInTheBlanks = (props) => {\r\n    const [question, setQuestion] = useState({\r\n       \r\n        category: \"Fill in the Blanks\",\r\n        description: props.data.description,\r\n        options: props.data.ans,\r\n        ans: [],\r\n        \r\n        descriptionError: \"\",\r\n        blankValue: \"\",\r\n        bankValueError: \"\",\r\n    });\r\n\r\n    \r\n    const deleteBlankInDescription=(index)=>{\r\n      console.log(\"index: \", index)\r\n      let desc=question.description;\r\n      const arr = desc.split(\"\");\r\n      let newArr=[];\r\n      let count=0;\r\n      let dashcount=0;\r\n      arr.forEach((item)=>{\r\n     \r\n        if(item === \"_\"){\r\n          console.log(\"dash\");\r\n          if(index===count){\r\n           \r\n\r\n          }else{\r\n            dashcount++;\r\n            newArr.push(item);\r\n           \r\n          }\r\n            \r\n\r\n        }else{\r\n          if(dashcount===4){\r\n            count++;\r\n            dashcount=0;\r\n          }\r\n        \r\n          newArr.push(item);\r\n        }\r\n      });\r\n     \r\n    \r\n      const newDesc= newArr.join(\"\");\r\n      return newDesc;\r\n    };\r\n   const onDelete = (option, i) => {\r\n        let options = question.options;\r\n        const index = options.indexOf(option);\r\n        if (index > -1) {\r\n          options.splice(index, 1);\r\n        }\r\n       const desc= deleteBlankInDescription(i);\r\n       \r\n        setQuestion({ ...question,options: options, description: desc });\r\n      };\r\n    const renderOptions = () => {\r\n  \r\n      const {options}= question;\r\n      const onBlankValueChange=(e,index)=>{\r\n          const value = e.target.value;\r\n          let questionOption = question.options;\r\n          questionOption[index]= value;\r\n          setQuestion({ ...question,options: questionOption});\r\n\r\n      };\r\n        return options.map((item, index) => {\r\n          return (\r\n            <div style={{ marginTop: 7 }} id={item} className=\"row\">\r\n              <div className=\"col-5 col-sm-5 offset-sm-1\">\r\n               <Input onChange={(e)=>{onBlankValueChange(e,index);}} value={item}/>\r\n              </div>\r\n              <div className=\"col-2 col-sm-1 \">\r\n                <Button onClick={() => onDelete(item, index)}>\r\n                  {\" \"}\r\n                  <span>\r\n                    <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n                  </span>\r\n                </Button>\r\n              </div>\r\n              {/* <div className=\"col-2 col-sm-1 \">\r\n           \r\n             <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\r\n         \r\n            </div> */}\r\n            </div>\r\n          );\r\n        });\r\n      };\r\n  \r\nconst         onAddBlank=()=>{\r\n    if(question.blankValue){\r\n        const found = question.options.some(\r\n            (item) => item.toUpperCase() == question.blankValue.toUpperCase()\r\n          );\r\n          if (!found) {\r\n              let updateDesc= question.description;\r\n              \r\n              updateDesc= updateDesc.concat(blankString);\r\n\r\n            setQuestion({ ...question,options:question.options.concat(question.blankValue),blankValueError: \"\", description: updateDesc});\r\n\r\n          } else {\r\n              setQuestion({ ...question, blankValueError: \"Already exists\"})\r\n            \r\n          }\r\n    }else{\r\n        setQuestion({ ...question, blankValueError: \"Please enter Value and then Press Button !\"})\r\n    }\r\n};\r\n\r\n\r\nconst onAddQuestion = () => {\r\n    if (question.options.length > 0) {\r\n      // options are present\r\n      const result = Joi.validate(\r\n        { description: question.description },\r\n        Schemas.description\r\n      );\r\n      if (result.error) {\r\n        setQuestion({ ...question,\r\n          descriptionError: result.error.details[0].message,\r\n          optionsError: \"\",\r\n        });\r\n      } else {\r\n        setQuestion({  ...question, descriptionError: \"\", optionsError: \"\" });\r\n        \r\n          //      ADD to DATABASE\r\n          // Closing modal\r\n          const ans=question.options;\r\n         \r\n          const data={category: \"Fill in the Blanks\", description: question.description, options: [], ans: ans, id: props.data.id};\r\n          props.updateQuestion(data);\r\n          props.handleOk();\r\n    \r\n\r\n        \r\n      }\r\n    } else {\r\n      // options error : no option present\r\n      setQuestion({ ...question, optionsError: \"Please add atleast one option\" });\r\n    }\r\n  };\r\n \r\n    return (\r\n        <>\r\n        <div className=\"row no-gutters\">\r\n          <div  className=\"col-12 col-sm-7 offset-sm-1 bankValueStyle\">\r\n            <Input\r\n              placeholder=\"Enter Blank Value Here\"\r\n              value={question.blankValue}\r\n              onChange={(e) => {\r\n                setQuestion({ ...question,blankValue: e.target.value});\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button\r\n              className=\"add-blank\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={()=>{onAddBlank();}}\r\n            >\r\n              {\" \"}\r\n              Add Blank\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{question.blankValueError}</p>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n         <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={question.description}\r\n              onChange={(e)=>setQuestion({...question,description: e.target.value})}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        {renderOptions()}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{question.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Card } from \"antd\";\r\nimport { DeleteTwoTone, EditTwoTone } from \"@ant-design/icons\";\r\nimport {EditFillInTheBlanks} from \"./EditFillInTheBlanks\";\r\nconst blankString = \"____\";\r\n\r\n\r\nconst myIncludes=(str)=>{\r\n    if(str.includes(\".\")){\r\n        return true;\r\n    }else if(str.includes(\",\")){\r\n        return true;\r\n    }else if(str.includes(\"'\")){\r\n        return true;\r\n    }else if(str.includes(\"\\\"\")){\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const Blanks = (props) => {\r\n // console.log(\"props: \",props.data);\r\n  const [visible, toggleModal] = useState(false);\r\n\r\n  const showModal = () => {\r\n    toggleModal(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    toggleModal(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    toggleModal(false);\r\n  };\r\n  const onDelete = () => {\r\n    props.deleteQuestion(props.data.id);\r\n  };\r\n  const makeDescription = (desc) => {\r\n    //console.log(\"ans: \",props.data.ans[0]);\r\n    const array = desc.split(\" \");\r\n    let count = 0;\r\n    const result = array.map((item, index) => {\r\n      // console.log(index);\r\n      if((myIncludes(item)) &&  item.includes(\"____\")){\r\n        console.log(\"found: \", item);\r\n        if (item[item.length - 1] === \".\") {\r\n            \r\n            count=count+1\r\n          return (\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n              {props.data.ans[count-1]}\r\n              {\".\"}\r\n              \r\n            </span>\r\n          );\r\n        } else if (item[0] === \".\") {\r\n            console.log(\"found\");\r\n            count=count+1;\r\n            return (\r\n                <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>.{\" \"} \r\n                  {props.data.ans[count-1]}\r\n                  \r\n                </span>\r\n              );\r\n        }else if (item[item.length - 1] === \",\") {\r\n            count=count+1;\r\n            return (\r\n              <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n                {props.data.ans[count-1]}\r\n                {\",\"}\r\n                \r\n              </span>\r\n            );\r\n          } else if (item[0] === \",\") {\r\n            count=count+1;\r\n              return (\r\n                  <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>,{\" \"} \r\n                    {props.data.ans[count-1]}\r\n                    \r\n                  </span>\r\n                );\r\n          }\r\n          \r\n      }else{ \r\n      if (item === blankString) {\r\n        count=count+1;\r\n        return (\r\n          <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n            {props.data.ans[count-1]}{\" \"}\r\n           \r\n          </span>\r\n        );\r\n      } else if (item !== blankString) {\r\n        return <span>{item} </span>;\r\n      }\r\n    \r\n    }if(item.includes(\".\")){\r\n        count=count+1;\r\n        const arr= item.split(\".\");\r\n        if(arr[0]===blankString){\r\n            return(<>\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n            {props.data.ans[count-1]}\r\n            \r\n          </span>. {arr[1]} {\" \"}</>);\r\n        }else{\r\n            return(\r\n            <>{arr[0]}.\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n            {props.data.ans[count-1]} {\" \"}\r\n            \r\n          </span>\r\n          </>);\r\n        }\r\n    }\r\n    if(item.includes(\",\")){\r\n        count=count+1;\r\n        const arr= item.split(\",\");\r\n        if(arr[0]===blankString){\r\n            return(<>\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n            {props.data.ans[count-1]}\r\n            \r\n          </span>, {arr[1]} {\" \"}</>);\r\n        }else{\r\n            return(\r\n            <>{arr[0]},\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n            {props.data.ans[count-1]} {\" \"}\r\n            \r\n          </span>\r\n          </>);\r\n        }\r\n    }\r\n     \r\n    });\r\n\r\n\r\n     //console.log(\"last result\");\r\n    return result;\r\n  };\r\n  return (\r\n    <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n      <Card\r\n        style={{ backgroundColor: props.color }}\r\n        actions={[\r\n          <EditTwoTone\r\n            onClick={() => {\r\n              showModal();\r\n            }}\r\n            twoToneColor=\"#52c41a\"\r\n            key=\"edit\"\r\n          />,\r\n          <DeleteTwoTone\r\n            onClick={() => {\r\n              onDelete();\r\n            }}\r\n            twoToneColor=\"#eb2f96\"\r\n            key=\"del\"\r\n          />,\r\n        ]}\r\n      >\r\n        <p style={{ fontSize: 17 }}>\r\n         \r\n          {props.quesNo}. {makeDescription(props.data.description)}\r\n        </p>\r\n      </Card>\r\n      <Modal\r\n        style={{ width: 1000 }}\r\n        title=\"Edit Question\"\r\n        visible={visible}\r\n        onCancel={() => handleCancel()}\r\n        width={1200}\r\n        footer={null}\r\n      >\r\n         <EditFillInTheBlanks updateQuestion={props.updateQuestion} data={props.data} handleOk={handleOk} handleCancel={handleCancel}/> \r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport AddQuestionFooter from \"../../AddQuestionFooter\";\r\nimport { Button, Input, Checkbox } from \"antd\";\r\nimport {\r\n  CloseCircleTwoTone,\r\n  PlusOutlined,\r\n  DeleteTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport \"./Styles.css\";\r\nimport { ERROR_COLOR } from \"../../../util/colors\";\r\nimport * as CategoryTypes from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\nexport default class EditDropDown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: this.props.data.description,\r\n      options: this.props.data.options,\r\n      addOptionFields: [],\r\n      addOptionFieldsError: [],\r\n\r\n      ans: this.props.data.ans,\r\n\r\n      ansError: \"\",\r\n      descriptionError: \"\",\r\n    };\r\n  }\r\n\r\n  onAddQuestion = () => {\r\n    if(this.state.description.length === 0){\r\n        this.setState({descriptionError: \"Description cannot be Empty!\"});\r\n    }else{\r\n      var temp = this.state.description;\r\n      var dropdownCount = (temp.match(/Dropdown/g) || []).length;\r\n      var optionCount= this.state.options.length;\r\n      if(dropdownCount > optionCount){\r\n          this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n      }else if(dropdownCount === optionCount){\r\n        if(optionCount>0){\r\n          const data={category: CategoryTypes.SELECT_FROM_DROPDOWN, description: this.state.description, options: this.state.options, ans: this.state.ans, id : this.props.data.id};\r\n          //console.log(\"data: \", data);\r\n          this.props.updateQuestion(data);\r\n          this.props.handleOk();\r\n        }else{\r\n          this.setState({descriptionError: \"Add atleast one Dropdown\"});\r\n        }\r\n      }\r\n      else{\r\n          this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n      }\r\n    }\r\n}\r\n_handleKeyDown = (e) => {\r\n \r\n}\r\n  onChangeDescription = (e) => {\r\n    let value = e.target.value;\r\n    if (e.key === 'Enter') {\r\n     // console.log('do validate');\r\n    \r\n      value= value + \"\\n\";\r\n      //console.log(\"value: \",value);\r\n      this.setState({ description: value });\r\n    }\r\n    console.log(value);\r\n    this.setState({ description: value });\r\n  };\r\n  onEnterOptionValue = (index, e) => {\r\n    const value = e.target.value;\r\n    let newArr = this.state.addOptionFields.splice();\r\n    newArr[index] = value;\r\n    this.setState({ addOptionFields: newArr });\r\n  };\r\n  onOptionChangeValue = (e, index, optionIndex) => {\r\n    const value = e.target.value;\r\n    let optionArray = this.state.options[index].split(\",\");\r\n    optionArray[optionIndex] = value;\r\n    let newOptionArray = optionArray.join(\",\");\r\n    optionArray = this.state.options;\r\n    optionArray[index] = newOptionArray;\r\n    this.setState({ options: optionArray });\r\n  };\r\n  onDeleteOptionValue = (index, optionIndex) => {\r\n    let optionValue = this.state.options[index].split(\",\");\r\n    let del = optionValue.splice(optionIndex, 1);\r\n    let options = this.state.options;\r\n    if (optionIndex === this.state.ans[index]) {\r\n      //if we remove checked then make ans 0 index\r\n      let ans = this.state.ans;\r\n      ans[index] = 0;\r\n      this.setState({ ans });\r\n    }\r\n\r\n    if (optionIndex < this.state.ans[index]) {\r\n      let ans = this.state.ans;\r\n      let ansValue = this.state.ans[index];\r\n      // console.log(\"ans value: \", ansValue);\r\n      ans[index] = ansValue - 1;\r\n      this.setState({ ans });\r\n    }\r\n    const newOptionValue = optionValue.join(\",\");\r\n    options[index] = newOptionValue;\r\n    this.setState({ options: options });\r\n  };\r\n  onChangeCheckedOptionValue = (index, optionIndex) => {\r\n    let ans = this.state.ans;\r\n    ans[index] = optionIndex;\r\n    this.setState({ ans: ans });\r\n  };\r\n  onAddOptionValueBtn = (index) => {\r\n    const value = this.state.addOptionFields[index];\r\n    let addOptionFields = this.state.addOptionFields;\r\n    //addOptionFields--->index\r\n\r\n    //if emty display errors\r\n\r\n    if (value.length === 0) {\r\n      let err = \"Please Enter Value and then Add\";\r\n      let addOptionFieldsError = this.state.addOptionFieldsError;\r\n      addOptionFieldsError[index] = err;\r\n      this.setState({ addOptionFieldsError });\r\n      setTimeout(() => {\r\n        addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = \"\";\r\n        this.setState({ addOptionFieldsError });\r\n      }, 2000);\r\n    } else {\r\n      //check if same exists\r\n      let optionsValue = this.state.options[index].split(\",\");\r\n      if (optionsValue.includes(value)) {\r\n        let err = \"Already Exists\";\r\n        let addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = err;\r\n        this.setState({ addOptionFieldsError });\r\n        setTimeout(() => {\r\n          addOptionFieldsError = this.state.addOptionFieldsError;\r\n          addOptionFieldsError[index] = \"\";\r\n          this.setState({ addOptionFieldsError });\r\n        }, 2000);\r\n      } else {\r\n          if(optionsValue[0]===\"\"){\r\n              optionsValue[0]=value;\r\n              const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n          }else{\r\n        optionsValue.push(value);\r\n        const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n        // adding to options //\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  onDeleteDropDown = (index) => {\r\n    let { ans, options, addOptionFields, addOptionFieldsError, description} = this.state;\r\n    ans.splice(index,1);\r\n   \r\n    options.splice(index,1);\r\n    addOptionFields.splice(index,1);\r\n    addOptionFieldsError.splice(index,1);\r\n    const str= \"#\"+(index+1)+\" Dropdown#\";\r\n    const newDesc=description.split(str).join(\"\");\r\n    let count=1; let first=true; let skip=false;\r\n    let finalDesc=newDesc.split(\"Dropdown#\");\r\n    let Desc=[];\r\n  //  console.log(\"newDesc: \", newDesc);\r\n    //console.log(\"finaldescBefore: \", finalDesc);//\r\n    finalDesc.forEach((item,index)=>{\r\n      \r\n         const length= item.length;\r\n       \r\n         if(item.length>1){\r\n             let n=length-3;\r\n            \r\n             if(item[n]===\"#\"){\r\n                 n++;\r\n                 let str=item.split(\"\");\r\n                 str[n]=count+\"\";\r\n                 let newStr=str.join(\"\");\r\n                 count++;\r\n                // console.log(\"str: \", newStr);\r\n                 Desc.push(newStr);\r\n            \r\n             }else{\r\n               // console.log(\"item: \", item);\r\n                Desc.push(item);\r\n             }\r\n\r\n         }else{\r\n          //  console.log(\"item: \", item);\r\n            Desc.push(item);\r\n         }\r\n  \r\n    });\r\n \r\n    let finaldescription= Desc.join(\"Dropdown#\");\r\n    if(Desc.length===1){\r\n        var c = (finaldescription.match(/Dropdown/g) || []).length;\r\n        var f = (finaldescription.match(/#/g) || []).length;\r\n        if(c===0 && f===1){\r\n        finaldescription=finaldescription+\"Dropdown#\";}\r\n    }\r\n  \r\n    this.setState({ans, options, addOptionFields, addOptionFieldsError, description: finaldescription});\r\n  }\r\n\r\n  onAddDropdown = () => {\r\n        let {description, ans, options, addOptionFields, addOptionFieldsError} = this.state;\r\n        let length = this.state.options.length;\r\n        description = description + \" #\"+(length+1)+\" Dropdown#\";\r\n        ans[length]=0;\r\n        options[length]=\"\";\r\n        addOptionFields[length]=\"\";\r\n        addOptionFieldsError[length]=\"\";\r\n        this.setState({description, ans, options, addOptionFields, addOptionFieldsError});\r\n  }\r\n\r\n  renderAddDropdownSection = (item, index) => {\r\n    const optionArray = item.split(\",\"); //1,2,3\r\n    return (\r\n      <div style={{textAlign: \"center\"}} className=\"col-11 col-sm-4 offset-sm-1 dropdown-container-style\">\r\n        <div id=\"box\">\r\n          <Button onClick={()=>{this.onDeleteDropDown(index);}} type=\"text\" id=\"icon-delete-dropdown\">\r\n            <span>\r\n              <CloseCircleTwoTone\r\n                style={{ fontSize: 20 }}\r\n                twoToneColor=\"#eb2f96\"\r\n              />\r\n            </span>\r\n          </Button>\r\n        </div>\r\n        {/* input field and add button */}\r\n        <h5 style={{margin : 7}}>Dropdown #{index+1}</h5>\r\n        <div\r\n          style={{ marginTop: 10 }}\r\n          className=\"row no-gutters enter-option-value-container\"\r\n        >\r\n          <div className=\"enter-option-value-input\">\r\n            <Input\r\n              value={this.state.addOptionFields[index]}\r\n              onChange={(e) => this.onEnterOptionValue(index, e)}\r\n              placeholder=\"Enter Option Value to Add\"\r\n            />\r\n          </div>\r\n          <div className=\"enter-option-value-add-btn\">\r\n            <Button\r\n              onClick={() => {\r\n                this.onAddOptionValueBtn(index);\r\n              }}\r\n              type=\"primary\"\r\n            >\r\n              <span>\r\n                <PlusOutlined\r\n                  style={{\r\n                    color: \"white\",\r\n                    verticalAlign: \"baseline\",\r\n                    fontSize: 18,\r\n                  }}\r\n                />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        {/* error row */}\r\n        <div className=\"row no-gutters\">\r\n          <p style={{ color: ERROR_COLOR }}>\r\n            {this.state.addOptionFieldsError[index]}\r\n          </p>\r\n        </div>\r\n        {/* List of options */}\r\n\r\n        {this.state.options[index] !== \"\"\r\n          ? optionArray.map((item, optionIndex) => {\r\n              let checked = false;\r\n              if (optionIndex === this.state.ans[0]) {\r\n                checked = true;\r\n              }\r\n              return (\r\n                <div className=\"row \">\r\n                  <div className=\"checkbox-div\">\r\n                    <Button type=\"text\">\r\n                      <Checkbox\r\n                        checked={checked}\r\n                        onChange={(e) => {\r\n                          this.onChangeCheckedOptionValue(index, optionIndex);\r\n                        }}\r\n                      />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"option-value-div\">\r\n                    <Input\r\n                      value={item}\r\n                      onChange={(e) => {\r\n                        this.onOptionChangeValue(e, index, optionIndex);\r\n                      }}\r\n                      placeholder=\"Option Value\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"option-value-delete-div\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.onDeleteOptionValue(index, optionIndex);\r\n                      }}\r\n                    >\r\n                      <span>\r\n                        <DeleteTwoTone\r\n                          twoToneColor=\"#eb2f96\"\r\n                          style={{ verticalAlign: \"baseline\" }}\r\n                        />{\" \"}\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    // console.log(this.state.ans);\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* <h1>Select from Dropdown</h1> */}\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n              onKeyDown={this._handleKeyDown}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{ color: ERROR_COLOR }}>\r\n                {this.state.descriptionError}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\r\n                <div >\r\n                <Button onClick={()=>this.onAddDropdown()} type=\"primary\" style={{position: \"absolute\", right :13}}>Add Dropdown</Button>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <br/><br/>\r\n        <div className=\"row\">\r\n          {this.state.options.map((item, index) => {\r\n            return <>{this.renderAddDropdownSection(item, index)}</>;\r\n          })}\r\n        </div>\r\n        <AddQuestionFooter\r\n            type=\"Update\"\r\n          handleCancel={this.props.handleCancel}\r\n          handleOk={this.onAddQuestion}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Modal, Card, Menu, Dropdown} from \"antd\";\r\nimport { EditTwoTone, DeleteTwoTone} from \"@ant-design/icons\";\r\nimport EditDropDown from \"./EditDropDown\";\r\nexport default class DropDownSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n         \r\n            visible: false,\r\n          };\r\n    }\r\n    showModal = () => {\r\n      this.setState({ visible: true });\r\n    };\r\n  \r\n    handleOk = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n  \r\n    handleCancel = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n\r\n    onDelete=()=>{\r\n      this.props.deleteQuestion(this.props.data.id);\r\n    }\r\n     isNumeric(str) {\r\n        if (typeof str != \"string\") return false // we only process strings!  \r\n        return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n               !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\r\n      }\r\n\r\n    onRenderDropdownQuestion=(quesNo, data)=> {\r\n        const dataArray = data.description.split(\"Dropdown#\");\r\n        let ansIndex=0;\r\n        return(<p style={{ fontSize: 17}}>{quesNo}. {\"  \"}\r\n            {dataArray.map((item, index)=>{\r\n               // console.log(\"item: \", item);\r\n                if(item.includes(\"#\")){\r\n                    const deepItem=item.split(\"#\");\r\n                    // console.log(\"deepItem: \", deepItem);\r\n                     return deepItem.map((item2)=>{\r\n                        if(this.isNumeric(item2[0])){\r\n                            ansIndex++;\r\n                            let count=ansIndex-1;\r\n                        return(<Dropdown overlay={this.menu(data.options[count], data.ans[count])}>\r\n                            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                              -Select- \r\n                            </a>\r\n                          </Dropdown>);    \r\n                        }\r\n                        if(item2.includes(\"\\n\")){\r\n                            const item3 = item2.split(\"\\n\");\r\n                            return item3.map((i)=>{\r\n                                return(<><br/> {i}</>);\r\n                            })\r\n                        }\r\n                        return item2;\r\n                     })\r\n                    \r\n                }else{\r\n                    return item;\r\n                }\r\n            })}\r\n        </p>);\r\n    }\r\n     menu =(options, ans)=> {\r\n         const optionsArr = options.split(\",\");\r\n            return <Menu>  {optionsArr.map((item,index)=>{\r\n                if(index === ans){\r\n                    return   <Menu.Item key={index} danger>{item}</Menu.Item>;\r\n                }else{\r\n                    return(\r\n                        \r\n                          <Menu.Item key={index}>\r\n                            \r\n                              {item}\r\n                          \r\n                          </Menu.Item>\r\n                        \r\n                        \r\n                      );\r\n                }\r\n            }\r\n            )}</Menu>;\r\n     };\r\n    render() {\r\n        return (\r\n            <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n      <Card\r\n        style={{ backgroundColor: this.props.color }}\r\n        actions={[\r\n          <EditTwoTone\r\n            onClick={() => {\r\n              this.showModal();\r\n            }}\r\n            twoToneColor=\"#52c41a\"\r\n            key=\"edit\"\r\n          />,\r\n          <DeleteTwoTone\r\n            onClick={() => {\r\n              this.onDelete();\r\n            }}\r\n            twoToneColor=\"#eb2f96\"\r\n            key=\"del\"\r\n          />,\r\n        ]}\r\n      >\r\n       {this.onRenderDropdownQuestion(this.props.quesNo, this.props.data)}\r\n      </Card>\r\n      <Modal\r\n        style={{ width: 1000 }}\r\n        title=\"Edit Question\"\r\n        visible={this.state.visible}\r\n        onCancel={() => this.handleCancel()}\r\n        width={1200}\r\n        footer={null}\r\n      >\r\n         <EditDropDown updateQuestion={this.props.updateQuestion} data={this.props.data} handleOk={this.handleOk} handleCancel={this.handleCancel}/> \r\n      </Modal>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Input, Divider, Button, Radio} from \"antd\";\r\nimport {ERROR_COLOR} from \"../../../util/colors\";\r\nimport { TRUE_AND_FALSE} from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\n\r\nexport default function EditTrueFalse(props) {\r\n    const [question, setQuestion] = useState({\r\n       \r\n        category: TRUE_AND_FALSE,\r\n        description: props.data.description,\r\n        options: [],\r\n        ans: props.data.ans,\r\n        \r\n        descriptionError: \"\",\r\n       \r\n    });\r\n    const [value, setValue] = useState(props.data.ans[0]);\r\n\r\n\r\n    const onAddQuestion = () => {\r\n        if(question.description.length===0){\r\n            setQuestion({ ...question,descriptionError: \"Description Empty!!!\"});\r\n        }else{\r\n            \r\n        let ans=[];\r\n        ans[0]=value;\r\n             \r\n              const data={category: TRUE_AND_FALSE, description: question.description, options: [], ans: ans,descriptionError: \"\", id: props.data.id };\r\n             //console.log(data);\r\n               props.updateQuestion(data);\r\n              props.handleOk();\r\n        }\r\n      };\r\n\r\n\r\n\r\n      const onChange = e => {\r\n       // console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n      };\r\n      const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n      };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n       \r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{color:ERROR_COLOR}}>{question.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n         <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={question.description}\r\n              onChange={(e)=>setQuestion({...question,description: e.target.value})}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n          <Radio.Group onChange={onChange} value={value}>\r\n      <Radio style={radioStyle} value={true}>True</Radio>\r\n      <Radio style={radioStyle} value={false}>False</Radio>\r\n      \r\n    </Radio.Group>\r\n          </div>\r\n        </div>\r\n        \r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n             Update\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { Modal, Card, Radio} from \"antd\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\nimport EditTrueFalse from \"./EditTrueFalse\";\r\nexport default function TrueAndFalse(props) {\r\n    const [visible, toggleModal] = useState(false);\r\n    const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n      };\r\n      const showModal = () => {\r\n        toggleModal(true);\r\n      };\r\n    \r\n      const handleOk = () => {\r\n        toggleModal(false);\r\n      };\r\n    \r\n      const handleCancel = () => {\r\n        toggleModal(false);\r\n      };\r\n      const onDelete = () => {\r\n        props.deleteQuestion(props.data.id);\r\n      };\r\n\r\n    return (\r\n        <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n        <Card\r\n          style={{ backgroundColor: props.color }}\r\n          actions={[\r\n            <EditTwoTone\r\n              onClick={() => {\r\n                showModal();\r\n              }}\r\n              twoToneColor=\"#52c41a\"\r\n              key=\"edit\"\r\n            />,\r\n            <DeleteTwoTone\r\n              onClick={() => {\r\n                onDelete();\r\n              }}\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"del\"\r\n            />,\r\n          ]}\r\n        >\r\n         \r\n<div>\r\n<p style={{ fontSize: 17 }}>\r\n           \r\n           {props.quesNo}. {props.data.description}\r\n          \r\n         </p>\r\n         <Radio.Group  value={props.data.ans[0]}>\r\n      <Radio style={radioStyle} value={true}>True</Radio>\r\n      <Radio style={radioStyle} value={false}>False</Radio>\r\n      \r\n    </Radio.Group>\r\n</div>\r\n\r\n        </Card>\r\n        <Modal\r\n          style={{ width: 1000 }}\r\n          title=\"Edit Question\"\r\n          visible={visible}\r\n          onCancel={() => props.handleCancel()}\r\n          width={1200}\r\n          footer={null}\r\n        >\r\n           <EditTrueFalse updateQuestion={props.updateQuestion} data={props.data} handleOk={handleOk} handleCancel={handleCancel}/> \r\n        </Modal>\r\n      </div>\r\n    )\r\n}\r\n","import * as ActionTypes from \"../types/Questions\";\r\n\r\nexport const addQuestion = (question) => ({\r\n  type: ActionTypes.ADD_QUESTION,\r\n  payload: question,\r\n});\r\n\r\nexport const deleteQuestion = (question) => ({\r\n  type: ActionTypes.DELETE_QUESTION,\r\n  payload: question,\r\n});\r\nexport const changeColor = (color) => ({\r\n  type: ActionTypes.CHANGE_COLOR,\r\n  payload: color,\r\n});\r\n\r\nexport const changeScore = (score) => ({\r\n    type: ActionTypes.CHANGE_SCORE,\r\n    payload: score,\r\n  });\r\n  export const changeTime = (time) => ({\r\n    type: ActionTypes.CHANGE_TIME,\r\n    payload: time,\r\n  });\r\n\r\n export const updateQuestion = (question)=>({\r\n     type: ActionTypes.UPDATE_QUESTION,\r\n     payload: question,\r\n });","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {  withRouter } from \"react-router-dom\";\r\nimport {  } from \"reactstrap\";\r\nimport Header from \"./Header\";\r\nimport {  Divider } from \"antd\";\r\nimport \"./css/main.css\";\r\nimport Options from \"./Options\";\r\nimport MultipleChoice from \"./Categories/Multiple Choice/MultipleChoice\";\r\nimport AddQuestion from \"./AddQuestion\";\r\nimport {Blanks} from \"./Categories/Blanks/Blanks\";\r\nimport DropDownSelect from \"./Categories/Select-From-dropdown/DropDown\";\r\nimport TrueAndFalse from \"./Categories/TrueAndFalse/TrueAndFalse\";\r\nimport * as CategoryTypes from \"../util/Categories\"; \r\nimport {\r\n  addQuestion,\r\n  deleteQuestion,\r\n  changeColor,\r\n  changeScore,\r\n  changeTime,\r\n  updateQuestion,\r\n} from \"../redux/actions/QuestionActions\";\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addQuestion: (data) => dispatch(addQuestion(data)),\r\n  updateQuestion: (data) => dispatch(updateQuestion(data)),\r\n  deleteQuestion: (data) => {\r\n    dispatch(deleteQuestion(data));\r\n  },\r\n  changeColor: (color) => {\r\n    dispatch(changeColor(color));\r\n  },\r\n  changeScore: (score) => {\r\n    dispatch(changeScore(score));\r\n  },\r\n  changeTime: (time) => {\r\n    dispatch(changeTime(time));\r\n  },\r\n});\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    questions: state.question,\r\n  };\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      score: 0,\r\n      time: 0,\r\n      color: \"white\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // this.props.addQuestion();\r\n  }\r\n  onChangeTime = (value) => {\r\n    const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\r\n    if (\r\n      (!Number.isNaN(value) && reg.test(value)) ||\r\n      value === \"\" ||\r\n      value === \"-\"\r\n    ) {\r\n      this.props.changeTime(value);\r\n      this.setState({ time: value, timeError: false });\r\n    } else {\r\n      this.setState({ timeError: true });\r\n    }\r\n  };\r\n  onChangeScore = (value) => {\r\n    //console.log(\"value: \", value)\r\n    const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\r\n    if (\r\n      (!Number.isNaN(value) && reg.test(value)) ||\r\n      value === \"\" ||\r\n      value === \"-\"\r\n    ) {\r\n      this.setState({ score: value, scoreError: false });\r\n      this.props.changeScore(value);\r\n    } else {\r\n      this.setState({ scoreError: true });\r\n    }\r\n  };\r\n  onChangeColor = (color) => {\r\n    this.props.changeColor(color);\r\n    this.setState({ color: color });\r\n  };\r\n  btnClick = () => {};\r\n  renderQuestionRows = () => {\r\n    //<MultipleChoice quesNo={1} data={data} />\r\n    //    const ques = this.props.questions;\r\n    //console.log(\"ques.ques: \",this.props.questions.questions);\r\n\r\n    const result = this.props.questions.questions.map((item, index) => {\r\n      //console.log(\"item \",item);\r\n      index++;\r\n      //console.log(\"item: \", item.category)\r\n      if(item.category === CategoryTypes.MULTIPLE_CHOICE){\r\n      return (\r\n        <div\r\n          key={item.ans[0]}\r\n          style={{ marginTop: 20 }}\r\n          key={item}\r\n          className=\"row\"\r\n        >\r\n          <MultipleChoice\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category === CategoryTypes.FILL_IN_THE_BLANKS){\r\n     // console.log(\"sdfsd\");\r\n      return (\r\n        <div\r\n          key={item.ans[0]}\r\n          style={{ marginTop: 20 }}\r\n          key={item}\r\n          className=\"row\"\r\n        >\r\n          <Blanks\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category=== CategoryTypes.SELECT_FROM_DROPDOWN){\r\n      return (\r\n        <div\r\n          key={item.ans[0]}\r\n          style={{ marginTop: 20 }}\r\n          key={item}\r\n          className=\"row\"\r\n        >\r\n          <DropDownSelect\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category=== CategoryTypes.TRUE_AND_FALSE){\r\n      return (\r\n        <div\r\n          key={item.ans[0]}\r\n          style={{ marginTop: 20 }}\r\n          key={item}\r\n          className=\"row\"\r\n        >\r\n          <TrueAndFalse\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    //console.log(\"questions:\",this.props.questions);\r\n    // console.log(\"questions:\",this.props.questions);\r\n    return (\r\n      <div className=\"mainBody\">\r\n        {/* <h1>{this.props.user.username}</h1> */}\r\n        <Header />\r\n        <div style={{ position: \"fixed\" }} className=\"add\">\r\n          <div className=\"row\">\r\n            \r\n            <AddQuestion addQuestion={this.props.addQuestion} />\r\n            <br />\r\n            <hr />\r\n            <br />\r\n          </div>\r\n        </div>\r\n        {/* Options */}\r\n        <div style={{ height: 10 }} />\r\n        <div style={{ height: 10 }} />\r\n        <div style={{ height: 10 }} />\r\n        <div />\r\n        <Divider style={{ marginTop: 20 }} orientation=\"left\">\r\n          Options\r\n        </Divider>\r\n        <Options\r\n          onChangeColor={this.onChangeColor}\r\n          onChangeScore={this.onChangeScore}\r\n          onChangeTime={this.onChangeTime}\r\n          time={this.props.questions.time}\r\n          score={this.props.questions.score}\r\n          color={this.props.questions.color}\r\n        />\r\n        <Divider style={{ marginTop: 20 }} orientation=\"left\" />\r\n        <div style={{flex:1, flexDirection: \"row-reverse\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"}}>\r\n          <p>Questions :{\" \"}\r\n          {this.props.questions.questions.length\r\n            ? this.props.questions.questions.length\r\n            : \"0\"}</p>\r\n        \r\n        </div>\r\n      \r\n        <br />\r\n        {this.props.questions ? (\r\n          this.renderQuestionRows()\r\n        ) : (\r\n          <p>No Questions Added yet</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport { ConfigureStore } from \"./redux/ConfigureStore\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport 'antd/dist/antd.css';\n\nconst store= ConfigureStore();\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n      <div> <Main /></div>\n      \n      </BrowserRouter>\n      \n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport {  User } from \"./reducers/User\";\r\nimport {  Questions } from \"./reducers/Questions\";\r\nimport {  options } from \"./reducers/Option\";\r\n\r\nexport const ConfigureStore = () => {\r\nconst store = createStore(combineReducers({\r\n    user: User,\r\n    question: Questions,\r\n    option:options\r\n}, applyMiddleware(thunk, logger)));\r\n\r\nreturn store;\r\n};\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}