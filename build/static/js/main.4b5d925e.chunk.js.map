{"version":3,"sources":["components/Header.js","components/modals/CustomTime.js","components/modals/CustomScore.js","util/colors.js","components/Options.js","components/Schemas/Mcqs.js","components/Categories/Multiple Choice/MakeMultipleChoice.js","components/Categories/Multiple Choice/MultipleChoice.js","components/Categories/MultipleCheckbox/MakeMultipleCheckbox.js","components/Categories/MultipleCheckbox/MultipleCheckbox.js","components/Categories/SequenceInOrder/MakeSequenceInOrder.js","components/Categories/SequenceInOrder/SequenceInOrder.js","components/Schemas/BlanksSchema.js","components/Categories/Blanks/MakeFillInTheBlanks.js","components/AddQuestionFooter.js","util/Categories.js","components/Categories/Select-From-dropdown/MakeDropDown.js","components/Categories/TrueAndFalse/MakeTrueFalse.js","components/Categories/MatchingWords/MakeMatchingWords.js","components/AddQuestion.js","components/Categories/Blanks/Blanks.js","components/Categories/Blanks/EditFillInTheBlanks.js","components/Categories/Select-From-dropdown/EditDropDown.js","components/Categories/Select-From-dropdown/DropDown.js","components/Categories/TrueAndFalse/EditTrueFalse.js","components/Categories/TrueAndFalse/TrueAndFalse.js","components/Categories/MatchingWords/MatchingWords.js","redux/types/Questions.js","redux/actions/QuestionActions.js","components/Main.js","components/Categories/Multiple Choice/MultipleChoiceTest.js","components/Categories/Blanks/BlanksTest.js","components/Categories/Select-From-dropdown/DropDownTest.js","components/Categories/TrueAndFalse/TrueAndFalseTest.js","components/Test.js","components/Categories/MultipleCheckbox/MultipleCheckboxTest.js","components/Categories/SequenceInOrder/SequenceInTest.js","components/Categories/MatchingWords/MatchingWordsTest.js","components/Categories/MatchDrag/MatchDragTest.js","components/MyTest/MyTest.js","App.js","reportWebVitals.js","redux/types/OptionTypes.js","index.js","redux/reducers/User.js","redux/reducers/Questions.js","redux/reducers/Option.js","components/Categories/MatchingWords/MatchingWords.module.css","components/Categories/SequenceInOrder/SequenceInOrder.module.css","components/Categories/MatchDrag/MatchDrag.module.css"],"names":["Header","props","setIsOpen","setState","isOpen","state","toggle","Navbar","color","fixed","light","expand","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Component","CustomTime","visible","loading","title","onOk","handleOk","onCancel","handleCancel","footer","type","formItemLayout","Item","hasFeedback","validateStatus","onChange","val","value","time","style","width","React","labelCol","xs","span","sm","wrapperCol","CustomScore","score","LIGHTBLUE","LIGHTYELLOW","LIGHTGREEN","ERROR_COLOR","Options","showModalTime","ModalTimeVisible","ModalTimeLoading","setTimeout","showModalScore","ModalScoreVisible","handleOkScore","ModalScoreLoading","handleCancelScore","ColorMenu","onChangeColor","target","rel","colors","ScoreMenu","onChangeScore","TimeMenu","onChangeTime","renderColorName","scoreError","timeError","className","marginTop","overlay","placement","arrow","block","description","Joi","string","required","option","min","TextArea","Input","errorStyleText","MakeMultipleChoice","e","onFinish","values","console","log","onFinishFailed","errorInfo","onChangeOptionField","optionValue","onChangeDescription","onAddOption","result","validate","Schemas","error","optionValueError","details","message","options","some","item","toUpperCase","concat","onAddorUpdate","ans","addorupdate","data","category","id","question","updateQuestion","addQuestion","onDelete","index","indexOf","splice","renderOptions","radioStyle","display","height","lineHeight","map","Group","DeleteTwoTone","twoToneColor","onAddQuestion","length","descriptionError","optionsError","placeholder","rows","marginLeft","success","MultipleChoice","showModal","deleteQuestion","backgroundColor","actions","EditTwoTone","fontSize","quesNo","MakeMultipleCheckbox","onChangeC","checkedValues","uncheck","myvalues","includes","ansans","indexans","MultipleCheckbox","onChangeAnsField","AnsValue","onAddAnswer","AnsValueError","Answers","optionsorans","classes","MyListDiv","renderAnswers","BoxOrderDiv","DivinCol","SequenceInOrder","itemLayout","MakeFillInTheBlanks","useState","blankValue","bankValueError","setQuestion","useEffect","i","desc","arr","split","newArr","count","dashcount","forEach","push","join","deleteBlankInDescription","blankValueError","updateDesc","onAddBlank","questionOption","onBlankValueChange","AddQuestionFooter","FILL_IN_THE_BLANKS","MULTIPLE_CHOICE","SELECT_FROM_DROPDOWN","TRUE_AND_FALSE","MULTIPLE_CHECKBOX","SEQUENCE_IN_ORDER","MATCHING_WORDS","MATCH_DRAG","MakeDropDown","dropdownCount","match","optionCount","CategoryTypes","key","onEnterOptionValue","addOptionFields","onOptionChangeValue","optionIndex","optionArray","newOptionArray","onDeleteOptionValue","ansValue","newOptionValue","onChangeCheckedOptionValue","onAddOptionValueBtn","addOptionFieldsError","optionsValue","newOptionsValue","onDeleteDropDown","str","newDesc","finalDesc","Desc","n","newStr","finaldescription","c","f","onAddDropdown","renderAddDropdownSection","textAlign","CloseCircleTwoTone","margin","PlusOutlined","verticalAlign","checked","ansError","position","right","MakeTrueFalse","setValue","MakeMatchingWords","onChangeLeftField","leftoptionValue","onAddLeftOption","leftoptionValueError","leftoptions","rightoptions","onDeleteLeft","leftoptionsError","paddingLeft","AddQuestion","onCatChange","catergory","menu","CategoryLoader","NaN","justifyContent","postion","icon","blankString","Blanks","toggleModal","array","textDecoration","makeDescription","EditDropDown","_handleKeyDown","onKeyDown","DropDownSelect","onRenderDropdownQuestion","dataArray","ansIndex","deepItem","item2","isNumeric","preventDefault","optionsArr","danger","isNaN","parseFloat","EditTrueFalse","TrueAndFalse","MatchingWords","ADD_QUESTION","DELETE_QUESTION","UPDATE_QUESTION","CHANGE_COLOR","CHANGE_SCORE","CHANGE_TIME","initquestions","axios","get","then","res","catch","err","Main","Number","test","changeTime","changeScore","changeColor","btnClick","renderQuestionRows","questions","to","orientation","flex","flexDirection","alignItems","withRouter","connect","user","dispatch","ActionTypes","payload","BlanksTest","numOfBlanks","sen","words","mod","makeNumberedBlanks","Array","fill","marginBottom","onClickHandler","ca","MultipleCheckboxTest","SequenceInTest","handleOnDragEnd","destination","items","from","mydata","source","reorderedItem","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","MatchingWordsTest","answers","paddingTop","listStyleType","MyListDiv2","MatchDragTest","temp","srcindex","lrr","dragdata","1","2","myanslist","m","myoptionlist","Object","entries","x","ma","renderdataa","snapshot","background","isDraggingOver","DivinCol2","MyListDrop","renderdata","padding","MyTest","path","exact","component","Test","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","username","action","types","newArray","filter","foundIndex","findIndex","opt","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4b5d925e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText\r\n  } from 'reactstrap';\r\nexport default class Header extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={ isOpen: false};\r\n\r\n    }\r\n\r\n     setIsOpen=()=>{\r\n     this.setState({isOpen: !this.state.isOpen})\r\n }\r\n toggle=()=>{\r\n     this.setIsOpen();\r\n } \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"light\" fixed=\"top\"  light expand=\"md\">\r\n        <NavbarBrand href=\"/\">DYDQuizMaker</NavbarBrand>\r\n        <NavbarToggler onClick={this.toggle} />\r\n        <Collapse isOpen={this.state.isOpen} navbar>\r\n          {/* <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/components/\">Components</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Options\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  Option 1\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  Option 2\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  Reset\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav> */}\r\n          {/* <NavbarText>Simple Text</NavbarText> */}\r\n        </Collapse>\r\n      </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Modal, Button, InputNumber, Form } from 'antd';\r\nimport React from \"react\";\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 5 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 12 },\r\n    },\r\n  };\r\nexport default class CustomTime extends React.Component {\r\n \r\n\r\n  \r\n\r\n  render() {\r\n    const { visible, loading } = this.props;\r\n    return (\r\n      <>\r\n        \r\n        <Modal\r\n          visible={visible}\r\n          title=\"Custom Time\"\r\n          onOk={this.props.handleOk}\r\n          onCancel={this.props.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.props.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.props.handleOk}>\r\n              Submit\r\n            </Button>,\r\n          ]}\r\n        >\r\n          {/* <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p> */}\r\n          <Form {...this.formItemLayout}>\r\n         \r\n         <Form.Item  hasFeedback validateStatus=\"success\">\r\n           <InputNumber onChange={(val)=> {this.props.onChange(val)}} value={this.props.time}  style={{ width: '100%' }} />\r\n         </Form.Item>\r\n               </Form>\r\n             \r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Modal, Button, InputNumber, Form } from 'antd';\r\nimport React from \"react\";\r\n\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 5 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 24 },\r\n    },\r\n  };\r\n\r\nexport default class CustomScore extends React.Component {\r\n \r\n\r\n  \r\n\r\n  render() {\r\n    const { visible, loading } = this.props;\r\n   // console.log(\"score: \", this.props.score)\r\n    return (\r\n      <>\r\n        \r\n        <Modal\r\n          visible={visible}\r\n          title=\"Custom Score\"\r\n          onOk={this.props.handleOk}\r\n          onCancel={this.props.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.props.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.props.handleOk}>\r\n              Submit\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout}>\r\n         \r\n    <Form.Item  hasFeedback validateStatus=\"success\">\r\n      <InputNumber onChange={(val)=> {this.props.onChange(val)}} value={this.props.score}  style={{ width: '100%' }} />\r\n    </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export const LIGHTBLUE=\"#C0E0FD\";\r\nexport const LIGHTYELLOW= \"#FFFFC3\";\r\nexport const LIGHTGREEN=\"#E0F7CC\";\r\nexport const ERROR_COLOR=\"#eb2f96\";\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react'\r\nimport {Button, Menu, Dropdown } from \"antd\";\r\nimport CustomTime from \"./modals/CustomTime\";\r\nimport CustomScore from \"./modals/CustomScore\";\r\nimport * as colors from \"../util/colors\";\r\n\r\nexport default class Options extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={ \r\n            ModalTimeVisible: false,\r\n            ModalTimeLoading: false,\r\n            ModalScoreVisible: false,\r\n            ModalScoreLoading: false, \r\n          \r\n            scoreError: false,\r\n            timeError: false,\r\n          \r\n        }\r\n    }\r\n  componentDidMount() {}\r\n  \r\n  showModalTime = () => {\r\n    this.setState({\r\n        ModalTimeVisible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ ModalTimeLoading: true });\r\n    setTimeout(() => {\r\n      this.setState({ ModalTimeLoading: false, ModalTimeVisible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ ModalTimeVisible: false });\r\n  };\r\n\r\n  \r\n  showModalScore = () => {\r\n    this.setState({\r\n        ModalScoreVisible: true,\r\n    });\r\n  };\r\n\r\n  handleOkScore = () => {\r\n    this.setState({ ModalScoreLoading: true });\r\n    setTimeout(() => {\r\n      this.setState({ ModalScoreLoading: false, ModalScoreVisible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancelScore = () => {\r\n    this.setState({ ModalScoreVisible: false });\r\n  };\r\n\r\n    ColorMenu =()=> {\r\n        return(\r\n          <Menu>\r\n               <Menu.Item onClick={()=>{this.props.onChangeColor(\"white\");}}>\r\n            <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n              Default\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTBLUE);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" >\r\n              Light Blue\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTYELLOW);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Light Yellow\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTGREEN);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Light Green\r\n            </a>\r\n          </Menu.Item>\r\n         \r\n        </Menu>\r\n    );}\r\n    ScoreMenu =()=> {\r\n      return(\r\n        <Menu>\r\n             <Menu.Item onClick={()=>{this.props.onChangeScore(1);}}>\r\n          <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n            1pt\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeScore(2);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" >\r\n            2pt\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeScore(5);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            5pt\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={this.showModalScore}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            custom\r\n          </a>\r\n        </Menu.Item>\r\n       \r\n      </Menu>\r\n  );}\r\n  TimeMenu =()=> {\r\n      return(\r\n        <Menu>\r\n             <Menu.Item onClick={()=>{this.props.onChangeTime(10);}}>\r\n          <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n            10 mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeTime(15);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" >\r\n            15 mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeTime(30);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            30mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeTime(60);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            60 mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=> {this.showModalTime();}}>\r\n        <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n            custom\r\n          </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n  );}\r\n\r\n  renderColorName=(color)=>{\r\n    if(color===colors.LIGHTYELLOW){\r\n      return \"Light Yellow\";\r\n    }else if(color===colors.LIGHTGREEN){\r\n      return \"Light Green\";\r\n    }else if(color===colors.LIGHTBLUE){\r\n      return \"Light Blue\";\r\n    }else{\r\n      return \"White\";\r\n    }\r\n  }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n            <div style={{marginTop: 10}} className=\"col-md-3 offset-md-1  offset-sm-1 col-sm-10 offset-1 col-10\">\r\n            <Dropdown overlay={this.ColorMenu} placement=\"bottomLeft\" arrow>\r\n        <Button block className=\"\">Choose Color : {this.renderColorName(this.props.color)}</Button>\r\n    </Dropdown>\r\n            </div>\r\n\r\n            <div style={{marginTop: 10}} className=\"col-md-3 offset-md-1 offset-sm-1  col-sm-10 offset-1 col-10\">\r\n            <Dropdown overlay={this.ScoreMenu} placement=\"bottomLeft\" arrow>\r\n        <Button  block className=\"\">Choose Score : {this.props.score} pts</Button>\r\n    </Dropdown>\r\n    <CustomScore onChange={this.props.onChangeScore} score={this.props.score} visible={this.state.ModalScoreVisible} loading={this.state.ModalScoreLoading} handleCancel={this.handleCancelScore} handleOk={this.handleOkScore}  />\r\n            </div>\r\n            <div style={{marginTop: 10}} className=\"offset-1 col-10  col-md-3 offset-md-1 offset-sm-1  col-sm-10  \">\r\n            <Dropdown overlay={this.TimeMenu} placement=\"bottomLeft\" arrow>\r\n        <Button  block className=\"\">Choose Time : {this.props.time}</Button>\r\n      \r\n    </Dropdown>\r\n    <CustomTime onChange={this.props.onChangeTime} time={this.props.time} visible={this.state.ModalTimeVisible} loading={this.state.ModalTimeLoading} handleCancel={this.handleCancel} handleOk={this.handleOk}  />\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import Joi from \"joi-browser\";\r\nexport const description  = {\r\n    description: Joi.string().required()\r\n  };\r\nexport const option  = {\r\n    option: Joi.string().required().min(1)\r\n  };  ","import React, { Component } from \"react\";\r\nimport { Input,  Button, Radio, Divider } from \"antd\";\r\nimport { DeleteTwoTone } from \"@ant-design/icons\";\r\nimport Joi from \"joi-browser\";\r\nimport * as Schemas from \"../../Schemas/Mcqs\";\r\nimport \"./MakeMultipleChoice.css\";\r\nconst { TextArea } = Input;\r\n\r\nconst errorStyleText = {\r\n  color: \"#eb2f96\",\r\n};\r\nexport default class MakeMultipleChoice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\",\r\n      descriptionError: \"\",\r\n      optionValue: \"\",\r\n      optionValueError: \"\",\r\n      options: [],\r\n      optionsError: \"\",\r\n      value: 0,\r\n\r\n      addorupdate: \"Add Question\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if(this.props.description){\r\n      this.setState({description: this.props.question.description,\r\n          options: this.props.question.options,\r\n          value: this.props.question.ans[0],\r\n          addorupdate:\"Update Question\"},\r\n          )\r\n  }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    // console.log(\"radio checked\", e.target.value);\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  onChangeOptionField = (val) => {\r\n    //console.log(val.target.value);\r\n    const value = val.target.value;\r\n    this.setState({ optionValue: value });\r\n\r\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\r\n    // if(result.error)\r\n    //  console.log(result.error.details[0].message);\r\n\r\n    //const errors = {};\r\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\r\n    // console.log(\"errors: \", errors);\r\n  };\r\n\r\n  onChangeDescription = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ description: value });\r\n  };\r\n  onAddOption = () => {\r\n    const result = Joi.validate(\r\n      { option: this.state.optionValue },\r\n      Schemas.option\r\n    );\r\n    if (result.error) {\r\n      this.setState({ optionValueError: result.error.details[0].message });\r\n    } else {\r\n      const found = this.state.options.some(\r\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\r\n      );\r\n      if (!found) {\r\n        this.setState({\r\n          options: this.state.options.concat(this.state.optionValue),\r\n          optionValueError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ optionValueError: \"Already exists\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  onAddorUpdate = (ans)=>{\r\n    if(this.state.addorupdate === \"Update Question\"){\r\n      console.log(\"Update function is called\")\r\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n      const data={category: \"Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans,id:this.props.question.id};\r\n      this.props.updateQuestion(data)\r\n    }\r\n    else{\r\n      console.log(\"ADD QUESTION function is called\")\r\n      const data={category: \"Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans};\r\n      this.props.addQuestion(data)\r\n    }\r\n  }\r\n\r\n  onDelete = (option) => {\r\n    let options = this.state.options;\r\n    const index = options.indexOf(option);\r\n    if (index > -1) {\r\n      options.splice(index, 1);\r\n    }\r\n    this.setState({ options: options });\r\n  };\r\n\r\n  renderOptions = () => {\r\n   \r\n    const radioStyle = {\r\n      display: \"inline-block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n    const { value } = this.state;\r\n    return this.state.options.map((item) => {\r\n      return (\r\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\r\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\r\n            <Radio.Group onChange={this.onChange} value={value}>\r\n              <Radio style={radioStyle} value={item}>\r\n                {item}\r\n              </Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <div className=\"col-2 col-sm-1 \">\r\n            <Button onClick={() => this.onDelete(item)}>\r\n              {\" \"}\r\n              <span>\r\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n          {/* <div className=\"col-2 col-sm-1 \">\r\n       \r\n         <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\r\n     \r\n        </div> */}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  onAddQuestion = () => {\r\n    if (this.state.options.length > 0) {\r\n      // options are present\r\n      const result = Joi.validate(\r\n        { description: this.state.description },\r\n        Schemas.description\r\n      );\r\n      if (result.error) {\r\n        this.setState({\r\n          descriptionError: result.error.details[0].message,\r\n          optionsError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n        if (this.state.value) {\r\n          //      ADD to DATABASE\r\n          // Closing modal\r\n          const ans=[];\r\n          ans[0]=this.state.value;\r\n          // const data={category: \"Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans};\r\n          // this.props.addQuestion(data);\r\n          this.onAddorUpdate(ans)\r\n          this.props.handleOk();\r\n        } else {\r\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\r\n        }\r\n\r\n        \r\n      }\r\n    } else {\r\n      // options error : no option present\r\n      this.setState({ optionsError: \"Please add atleast one option\" });\r\n    }\r\n  };\r\n  render() { \r\n    // const radioStyle = {\r\n    //   display: \"inline-block\",\r\n    //   height: \"30px\",\r\n    //   lineHeight: \"30px\",\r\n    // };\r\n    // const { value } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\r\n            <Input\r\n              placeholder=\"Enter Option Here\"\r\n              value={this.state.optionValue}\r\n              onChange={(val) => {\r\n                this.onChangeOptionField(val);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-3\">\r\n            <Button\r\n              className=\"add-option\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={this.onAddOption}\r\n            >\r\n              {\" \"}\r\n              Add Option\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.optionValueError}</p>\r\n            <br />\r\n            <p>** Please Select Correct Option **</p>\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        {this.renderOptions()}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\r\n            <p style={errorStyleText}> {this.state.optionsError} </p>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                this.onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              {/* Add Question */}\r\n              {this.state.addorupdate}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Radio,  Card, Modal } from 'antd';\r\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\r\nimport EditMultipleChoice from \"./EditMultipleChoice\";\r\nimport MakeMultipleChoice from \"./MakeMultipleChoice\";\r\nexport default class MultipleChoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 1,\r\n            visible: false,\r\n          };\r\n    }\r\n    showModal = () => {\r\n      this.setState({ visible: true });\r\n    };\r\n  \r\n    handleOk = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n  \r\n    handleCancel = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n\r\n    onDelete=()=>{\r\n      this.props.deleteQuestion(this.props.data.id);\r\n    }\r\n      onChange = e => {\r\n        //console.log('radio checked', e.target.value);\r\n        this.setState({\r\n          value: e.target.value,\r\n        });\r\n      };\r\n    render() {\r\n        const radioStyle = {\r\n          display: 'block',\r\n          height: '30px',\r\n          lineHeight: '30px',\r\n        };\r\n        \r\n        // const { value } = this.state;\r\n        return (\r\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\r\n                <Card style={{backgroundColor:this.props.color}}\r\n                  actions={[\r\n                    \r\n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\r\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\r\n                  ]}>\r\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\r\n                <Radio.Group value={this.props.data.ans[0]}>\r\n                    {this.props.data.options.map(index=>{\r\n                      \r\n                        return(\r\n                            <Radio key={index} style={radioStyle} value={index}>\r\n                            {index}\r\n                          </Radio>\r\n                        );\r\n                    })}\r\n           \r\n                      \r\n          </Radio.Group>\r\n                </Card>\r\n            <Modal\r\n              style={{ width: 1000 }}\r\n              title=\"Edit Question\"\r\n              visible={this.state.visible}\r\n              onCancel={this.handleCancel}\r\n              width={1200}\r\n              footer={null}\r\n            >\r\n            \r\n            <MakeMultipleChoice updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\r\n            </Modal>\r\n            </div>\r\n       \r\n        );\r\n      }\r\n    \r\n}\r\n","import React, { Component } from \"react\";\nimport { Input,  Button, Divider, Checkbox, Row } from \"antd\";\nimport { DeleteTwoTone } from \"@ant-design/icons\";\nimport Joi from \"joi-browser\";\nimport * as Schemas from \"../../Schemas/Mcqs\";\nimport \"../Multiple Choice/MakeMultipleChoice.css\";\nconst { TextArea } = Input;\n\nconst errorStyleText = {\n  color: \"#eb2f96\",\n};\nexport default class MakeMultipleCheckbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      descriptionError: \"\",\n      optionValue: \"\",\n      optionValueError: \"\",\n      options: [],\n      optionsError: \"\",\n      value: [],\n    };\n  }\n  componentDidMount() {\n    if(this.props.description){\n        this.setState({description: this.props.question.description,\n            options: this.props.question.options,\n            value: this.props.question.ans,\n            addorupdate : \"Update Question\"})\n    }\n  }\n\n  onChangeC = (checkedValues) => {\n    console.log('checked = ', checkedValues.target.value);\n    console.log(\"valuee\", this.state.value);\n    let uncheck = checkedValues.target.value\n    let myvalues = this.state.value\n    if(myvalues.includes(uncheck)){\n        const index = myvalues.indexOf(uncheck);\n        if (index > -1) {\n        myvalues.splice(index, 1);\n        }\n    this.setState({ value: myvalues });\n  }\n    else{\n        this.setState({\n            value: this.state.value.concat(uncheck)\n          });\n    }\n    \n  }\n//   onChange = (e) => {\n//     console.log(\"checked\", this.state.value);\n//     this.setState({\n//         value: this.state.value.concat(e.target.value)\n//       });\n    \n//   };\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  onChangeOptionField = (val) => {\n    console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ optionValue: value });\n    console.log(this.state.optionValue)\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\n    // if(result.error)\n    //  console.log(result.error.details[0].message);\n\n    //const errors = {};\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\n    // console.log(\"errors: \", errors);\n  };\n\n  onChangeDescription = (e) => {\n    const value = e.target.value;\n    this.setState({ description: value });\n  };\n  onAddOption = () => {\n    const result = Joi.validate(\n      { option: this.state.optionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ optionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.options.some(\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          options: this.state.options.concat(this.state.optionValue),\n          optionValueError: \"\",\n        });\n      } else {\n        this.setState({ optionValueError: \"Already exists\" });\n      }\n    }\n  };\n\n  onAddorUpdate = (ans)=>{\n    if(this.state.addorupdate === \"Update Question\"){\n      console.log(\"Update function is called\")\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\n      const data={category: \"Multiple Checkbox\", description: this.state.description, options: this.state.options, ans: ans,id:this.props.question.id};\n      this.props.updateQuestion(data)\n    }\n    else{\n      console.log(\"ADD QUESTION function is called\")\n      const data={category: \"Multiple Checkbox\", description: this.state.description, options: this.state.options, ans: ans};\n      this.props.addQuestion(data)\n    }\n  }\n\n\n  onDelete = (option) => {\n    let options = this.state.options;\n    let ansans = this.state.value\n    console.log(options, this.state)\n    const index = options.indexOf(option);\n    const indexans = ansans.indexOf(option);\n    // if(ansans.includes(option)){\n      // console.log(\"indexans  \"+indexans)\n    if (indexans > -1) {\n      // console.log(\"ASDFASDFADFADFDFS\")\n        ansans.splice(indexans, 1);\n    }\n    \n    if (index > -1) {\n      options.splice(index, 1);\n    }\n    // console.log(this.state.value)\n    // console.log(\"aksjhdbfallealleallealle\"+ansans)\n    this.setState({ options: options, value:ansans });\n    // console.log(this.state.value)\n  };\n  \n\n  renderOptions = () => {\n   \n    const radioStyle = {\n      display: \"inline-block\",\n      height: \"30px\",\n      lineHeight: \"30px\",\n      color:\"black\"\n    };\n    // const { value } = this.state;\n    return this.state.options.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\n            {/* <Radio.Group onChange={this.onChange} value={value}>\n              <Radio style={radioStyle} value={item}>\n                {item}\n              </Radio>\n            </Radio.Group> */}\n            <Checkbox.Group style={{ width: '100%' }} >\n            <Row>\n                <Checkbox style={radioStyle} value={item} onChange={this.onChangeC}>{item}</Checkbox>\n            </Row>\n            </Checkbox.Group>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n          {/* <div className=\"col-2 col-sm-1 \">\n       \n         <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\n     \n        </div> */}\n        </div>\n      );\n    });\n  };\n  onAddQuestion = () => {\n    if (this.state.options.length > 0) {\n      // options are present\n      const result = Joi.validate(\n        { description: this.state.description },\n        Schemas.description\n      );\n      if (result.error) {\n        this.setState({\n          descriptionError: result.error.details[0].message,\n          optionsError: \"\",\n        });\n      } else {\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\n        if (this.state.value[0]) {\n          //      ADD to DATABASE\n          // Closing modal\n          console.log(this.state.value)\n          let ans=[];\n          ans = this.state.value;\n          // const data={id: ans[0],category: \"Multiple Checkbox\", description: this.state.description, options: this.state.options, ans: ans};\n          // this.props.addQuestion(data);\n          this.onAddorUpdate(ans)\n          this.props.handleOk();\n        } else {\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\n        }\n\n        \n      }\n    } else {\n      // options error : no option present\n      this.setState({ optionsError: \"Please add atleast one option\" });\n    }\n  };\n  render() { \n    // const radioStyle = {\n    //   display: \"inline-block\",\n    //   height: \"30px\",\n    //   lineHeight: \"30px\",\n    // };\n    // const { value } = this.state;\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <TextArea\n              placeholder=\"Enter Your Question\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              rows={4}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\n            <Input\n              placeholder=\"Enter Option Here\"\n              value={this.state.optionValue}\n              onChange={(val) => {\n                this.onChangeOptionField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0 }}\n              block\n              type=\"primary\"\n              success\n              onClick={this.onAddOption}\n            >\n              {\" \"}\n              Add Option\n            </Button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.optionValueError}</p>\n            <br />\n            <p>** Please Select Correct Option **</p>\n          </div>\n        </div>\n\n        <br />\n        {this.renderOptions()}\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\n            <p style={errorStyleText}> {this.state.optionsError} </p>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\n            <Button block\n              onClick={() => {\n                this.props.handleCancel();\n              }}\n              style={{marginTop: 7}}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"col-12 col-sm-3 \">\n            <Button block\n              onClick={() => {\n                this.onAddQuestion();\n              }}\n              type=\"primary\"\n              style={{marginTop: 7}}\n            >\n              {/* Add Question */}\n              {this.state.addorupdate}\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\n\n// while editing the question the checked boxes are not checked soo make sure they are checked","import React, { Component } from 'react'\nimport { Radio,  Card, Modal,Checkbox, Row,Col  } from 'antd';\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\n// import EditMultipleChoice from \"./EditMultipleChoice\";\nimport MakeMultipleCheckbox from \"./MakeMultipleCheckbox\"\nexport default class MultipleCheckbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n      onChange = e => {\n        //console.log('radio checked', e.target.value);\n        this.setState({\n          value: e.target.value,\n        });\n      };\n    render() {\n        const radioStyle = {\n          display: 'block',\n          height: '30px',\n          lineHeight: '30px',\n        };\n        \n        // const { value } = this.state;\n        return (\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  actions={[\n                    \n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n                  ]}>\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n                <Checkbox.Group value={this.props.data.ans}>\n                <Row>\n                    {this.props.data.options.map(index=>{\n                      \n                        return(\n                            <Checkbox key={index} style={radioStyle} value={index}>\n                            {index}\n                          </Checkbox>\n                        );\n                        \n                    })}\n                </Row>\n           \n                      \n          </Checkbox.Group>\n                </Card>\n            <Modal\n              style={{ width: 1000 }}\n              title=\"Edit Question\"\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              width={1200}\n              footer={null}\n            >\n            \n            <MakeMultipleCheckbox updateQuestion={this.props.updateQuestion} question={this.props.data} description={this.props.data.description} handleOk={this.handleOk} handleCancel={this.handleCancel}/>\n            </Modal>\n            </div>\n       \n        );\n      }\n    \n}\n","import React, { Component } from \"react\";\nimport { Input,  Button, Divider, List } from \"antd\";\nimport { DeleteTwoTone } from \"@ant-design/icons\";\nimport Joi from \"joi-browser\";\nimport * as Schemas from \"../../Schemas/Mcqs\";\nimport \"../Multiple Choice/MakeMultipleChoice.css\";\nimport classes from './SequenceInOrder.module.css'\nconst { TextArea } = Input;\n\nconst errorStyleText = {\n  color: \"#eb2f96\",\n};\nexport default class MakeMultipleCheckbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      descriptionError: \"\",\n      optionValue: \"\",\n      optionValueError: \"\",\n      AnsValueError: \"\",\n      addorupdate : \"Add Question\",\n      options: [],\n      Answers:[],\n      optionsError: \"\",\n      AnsValue:\"\",\n      value: [],\n    };\n  }\n  componentDidMount() {\n    if(this.props.description){\n      console.log(this.props.question)\n        this.setState({description: this.props.question.description,\n            options: this.props.question.options,\n            Answers: this.props.question.ans,\n            addorupdate : \"Update Question\"})\n    }\n  }\n\n  // onChangeC = (checkedValues) => {\n  //   console.log('checked = ', checkedValues.target.value);\n  //   console.log(\"valuee\", this.state.value);\n  //   let uncheck = checkedValues.target.value\n  //   let myvalues = this.state.value\n  //   if(myvalues.includes(uncheck)){\n  //       const index = myvalues.indexOf(uncheck);\n  //       if (index > -1) {\n  //       myvalues.splice(index, 1);\n  //       }\n  //   this.setState({ value: myvalues });\n  // }\n  //   else{\n  //       this.setState({\n  //           value: this.state.value.concat(uncheck)\n  //         });\n  //   }\n    \n  // }\n//   onChange = (e) => {\n//     console.log(\"checked\", this.state.value);\n//     this.setState({\n//         value: this.state.value.concat(e.target.value)\n//       });\n    \n//   };\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  onChangeOptionField = (val) => {\n    console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ optionValue: value });\n    console.log(this.state.optionValue)\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\n    // if(result.error)\n    //  console.log(result.error.details[0].message);\n\n    //const errors = {};\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\n    // console.log(\"errors: \", errors);\n  };\n  onChangeAnsField = (val) => {\n    // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ AnsValue: value });\n    // console.log(this.state.AnsValue)\n  };\n\n  onChangeDescription = (e) => {\n    const value = e.target.value;\n    this.setState({ description: value });\n  };\n  onAddOption = () => {\n    const result = Joi.validate(\n      { option: this.state.optionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ optionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.options.some(\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          options: this.state.options.concat(this.state.optionValue),\n          optionValueError: \"\",\n        });\n      } else {\n        this.setState({ optionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddAnswer = () => {\n    const result = Joi.validate(\n      { option: this.state.AnsValue },\n      Schemas.option\n    );\n    if(this.state.options.includes(this.state.AnsValue)){\n      if (result.error) {\n        this.setState({ AnsValueError: result.error.details[0].message });\n      } \n      else {\n        const found = this.state.Answers.some(\n          (item) => item.toUpperCase() === this.state.AnsValue.toUpperCase()\n        );\n        if (!found) {\n          this.setState({\n            Answers: this.state.Answers.concat(this.state.AnsValue),\n            AnsValueError: \"\",\n          });\n        } else {\n          this.setState({ AnsValueError: \"Already exists\" });\n        }\n      }\n    }\n    else{\n      this.setState({ AnsValueError: \"Answer value is not present in Options\" });\n    }\n    \n  };\n\n  onAddorUpdate = (ans)=>{\n    if(this.state.addorupdate === \"Update Question\"){\n      console.log(\"Update function is called\")\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\n      const data={category: \"Sequence In Order\", description: this.state.description, options: this.state.options, ans: ans,id:this.props.question.id};\n      this.props.updateQuestion(data)\n    }\n    else{\n      console.log(\"ADD QUESTION function is called\")\n      const data={category: \"Sequence In Order\", description: this.state.description, options: this.state.options, ans: ans};\n      this.props.addQuestion(data)\n    }\n  }\n\n\n  onDelete = (optionsorans,option) => {\n    let options = optionsorans;\n    let ansans = this.state.Answers\n    console.log(options, this.state)\n    const index = options.indexOf(option);\n    const indexans = ansans.indexOf(option);\n    // if(ansans.includes(option)){\n      // console.log(\"indexans  \"+indexans)\n    if (indexans > -1) {\n      // console.log(\"ASDFASDFADFADFDFS\")\n        ansans.splice(indexans, 1);\n    }\n    \n    if (index > -1) {\n      options.splice(index, 1);\n    }\n    // console.log(this.state.value)\n    // console.log(\"aksjhdbfallealleallealle\"+ansans)\n    this.setState({ options: options, Answers:ansans });\n    // console.log(this.state.value)\n  };\n  \n\n  renderOptions = (optionsorans) => {\n    return optionsorans.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                    title=\"HEYY\"\n                    description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(optionsorans,item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  renderAnswers = () => {\n    return this.state.Answers.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(this.state.Answers,item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  onAddQuestion = () => {\n    if (this.state.options.length > 0) {\n      // options are present\n      const result = Joi.validate(\n        { description: this.state.description },\n        Schemas.description\n      );\n      if (result.error) {\n        this.setState({\n          descriptionError: result.error.details[0].message,\n          optionsError: \"\",\n        });\n      } else {\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\n        // if (this.state.value[0]) {\n          if (this.state.Answers[0]) {\n          //      ADD to DATABASE\n          // Closing modal\n          console.log(this.state.value)\n          let ans=[];\n          ans = this.state.Answers\n          this.onAddorUpdate(ans)\n          this.props.handleOk();\n        } else {\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\n        }\n\n        \n      }\n    } else {\n      this.setState({ optionsError: \"Please add atleast one option\" });\n    }\n  };\n  render() { \n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <TextArea\n              placeholder=\"Enter Your Question\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              rows={4}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\n          </div>\n        </div>\n        <br />\n        <div className={classes.BoxOrderDiv}>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n          {/* <div> */}\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Option Here\"\n              value={this.state.optionValue}\n              onChange={(val) => {\n                this.onChangeOptionField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              block\n              type=\"primary\"\n              success\n              onClick={this.onAddOption}\n            >\n              {\" \"}\n              Add Option\n            </Button>\n          </div>\n        </div>\n        <br />\n        <p style={errorStyleText}>{this.state.optionValueError}</p>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n              style ={{width:\"250px\"}}\n              placeholder=\"Enter Answer Here\"\n              value={this.state.AnsValue}\n              onChange={(val) => {\n                this.onChangeAnsField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"105px\" }}\n              block\n              type=\"primary\"\n              success\n              onClick={this.onAddAnswer}\n            >\n              {\" \"}\n              Add Answers\n            </Button>\n          </div>\n        </div>\n        </div>\n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            \n            <p style={errorStyleText}>{this.state.AnsValueError}</p>\n            <br />\n            <p>** Please Enter the Answers in correct sequence **</p>\n          </div>\n        </div>\n\n        <br />\n        <div className={classes.DivinCol}>\n          <div>\n          <h2>Options</h2>\n        {this.renderOptions(this.state.options)}\n          </div>\n        <div>\n        <h2>Answers in order</h2>\n        {this.renderAnswers()}\n        </div>\n        \n        </div>\n        \n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\n            <p style={errorStyleText}> {this.state.optionsError} </p>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\n            <Button block\n              onClick={() => {\n                this.props.handleCancel();\n              }}\n              style={{marginTop: 7}}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"col-12 col-sm-3 \">\n            <Button block\n              onClick={() => {\n                this.onAddQuestion();\n              }}\n              type=\"primary\"\n              style={{marginTop: 7}}\n            >\n              {/* Add Question */}\n              {this.state.addorupdate}\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}","import React, {Component} from 'react';\nimport { Card, Modal, List } from 'antd';\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\nimport MakesequenceInOrder from './MakeSequenceInOrder';\nimport classes from './SequenceInOrder.module.css';\nclass SequenceInOrder extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n    render(){\n        // const ListStyle = {\n        //     display: 'block',\n        //     height: '30px',\n        //     lineHeight: '30px',\n        //   };\n        return(\n            // <div>\n                 <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  actions={[\n                    \n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n                  ]}>\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <div className={classes.DivinCol}>\n                <div>\n                  <h6>Options</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.options.map(index=>{\n                return(\n                    <div className={classes.MyListDiv}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )})}\n            </List>\n                </div>\n                <div>\n                  <h6>Answers</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.ans.map(index=>{\n                return(\n                    <div className={classes.MyListDiv}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n            </div>\n            </Card>\n            <Modal\n              style={{ width: 1000 }}\n              title=\"Edit Question\"\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              width={1200}\n              footer={null}\n            >\n            \n            <MakesequenceInOrder updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\n            </Modal>\n            </div>\n            // </div>\n        )\n    }\n}\n\n\nexport default SequenceInOrder;","import Joi from \"joi-browser\";\r\nexport const description  = {\r\n    description: Joi.string().required()\r\n  };\r\nexport const option  = {\r\n    option: Joi.string().required().min(1)\r\n  };  ","import React, {useState, useEffect} from 'react'\r\nimport {Button, Divider, Input} from \"antd\";\r\nimport {DeleteTwoTone} from \"@ant-design/icons\";\r\nimport Joi from \"joi-browser\";\r\nimport \"./Blanks.css\";\r\nimport * as Schemas from \"../../Schemas/BlanksSchema\";\r\nconst errorStyleText = {\r\n    color: \"#eb2f96\",\r\n  };\r\n  const { TextArea } = Input;\r\n  const blankString=\"____\";\r\nexport  const MakeFillInTheBlanks = (props) => {\r\n    const [question, setQuestion] = useState({\r\n       \r\n        category: \"Fill in the Blanks\",\r\n        description: \"\",\r\n        options: [],\r\n        ans: [],\r\n        addorupdate:\"Add Question\",\r\n        descriptionError: \"\",\r\n        blankValue: \"\",\r\n        bankValueError: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n      if(props.description){\r\n        setQuestion({\r\n          category: \"Fill in the Blanks\",\r\n          description: props.data.description,\r\n          options: props.data.ans,\r\n          ans: [],\r\n          addorupdate:\"Update Question\",\r\n          descriptionError: \"\",\r\n          blankValue: \"\",\r\n          bankValueError: \"\",\r\n      })\r\n      }\r\n    },[props.description, props.data.description, props.data.ans, props.addorupdate]);\r\n  \r\n\r\n    const deleteBlankInDescription=(index)=>{\r\n      console.log(\"index: \", index)\r\n      let desc=question.description;\r\n      const arr = desc.split(\"\");\r\n      let newArr=[];\r\n      let count=0;\r\n      let dashcount=0;\r\n      arr.forEach((item)=>{\r\n     \r\n        if(item === \"_\"){\r\n          console.log(\"dash\");\r\n          if(index===count){\r\n           \r\n\r\n          }else{\r\n            dashcount++;\r\n            newArr.push(item);\r\n           \r\n          }\r\n            \r\n\r\n        }else{\r\n          if(dashcount===4){\r\n            count++;\r\n            dashcount=0;\r\n          }\r\n        \r\n          newArr.push(item);\r\n        }\r\n      });\r\n     \r\n    \r\n      const newDesc= newArr.join(\"\");\r\n      return newDesc;\r\n    };\r\n   const onDelete = (option, i) => {\r\n        let options = question.options;\r\n        const index = options.indexOf(option);\r\n        if (index > -1) {\r\n          options.splice(index, 1);\r\n        }\r\n       const desc= deleteBlankInDescription(i);\r\n       \r\n        setQuestion({ ...question,options: options, description: desc });\r\n      };\r\n      const onBlankValueChange=(e,index)=>{\r\n        const value = e.target.value;\r\n        let questionOption = question.options;\r\n        questionOption[index]= value;\r\n        setQuestion({ ...question,options: questionOption});\r\n\r\n    };\r\n    const renderOptions = () => {\r\n  \r\n      const {options}= question;\r\n        \r\n        return options.map((item, index) => {\r\n          return (\r\n            <div style={{ marginTop: 7 }} id={item} className=\"row\">\r\n              <div className=\"col-5 col-sm-5 offset-sm-1\">\r\n               <Input onChange={(e)=>{onBlankValueChange(e,index);}} value={item}/>\r\n              </div>\r\n              <div className=\"col-2 col-sm-1 \">\r\n                <Button onClick={() => onDelete(item, index)}>\r\n                  {\" \"}\r\n                  <span>\r\n                    <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n                  </span>\r\n                </Button>\r\n              </div>\r\n              {/* <div className=\"col-2 col-sm-1 \">\r\n           \r\n             <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\r\n         \r\n            </div> */}\r\n            </div>\r\n          );\r\n        });\r\n      };\r\n  \r\nconst         onAddBlank=()=>{\r\n    if(question.blankValue){\r\n        const found = question.options.some(\r\n            (item) => item.toUpperCase() === question.blankValue.toUpperCase()\r\n          );\r\n          if (!found) {\r\n              let updateDesc= question.description;\r\n              \r\n              updateDesc= updateDesc.concat(blankString);\r\n\r\n            setQuestion({ ...question,options:question.options.concat(question.blankValue),blankValueError: \"\", description: updateDesc});\r\n\r\n          } else {\r\n              setQuestion({ ...question, blankValueError: \"Already exists\"})\r\n            \r\n          }\r\n    }else{\r\n        setQuestion({ ...question, blankValueError: \"Please enter Value and then Press Button !\"})\r\n    }\r\n};\r\n\r\nconst onAddorUpdate = (ans)=>{\r\n  if(question.addorupdate === \"Update Question\"){\r\n    console.log(\"Update function is called\")\r\n    // this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n    const data={category: \"Fill in the Blanks\", description: question.description, options: [], ans: ans, id: props.data.id};\r\n    props.updateQuestion(data)\r\n  }\r\n  else{\r\n    console.log(\"ADD QUESTION function is called\")\r\n    const data={category: \"Fill in the Blanks\", description: question.description, options: [], ans: ans};\r\n    props.addQuestion(data)\r\n  }\r\n}\r\n\r\nconst onAddQuestion = () => {\r\n    if (question.options.length > 0) {\r\n      // options are present\r\n      const result = Joi.validate(\r\n        { description: question.description },\r\n        Schemas.description\r\n      );\r\n      if (result.error) {\r\n        setQuestion({ ...question,\r\n          descriptionError: result.error.details[0].message,\r\n          optionsError: \"\",\r\n        });\r\n      } else {\r\n        setQuestion({  ...question, descriptionError: \"\", optionsError: \"\" });\r\n        \r\n          //      ADD to DATABASE\r\n          // Closing modal\r\n          const ans=question.options;\r\n         \r\n          // const data={category: \"Fill in the Blanks\", description: question.description, options: [], ans: ans};\r\n          onAddorUpdate(ans);\r\n          props.handleOk();\r\n    \r\n\r\n        \r\n      }\r\n    } else {\r\n      // options error : no option present\r\n      setQuestion({ ...question, optionsError: \"Please add atleast one option\" });\r\n    }\r\n  };\r\n \r\n    return (\r\n        <>\r\n        <div className=\"row no-gutters\">\r\n          <div  className=\"col-12 col-sm-7 offset-sm-1 bankValueStyle\">\r\n            <Input\r\n              placeholder=\"Enter Blank Value Here\"\r\n              value={question.blankValue}\r\n              onChange={(e) => {\r\n                setQuestion({ ...question,blankValue: e.target.value});\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button\r\n              className=\"add-blank\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={()=>{onAddBlank();}}\r\n            >\r\n              {\" \"}\r\n              Add Blank\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{question.blankValueError}</p>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n         <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={question.description}\r\n              onChange={(e)=>setQuestion({...question,description: e.target.value})}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        {renderOptions()}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{question.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              Add Question\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Button} from \"antd\";\r\nexport default class AddQuestionFooter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleOk();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              {this.props.type}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","export const FILL_IN_THE_BLANKS=\"Fill in the Blanks\";\r\nexport const MULTIPLE_CHOICE=\"Multiple Choice\";\r\nexport const SELECT_FROM_DROPDOWN= \"Select From Dropdown\";\r\nexport const TRUE_AND_FALSE= \"True and False\";\r\nexport const MULTIPLE_SELECT= \"Multiple Select\";\r\nexport const MULTIPLE_CHECKBOX= \"Multiple Checkbox\";\r\nexport const SEQUENCE_IN_ORDER= \"Sequence In Order\";\r\nexport const MATCHING_WORDS=\"Matching Words\";\r\nexport const MATCH_DRAG=\"Match Drag\";","import React, { Component } from \"react\";\r\nimport AddQuestionFooter from \"../../AddQuestionFooter\";\r\nimport { Button, Input, Checkbox } from \"antd\";\r\nimport {\r\n  CloseCircleTwoTone,\r\n  PlusOutlined,\r\n  DeleteTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport \"./Styles.css\";\r\nimport { ERROR_COLOR } from \"../../../util/colors\";\r\nimport * as CategoryTypes from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\nexport default class MakeDropDown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\",\r\n      options: [],\r\n      addOptionFields: [],\r\n      addOptionFieldsError: [],\r\n\r\n      ans: [],\r\n\r\n      ansError: \"\",\r\n      descriptionError: \"\",\r\n    };\r\n  }\r\n\r\n  onAddQuestion = () => {\r\n      if(this.state.description.length === 0){\r\n          this.setState({descriptionError: \"Description cannot be Empty!\"});\r\n      }else{\r\n        var temp = this.state.description;\r\n        var dropdownCount = (temp.match(/Dropdown/g) || []).length;\r\n        var optionCount= this.state.options.length;\r\n        if(dropdownCount > optionCount){\r\n            this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n        }else if(dropdownCount === optionCount){\r\n          if(optionCount>0){\r\n            const data={category: CategoryTypes.SELECT_FROM_DROPDOWN, description: this.state.description, options: this.state.options, ans: this.state.ans};\r\n           // console.log(\"data: \", data);\r\n            this.props.addQuestion(data);\r\n            this.props.handleOk();\r\n          }else{\r\n            this.setState({descriptionError: \"Add atleast one Dropdown\"});\r\n          }\r\n        }\r\n        else{\r\n            this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n        }\r\n      }\r\n    \r\n  };\r\n  onChangeDescription = (e) => {\r\n    let value = e.target.value;\r\n    if (e.key === 'Enter') {\r\n     // console.log('do validate');\r\n    \r\n      value= value + \"\\n\";\r\n      //console.log(\"value: \",value);\r\n      this.setState({ description: value });\r\n    }\r\n    console.log(value);\r\n    this.setState({ description: value });\r\n  };\r\n  onEnterOptionValue = (index, e) => {\r\n    const value = e.target.value;\r\n    let newArr = this.state.addOptionFields.splice();\r\n    newArr[index] = value;\r\n    this.setState({ addOptionFields: newArr });\r\n  };\r\n  onOptionChangeValue = (e, index, optionIndex) => {\r\n    const value = e.target.value;\r\n    let optionArray = this.state.options[index].split(\",\");\r\n    optionArray[optionIndex] = value;\r\n    let newOptionArray = optionArray.join(\",\");\r\n    optionArray = this.state.options;\r\n    optionArray[index] = newOptionArray;\r\n    this.setState({ options: optionArray });\r\n  };\r\n  onDeleteOptionValue = (index, optionIndex) => {\r\n    let optionValue = this.state.options[index].split(\",\");\r\n    let del = optionValue.splice(optionIndex, 1);\r\n    let options = this.state.options;\r\n    if (optionIndex === this.state.ans[index]) {\r\n      //if we remove checked then make ans 0 index\r\n      let ans = this.state.ans;\r\n      ans[index] = 0;\r\n      this.setState({ ans });\r\n    }\r\n\r\n    if (optionIndex < this.state.ans[index]) {\r\n      let ans = this.state.ans;\r\n      let ansValue = this.state.ans[index];\r\n      // console.log(\"ans value: \", ansValue);\r\n      ans[index] = ansValue - 1;\r\n      this.setState({ ans });\r\n    }\r\n    const newOptionValue = optionValue.join(\",\");\r\n    options[index] = newOptionValue;\r\n    this.setState({ options: options });\r\n  };\r\n  onChangeCheckedOptionValue = (index, optionIndex) => {\r\n    let ans = this.state.ans;\r\n    ans[index] = optionIndex;\r\n    this.setState({ ans: ans });\r\n  };\r\n  onAddOptionValueBtn = (index) => {\r\n    const value = this.state.addOptionFields[index];\r\n    let addOptionFields = this.state.addOptionFields;\r\n    //addOptionFields--->index\r\n\r\n    //if emty display errors\r\n\r\n    if (value.length === 0) {\r\n      let err = \"Please Enter Value and then Add\";\r\n      let addOptionFieldsError = this.state.addOptionFieldsError;\r\n      addOptionFieldsError[index] = err;\r\n      this.setState({ addOptionFieldsError });\r\n      setTimeout(() => {\r\n        addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = \"\";\r\n        this.setState({ addOptionFieldsError });\r\n      }, 2000);\r\n    } else {\r\n      //check if same exists\r\n      let optionsValue = this.state.options[index].split(\",\");\r\n      if (optionsValue.includes(value)) {\r\n        let err = \"Already Exists\";\r\n        let addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = err;\r\n        this.setState({ addOptionFieldsError });\r\n        setTimeout(() => {\r\n          addOptionFieldsError = this.state.addOptionFieldsError;\r\n          addOptionFieldsError[index] = \"\";\r\n          this.setState({ addOptionFieldsError });\r\n        }, 2000);\r\n      } else {\r\n          if(optionsValue[0]===\"\"){\r\n              optionsValue[0]=value;\r\n              const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n          }else{\r\n        optionsValue.push(value);\r\n        const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n        // adding to options //\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  onDeleteDropDown = (index) => {\r\n    let { ans, options, addOptionFields, addOptionFieldsError, description} = this.state;\r\n    ans.splice(index,1);\r\n   \r\n    options.splice(index,1);\r\n    addOptionFields.splice(index,1);\r\n    addOptionFieldsError.splice(index,1);\r\n    const str= \"#\"+(index+1)+\" Dropdown#\";\r\n    const newDesc=description.split(str).join(\"\");\r\n    let count=1; let first=true; let skip=false;\r\n    let finalDesc=newDesc.split(\"Dropdown#\");\r\n    let Desc=[];\r\n  //  console.log(\"newDesc: \", newDesc);\r\n    //console.log(\"finaldescBefore: \", finalDesc);//\r\n    finalDesc.forEach((item,index)=>{\r\n      \r\n         const length= item.length;\r\n       \r\n         if(item.length>1){\r\n             let n=length-3;\r\n            \r\n             if(item[n]===\"#\"){\r\n                 n++;\r\n                 let str=item.split(\"\");\r\n                 str[n]=count+\"\";\r\n                 let newStr=str.join(\"\");\r\n                 count++;\r\n                // console.log(\"str: \", newStr);\r\n                 Desc.push(newStr);\r\n            \r\n             }else{\r\n               // console.log(\"item: \", item);\r\n                Desc.push(item);\r\n             }\r\n\r\n         }else{\r\n          //  console.log(\"item: \", item);\r\n            Desc.push(item);\r\n         }\r\n  \r\n    });\r\n \r\n    let finaldescription= Desc.join(\"Dropdown#\");\r\n    if(Desc.length===1){\r\n        var c = (finaldescription.match(/Dropdown/g) || []).length;\r\n        var f = (finaldescription.match(/#/g) || []).length;\r\n        if(c===0 && f===1){\r\n        finaldescription=finaldescription+\"Dropdown#\";}\r\n    }\r\n  \r\n    this.setState({ans, options, addOptionFields, addOptionFieldsError, description: finaldescription});\r\n  }\r\n\r\n  onAddDropdown = () => {\r\n        let {description, ans, options, addOptionFields, addOptionFieldsError} = this.state;\r\n        let length = this.state.options.length;\r\n        description = description + \" #\"+(length+1)+\" Dropdown#\";\r\n        ans[length]=0;\r\n        options[length]=\"\";\r\n        addOptionFields[length]=\"\";\r\n        addOptionFieldsError[length]=\"\";\r\n        this.setState({description, ans, options, addOptionFields, addOptionFieldsError});\r\n  }\r\n\r\n  renderAddDropdownSection = (item, index) => {\r\n    const optionArray = item.split(\",\"); //1,2,3\r\n    return (\r\n      <div style={{textAlign: \"center\"}} className=\"col-11 col-sm-4 offset-sm-1 dropdown-container-style\">\r\n        <div id=\"box\">\r\n          <Button onClick={()=>{this.onDeleteDropDown(index);}} type=\"text\" id=\"icon-delete-dropdown\">\r\n            <span>\r\n              <CloseCircleTwoTone\r\n                style={{ fontSize: 20 }}\r\n                twoToneColor=\"#eb2f96\"\r\n              />\r\n            </span>\r\n          </Button>\r\n        </div>\r\n        {/* input field and add button */}\r\n        <h5 style={{margin : 7}}>Dropdown #{index+1}</h5>\r\n        <div\r\n          style={{ marginTop: 10 }}\r\n          className=\"row no-gutters enter-option-value-container\"\r\n        >\r\n          <div className=\"enter-option-value-input\">\r\n            <Input\r\n              value={this.state.addOptionFields[index]}\r\n              onChange={(e) => this.onEnterOptionValue(index, e)}\r\n              placeholder=\"Enter Option Value to Add\"\r\n            />\r\n          </div>\r\n          <div className=\"enter-option-value-add-btn\">\r\n            <Button\r\n              onClick={() => {\r\n                this.onAddOptionValueBtn(index);\r\n              }}\r\n              type=\"primary\"\r\n            >\r\n              <span>\r\n                <PlusOutlined\r\n                  style={{\r\n                    color: \"white\",\r\n                    verticalAlign: \"baseline\",\r\n                    fontSize: 18,\r\n                  }}\r\n                />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        {/* error row */}\r\n        <div className=\"row no-gutters\">\r\n          <p style={{ color: ERROR_COLOR }}>\r\n            {this.state.addOptionFieldsError[index]}\r\n          </p>\r\n        </div>\r\n        {/* List of options */}\r\n\r\n        {this.state.options[index] !== \"\"\r\n          ? optionArray.map((item, optionIndex) => {\r\n              let checked = false;\r\n              if (optionIndex === this.state.ans[0]) {\r\n                checked = true;\r\n              }\r\n              return (\r\n                <div className=\"row \">\r\n                  <div className=\"checkbox-div\">\r\n                    <Button type=\"text\">\r\n                      <Checkbox\r\n                        checked={checked}\r\n                        onChange={(e) => {\r\n                          this.onChangeCheckedOptionValue(index, optionIndex);\r\n                        }}\r\n                      />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"option-value-div\">\r\n                    <Input\r\n                      value={item}\r\n                      onChange={(e) => {\r\n                        this.onOptionChangeValue(e, index, optionIndex);\r\n                      }}\r\n                      placeholder=\"Option Value\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"option-value-delete-div\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.onDeleteOptionValue(index, optionIndex);\r\n                      }}\r\n                    >\r\n                      <span>\r\n                        <DeleteTwoTone\r\n                          twoToneColor=\"#eb2f96\"\r\n                          style={{ verticalAlign: \"baseline\" }}\r\n                        />{\" \"}\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    // console.log(this.state.ans);\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* <h1>Select from Dropdown</h1> */}\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{ color: ERROR_COLOR }}>\r\n                {this.state.descriptionError}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\r\n                <div >\r\n                <Button onClick={()=>this.onAddDropdown()} type=\"primary\" style={{position: \"absolute\", right :13}}>Add Dropdown</Button>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <br/><br/>\r\n        <div className=\"row\">\r\n          {this.state.options.map((item, index) => {\r\n            return <>{this.renderAddDropdownSection(item, index)}</>;\r\n          })}\r\n        </div>\r\n        <AddQuestionFooter\r\n        type= \"Add Question\"\r\n          handleCancel={this.props.handleCancel}\r\n          handleOk={this.onAddQuestion}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Input, Divider, Button, Radio} from \"antd\";\r\nimport {ERROR_COLOR} from \"../../../util/colors\";\r\nimport { TRUE_AND_FALSE} from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\n\r\nexport default function MakeTrueFalse(props) {\r\n    const [question, setQuestion] = useState({\r\n       \r\n        category: TRUE_AND_FALSE,\r\n        description: \"\",\r\n        options: [],\r\n        ans: [],\r\n        \r\n        descriptionError: \"\",\r\n       \r\n    });\r\n    const [value, setValue] = useState(true);\r\n\r\n\r\n    const onAddQuestion = () => {\r\n        if(question.description.length===0){\r\n            setQuestion({ ...question,descriptionError: \"Description Empty!!!\"});\r\n        }else{\r\n            \r\n        let ans=[];\r\n        ans[0]=value;\r\n             \r\n              const data={category: TRUE_AND_FALSE, description: question.description, options: [], ans: ans,descriptionError: \"\" };\r\n             //console.log(data);\r\n               props.addQuestion(data);\r\n              props.handleOk();\r\n        }\r\n      };\r\n\r\n\r\n\r\n      const onChange = e => {\r\n       // console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n      };\r\n      const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n      };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n       \r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{color:ERROR_COLOR}}>{question.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n         <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={question.description}\r\n              onChange={(e)=>setQuestion({...question,description: e.target.value})}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n          <Radio.Group onChange={onChange} value={value}>\r\n      <Radio style={radioStyle} value={true}>True</Radio>\r\n      <Radio style={radioStyle} value={false}>False</Radio>\r\n      \r\n    </Radio.Group>\r\n          </div>\r\n        </div>\r\n        \r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              Add Question\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\nimport { Input,  Button, Divider, List } from \"antd\";\nimport { DeleteTwoTone } from \"@ant-design/icons\";\nimport Joi from \"joi-browser\";\nimport * as Schemas from \"../../Schemas/Mcqs\";\nimport \"../Multiple Choice/MakeMultipleChoice.css\";\nimport classes from './MatchingWords.module.css'\nconst { TextArea } = Input;\n\nconst errorStyleText = {\n  color: \"#eb2f96\",\n};\nexport default class MakeMatchingWords extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n//  here left oprtions are leftoptions\n//  right options are options\n//  correct order of answers(ans) is Answers\n      description: \"\",\n      descriptionError: \"\",\n      optionValue: \"\",\n      optionValueError: \"\",\n      AnsValueError: \"\",\n      addorupdate : \"Add Question\",\n      options: [],\n      leftoptions:[],\n      leftoptionsError:\"\",\n      leftoptionValue:\"\",\n      leftoptionValueError:\"\",\n      Answers:[],\n      optionsError: \"\",\n      AnsValue:\"\",\n      value: [],\n    };\n  }\n  componentDidMount() {\n    if(this.props.description){\n      console.log(this.props.question)\n        this.setState({description: this.props.question.description,\n            options: this.props.question.rightoptions,\n            leftoptions: this.props.question.leftoptions,\n            Answers: this.props.question.ans,\n            addorupdate : \"Update Question\"})\n    }\n  }\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  onChangeOptionField = (val) => {\n    console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ optionValue: value });\n    console.log(this.state.optionValue)\n  };\n  onChangeAnsField = (val) => {\n    // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ AnsValue: value });\n    // console.log(this.state.AnsValue)\n  };\n  onChangeLeftField = (val) => {\n    // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ leftoptionValue: value });\n    // console.log(this.state.AnsValue)\n  };\n\n  onChangeDescription = (e) => {\n    const value = e.target.value;\n    this.setState({ description: value });\n  };\n\n\n  onAddLeftOption = () => {\n    const result = Joi.validate(\n      { option: this.state.leftoptionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ leftoptionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.leftoptions.some(\n        (item) => item.toUpperCase() === this.state.leftoptionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          leftoptions: this.state.leftoptions.concat(this.state.leftoptionValue),\n          leftoptionValueError: \"\",\n        });\n      } else {\n        this.setState({ leftoptionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddOption = () => {\n    const result = Joi.validate(\n      { option: this.state.optionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ optionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.options.some(\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          options: this.state.options.concat(this.state.optionValue),\n          optionValueError: \"\",\n        });\n      } else {\n        this.setState({ optionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddAnswer = () => {\n    const result = Joi.validate(\n      { option: this.state.AnsValue },\n      Schemas.option\n    );\n    if(this.state.options.includes(this.state.AnsValue)){\n      if (result.error) {\n        this.setState({ AnsValueError: result.error.details[0].message });\n      } \n      else {\n        const found = this.state.Answers.some(\n          (item) => item.toUpperCase() === this.state.AnsValue.toUpperCase()\n        );\n        if (!found) {\n          this.setState({\n            Answers: this.state.Answers.concat(this.state.AnsValue),\n            AnsValueError: \"\",\n          });\n        } else {\n          this.setState({ AnsValueError: \"Already exists\" });\n        }\n      }\n    }\n    else{\n      this.setState({ AnsValueError: \"Answer value is not present in Options\" });\n    }\n    \n  };\n\n  onAddorUpdate = (ans)=>{\n    if(this.state.addorupdate === \"Update Question\"){\n      console.log(\"Update function is called\")\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\n      const data={category: \"Matching Words\", description: this.state.description,leftoptions:this.state.leftoptions, rightoptions: this.state.options, ans: ans,id:this.props.question.id};\n      this.props.updateQuestion(data)\n    }\n    else{\n      console.log(\"ADD QUESTION function is called\")\n      const data={category: \"Matching Words\", description: this.state.description,leftoptions:this.state.leftoptions, rightoptions: this.state.options, ans: ans};\n      this.props.addQuestion(data)\n    }\n  }\n\n  onDeleteLeft = (option)=>{\n    let leftoptions = this.state.leftoptions;\n    const index = leftoptions.indexOf(option);\n    if (index > -1) {\n      leftoptions.splice(index, 1);\n    }\n    this.setState({ leftoptions: leftoptions})\n\n  }\n  onDelete = (optionsorans,option) => {\n    let options = optionsorans;\n    let ansans = this.state.Answers\n    console.log(options, this.state)\n    const index = options.indexOf(option);\n    const indexans = ansans.indexOf(option);\n    // if(ansans.includes(option)){\n      // console.log(\"indexans  \"+indexans)\n    if (indexans > -1) {\n      // console.log(\"ASDFASDFADFADFDFS\")\n        ansans.splice(indexans, 1);\n    }\n    \n    if (index > -1) {\n      options.splice(index, 1);\n    }\n    // console.log(this.state.value)\n    // console.log(\"aksjhdbfallealleallealle\"+ansans)\n    this.setState({ options: options, Answers:ansans });\n    // console.log(this.state.value)\n  };\n  \n\n  renderAnswers = (optionsorans) => {\n    return optionsorans.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className={classes.DivinCol}>\n          <div className=\"col-5 col-sm-6 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(this.state.options,item)}>\n              {/* {\" \"} */}\n              <span>\n                <DeleteTwoTone  twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  renderOptions = (leftoptions) => {\n    return leftoptions.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className={classes.DivinCol}>\n         <div className=\"col-5 col-sm-6 offset-sm-1\">\n          {/* <div > */}\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDeleteLeft(item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  onAddQuestion = () => {\n    if (this.state.options.length > 0) {\n      // options are present\n      const result = Joi.validate(\n        { description: this.state.description },\n        Schemas.description\n      );\n      if (result.error) {\n        this.setState({\n          descriptionError: result.error.details[0].message,\n          optionsError: \"\",\n        });\n      } else {\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\n        // if (this.state.value[0]) {\n          if (this.state.Answers[0]) {\n          //      ADD to DATABASE\n          // Closing modal\n          console.log(this.state.value)\n          let ans=[];\n          ans = this.state.Answers\n          this.onAddorUpdate(ans)\n          this.props.handleOk();\n        } else {\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\n        }\n\n        \n      }\n    } else {\n      this.setState({ optionsError: \"Please add atleast one option\" });\n    }\n  };\n\n\n//  Add database connection.....\n\n\n\n\n  render() { \n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\n            <TextArea\n              placeholder=\"Enter Your Question\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              rows={4}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\n          </div>\n        </div>\n        <br />\n\n      <div className={classes.BoxOrderDiv}>\n\n      \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Left Option Here\"\n              value={this.state.leftoptionValue}\n              onChange={(val) => {\n                this.onChangeLeftField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddLeftOption}\n            >\n              {\" \"}\n              Add Left\n            </Button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Right Option Here\"\n              value={this.state.optionValue}\n              onChange={(val) => {\n                this.onChangeOptionField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddOption}\n            >\n              {\" \"}\n              Add Right\n            </Button>\n          </div>\n        </div>\n        \n        </div>\n              <br />\n          <div className=\"row\" style={{width:\"600px\", margin:\"0 auto\"}}>\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Answer Here\"\n              value={this.state.AnsValue}\n              onChange={(val) => {\n                this.onChangeAnsField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"105px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddAnswer}\n            >\n              {\" \"}\n              Add Answers\n            </Button>\n          </div>\n        </div>\n        \n\n        <p style={errorStyleText}>{this.state.optionValueError}</p>\n        <br />\n       \n        \n\n\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            \n            <p style={errorStyleText}>{this.state.AnsValueError}</p>\n            {/* <br /> */}\n            <p>** Please Enter the Answers in correct sequence **</p>\n          </div>\n        </div>\n\n        <br />\n        <div className={classes.DivinCol}>\n        <div>\n          <h6>Left Options</h6>\n        {this.renderOptions(this.state.leftoptions)}\n          </div>\n          <div>\n          <h6>Right Options</h6>\n        {this.renderAnswers(this.state.options)}\n          </div>\n        \n        </div>\n        <br />\n        <div className=\"col\" style={{paddingLeft:\"40%\"}}>\n        <h6>Answers in order</h6>\n        {this.renderAnswers(this.state.Answers)}\n        </div>\n        \n        \n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\n            <p style={errorStyleText}> {this.state.optionsError} </p>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\n            <Button block\n              onClick={() => {\n                this.props.handleCancel();\n              }}\n              style={{marginTop: 7}}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"col-12 col-sm-3 \">\n            <Button block\n              onClick={() => {\n                this.onAddQuestion();\n              }}\n              type=\"primary\"\n              style={{marginTop: 7}}\n            >\n              {/* Add Question */}\n              {this.state.addorupdate}\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}","import React, { Component } from \"react\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Menu, Modal, Dropdown, Divider,} from \"antd\";\r\nimport \"./css/main.css\";\r\nimport MakeMultipleChoice from \"./Categories/Multiple Choice/MakeMultipleChoice\"\r\nimport {MakeFillInTheBlanks} from \"./Categories/Blanks/MakeFillInTheBlanks\";\r\nimport MakeMultipleCheckbox from \"./Categories/MultipleCheckbox/MakeMultipleCheckbox\";\r\nimport MakeDropDown from \"./Categories/Select-From-dropdown/MakeDropDown\";\r\nimport MakeTrueFalse from \"./Categories/TrueAndFalse/MakeTrueFalse\";\r\nimport MakeSequenceinorder from \"./Categories/SequenceInOrder/MakeSequenceInOrder\";\r\nimport MakeMatchingWords from \"./Categories/MatchingWords/MakeMatchingWords\";\r\nimport * as CategoryTypes from \"../util/Categories\";\r\n\r\nexport default class AddQuestion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { visible: false, catergory: \"\"};\r\n  }\r\n\r\n  componentDidMount(){\r\n   // this.props.addQuestion();\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  onCatChange=(value)=>{\r\n    this.setState({catergory: value});\r\n    \r\n  }\r\n\r\n   menu = () =>{\r\n       return (\r\n        <Menu>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.MULTIPLE_CHOICE);}}>\r\n          \r\n              Multiple Choice\r\n         \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.FILL_IN_THE_BLANKS);}}>\r\n           \r\n              Fill in the Blanks\r\n   \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.SELECT_FROM_DROPDOWN);}}>\r\n          \r\n              Select From Dropdown\r\n     \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.TRUE_AND_FALSE);}}>\r\n          \r\n              True and False\r\n     \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.MULTIPLE_CHECKBOX);}}>\r\n          \r\n              Multiple Response\r\n     \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.SEQUENCE_IN_ORDER);}}>\r\n          \r\n              Sequence In Order\r\n     \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.MATCHING_WORDS);}}>\r\n          \r\n              Matching Words\r\n     \r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n   }\r\n\r\n \r\n   CategoryLoader=()=>{\r\n      \r\n       if(this.state.catergory === \"Multiple Choice\"){\r\n        \r\n           return (<MakeMultipleChoice addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }else if (this.state.catergory === \"Fill in the Blanks\"){\r\n        return (<MakeFillInTheBlanks addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }else if (this.state.catergory === CategoryTypes.SELECT_FROM_DROPDOWN){\r\n        return (<MakeDropDown addQuestion={this.props.addQuestion}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }else if (this.state.catergory === CategoryTypes.TRUE_AND_FALSE){\r\n        return (<MakeTrueFalse addQuestion={this.props.addQuestion}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.MULTIPLE_CHECKBOX){\r\n        return (<MakeMultipleCheckbox addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.SEQUENCE_IN_ORDER){\r\n        return (<MakeSequenceinorder addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.MATCHING_WORDS){\r\n        return (<MakeMatchingWords addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       return null;\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12\">\r\n        <div style={{ display: \"flex\" }} className=\"block\">\r\n          <hr />\r\n          <div\r\n            style={{\r\n              justifyContent: \"center\",\r\n              textAlign: \"center\",\r\n              postion: \"fixed\",\r\n            }}\r\n            className=\"mx-auto\"\r\n          >\r\n            <Button\r\n              block\r\n              type=\"primary\"\r\n              icon={\r\n                <PlusOutlined\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    verticalAlign: \"baseline\",\r\n                  }}\r\n                />\r\n              }\r\n              onClick={this.showModal}\r\n            >\r\n              Questions\r\n            </Button>\r\n            <Modal\r\n              style={{ width: 1000 }}\r\n              title=\"Create Question\"\r\n              visible={this.state.visible}\r\n              onCancel={this.handleCancel}\r\n              width={1200}\r\n              footer={null}\r\n            >\r\n              <div>\r\n                <div className=\"cat-choose\">\r\n                  <Dropdown overlay={this.menu} placement=\"bottomLeft\" arrow>\r\n            <Button>{this.state.catergory?this.state.catergory:<span>Click to Choose Catergory</span>}</Button>\r\n                  </Dropdown>\r\n                </div>\r\n\r\n                {/* body */}\r\n                <Divider />\r\n                {this.CategoryLoader()}\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Card } from \"antd\";\r\nimport { DeleteTwoTone, EditTwoTone } from \"@ant-design/icons\";\r\nimport {EditFillInTheBlanks} from \"./EditFillInTheBlanks\";\r\nimport {MakeFillInTheBlanks} from \"./MakeFillInTheBlanks\";\r\nconst blankString = \"____\";\r\n\r\n\r\nconst myIncludes=(str)=>{\r\n    if(str.includes(\".\")){\r\n        return true;\r\n    }else if(str.includes(\",\")){\r\n        return true;\r\n    }else if(str.includes(\"'\")){\r\n        return true;\r\n    }else if(str.includes(\"\\\"\")){\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const Blanks = (props) => {\r\n // console.log(\"props: \",props.data);\r\n  const [visible, toggleModal] = useState(false);\r\n\r\n  const showModal = () => {\r\n    toggleModal(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    toggleModal(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    toggleModal(false);\r\n  };\r\n  const onDelete = () => {\r\n    props.deleteQuestion(props.data.id);\r\n  };\r\n  const makeDescription = (desc) => {\r\n    //console.log(\"ans: \",props.data.ans[0]);\r\n    const array = desc.split(\" \");\r\n    let count = 0;\r\n    const result = array.map((item, index) => {\r\n      // console.log(index);\r\n      if((myIncludes(item)) &&  item.includes(\"____\")){\r\n        console.log(\"found: \", item);\r\n        if (item[item.length - 1] === \".\") {\r\n            \r\n            count=count+1\r\n          return (\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n              {props.data.ans[count-1]}\r\n              {\".\"}\r\n              \r\n            </span>\r\n          );\r\n        } else if (item[0] === \".\") {\r\n            console.log(\"found\");\r\n            count=count+1;\r\n            return (\r\n                <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>.{\" \"} \r\n                  {props.data.ans[count-1]}\r\n                  \r\n                </span>\r\n              );\r\n        }else if (item[item.length - 1] === \",\") {\r\n            count=count+1;\r\n            return (\r\n              <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n                {props.data.ans[count-1]}\r\n                {\",\"}\r\n                \r\n              </span>\r\n            );\r\n          } else if (item[0] === \",\") {\r\n            count=count+1;\r\n              return (\r\n                  <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>,{\" \"} \r\n                    {props.data.ans[count-1]}\r\n                    \r\n                  </span>\r\n                );\r\n          }\r\n          \r\n      }else{ \r\n      if (item === blankString) {\r\n        count=count+1;\r\n        return (\r\n          <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n            {props.data.ans[count-1]}{\" \"}\r\n           \r\n          </span>\r\n        );\r\n      } else if (item !== blankString) {\r\n        return <span>{item} </span>;\r\n      }\r\n    \r\n    }if(item.includes(\".\")){\r\n        count=count+1;\r\n        const arr= item.split(\".\");\r\n        if(arr[0]===blankString){\r\n            return(<>\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n            {props.data.ans[count-1]}\r\n            \r\n          </span>. {arr[1]} {\" \"}</>);\r\n        }else{\r\n            return(\r\n            <>{arr[0]}.\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n            {props.data.ans[count-1]} {\" \"}\r\n            \r\n          </span>\r\n          </>);\r\n        }\r\n    }\r\n    if(item.includes(\",\")){\r\n        count=count+1;\r\n        const arr= item.split(\",\");\r\n        if(arr[0]===blankString){\r\n            return(<>\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n            {props.data.ans[count-1]}\r\n            \r\n          </span>, {arr[1]} {\" \"}</>);\r\n        }else{\r\n            return(\r\n            <>{arr[0]},\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\r\n            {props.data.ans[count-1]} {\" \"}\r\n            \r\n          </span>\r\n          </>);\r\n        }\r\n    }\r\n     \r\n    });\r\n\r\n\r\n     //console.log(\"last result\");\r\n    return result;\r\n  };\r\n  return (\r\n    <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n      <Card\r\n        style={{ backgroundColor: props.color }}\r\n        actions={[\r\n          <EditTwoTone\r\n            onClick={() => {\r\n              showModal();\r\n            }}\r\n            twoToneColor=\"#52c41a\"\r\n            key=\"edit\"\r\n          />,\r\n          <DeleteTwoTone\r\n            onClick={() => {\r\n              onDelete();\r\n            }}\r\n            twoToneColor=\"#eb2f96\"\r\n            key=\"del\"\r\n          />,\r\n        ]}\r\n      >\r\n        <p style={{ fontSize: 17 }}>\r\n         \r\n          {props.quesNo}. {makeDescription(props.data.description)}\r\n        </p>\r\n      </Card>\r\n      <Modal\r\n        style={{ width: 1000 }}\r\n        title=\"Edit Question\"\r\n        visible={visible}\r\n        onCancel={() => handleCancel()}\r\n        width={1200}\r\n        footer={null}\r\n      >\r\n         <MakeFillInTheBlanks updateQuestion={props.updateQuestion} description={props.data.description} data={props.data} handleOk={handleOk} handleCancel={handleCancel}/> \r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Button, Divider, Input} from \"antd\";\r\nimport {DeleteTwoTone} from \"@ant-design/icons\";\r\nimport Joi from \"joi-browser\";\r\nimport \"./Blanks.css\";\r\nimport * as Schemas from \"../../Schemas/BlanksSchema\";\r\nconst errorStyleText = {\r\n    color: \"#eb2f96\",\r\n  };\r\n  const { TextArea } = Input;\r\n  const blankString=\"____\";\r\nexport   const EditFillInTheBlanks = (props) => {\r\n    const [question, setQuestion] = useState({\r\n       \r\n        category: \"Fill in the Blanks\",\r\n        description: props.data.description,\r\n        options: props.data.ans,\r\n        ans: [],\r\n        \r\n        descriptionError: \"\",\r\n        blankValue: \"\",\r\n        bankValueError: \"\",\r\n    });\r\n\r\n    \r\n    const deleteBlankInDescription=(index)=>{\r\n      console.log(\"index: \", index)\r\n      let desc=question.description;\r\n      const arr = desc.split(\"\");\r\n      let newArr=[];\r\n      let count=0;\r\n      let dashcount=0;\r\n      arr.forEach((item)=>{\r\n     \r\n        if(item === \"_\"){\r\n          console.log(\"dash\");\r\n          if(index===count){\r\n           \r\n\r\n          }else{\r\n            dashcount++;\r\n            newArr.push(item);\r\n           \r\n          }\r\n            \r\n\r\n        }else{\r\n          if(dashcount===4){\r\n            count++;\r\n            dashcount=0;\r\n          }\r\n        \r\n          newArr.push(item);\r\n        }\r\n      });\r\n     \r\n    \r\n      const newDesc= newArr.join(\"\");\r\n      return newDesc;\r\n    };\r\n   const onDelete = (option, i) => {\r\n        let options = question.options;\r\n        const index = options.indexOf(option);\r\n        if (index > -1) {\r\n          options.splice(index, 1);\r\n        }\r\n       const desc= deleteBlankInDescription(i);\r\n       \r\n        setQuestion({ ...question,options: options, description: desc });\r\n      };\r\n    const renderOptions = () => {\r\n  \r\n      const {options}= question;\r\n      const onBlankValueChange=(e,index)=>{\r\n          const value = e.target.value;\r\n          let questionOption = question.options;\r\n          questionOption[index]= value;\r\n          setQuestion({ ...question,options: questionOption});\r\n\r\n      };\r\n        return options.map((item, index) => {\r\n          return (\r\n            <div style={{ marginTop: 7 }} id={item} className=\"row\">\r\n              <div className=\"col-5 col-sm-5 offset-sm-1\">\r\n               <Input onChange={(e)=>{onBlankValueChange(e,index);}} value={item}/>\r\n              </div>\r\n              <div className=\"col-2 col-sm-1 \">\r\n                <Button onClick={() => onDelete(item, index)}>\r\n                  {\" \"}\r\n                  <span>\r\n                    <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n                  </span>\r\n                </Button>\r\n              </div>\r\n              {/* <div className=\"col-2 col-sm-1 \">\r\n           \r\n             <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\r\n         \r\n            </div> */}\r\n            </div>\r\n          );\r\n        });\r\n      };\r\n  \r\nconst         onAddBlank=()=>{\r\n    if(question.blankValue){\r\n        const found = question.options.some(\r\n            (item) => item.toUpperCase() === question.blankValue.toUpperCase()\r\n          );\r\n          if (!found) {\r\n              let updateDesc= question.description;\r\n              \r\n              updateDesc= updateDesc.concat(blankString);\r\n\r\n            setQuestion({ ...question,options:question.options.concat(question.blankValue),blankValueError: \"\", description: updateDesc});\r\n\r\n          } else {\r\n              setQuestion({ ...question, blankValueError: \"Already exists\"})\r\n            \r\n          }\r\n    }else{\r\n        setQuestion({ ...question, blankValueError: \"Please enter Value and then Press Button !\"})\r\n    }\r\n};\r\n\r\n\r\nconst onAddQuestion = () => {\r\n    if (question.options.length > 0) {\r\n      // options are present\r\n      const result = Joi.validate(\r\n        { description: question.description },\r\n        Schemas.description\r\n      );\r\n      if (result.error) {\r\n        setQuestion({ ...question,\r\n          descriptionError: result.error.details[0].message,\r\n          optionsError: \"\",\r\n        });\r\n      } else {\r\n        setQuestion({  ...question, descriptionError: \"\", optionsError: \"\" });\r\n        \r\n          //      ADD to DATABASE\r\n          // Closing modal\r\n          const ans=question.options;\r\n         \r\n          const data={category: \"Fill in the Blanks\", description: question.description, options: [], ans: ans, id: props.data.id};\r\n          props.updateQuestion(data);\r\n          props.handleOk();\r\n    \r\n\r\n        \r\n      }\r\n    } else {\r\n      // options error : no option present\r\n      setQuestion({ ...question, optionsError: \"Please add atleast one option\" });\r\n    }\r\n  };\r\n \r\n    return (\r\n        <>\r\n        <div className=\"row no-gutters\">\r\n          <div  className=\"col-12 col-sm-7 offset-sm-1 bankValueStyle\">\r\n            <Input\r\n              placeholder=\"Enter Blank Value Here\"\r\n              value={question.blankValue}\r\n              onChange={(e) => {\r\n                setQuestion({ ...question,blankValue: e.target.value});\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button\r\n              className=\"add-blank\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={()=>{onAddBlank();}}\r\n            >\r\n              {\" \"}\r\n              Add Blank\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{question.blankValueError}</p>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n         <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={question.description}\r\n              onChange={(e)=>setQuestion({...question,description: e.target.value})}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        {renderOptions()}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{question.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AddQuestionFooter from \"../../AddQuestionFooter\";\r\nimport { Button, Input, Checkbox } from \"antd\";\r\nimport {\r\n  CloseCircleTwoTone,\r\n  PlusOutlined,\r\n  DeleteTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport \"./Styles.css\";\r\nimport { ERROR_COLOR } from \"../../../util/colors\";\r\nimport * as CategoryTypes from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\nexport default class EditDropDown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: this.props.data.description,\r\n      options: this.props.data.options,\r\n      addOptionFields: [],\r\n      addOptionFieldsError: [],\r\n\r\n      ans: this.props.data.ans,\r\n\r\n      ansError: \"\",\r\n      descriptionError: \"\",\r\n    };\r\n  }\r\n\r\n  onAddQuestion = () => {\r\n    if(this.state.description.length === 0){\r\n        this.setState({descriptionError: \"Description cannot be Empty!\"});\r\n    }else{\r\n      var temp = this.state.description;\r\n      var dropdownCount = (temp.match(/Dropdown/g) || []).length;\r\n      var optionCount= this.state.options.length;\r\n      if(dropdownCount > optionCount){\r\n          this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n      }else if(dropdownCount === optionCount){\r\n        if(optionCount>0){\r\n          const data={category: CategoryTypes.SELECT_FROM_DROPDOWN, description: this.state.description, options: this.state.options, ans: this.state.ans, id : this.props.data.id};\r\n          //console.log(\"data: \", data);\r\n          this.props.updateQuestion(data);\r\n          this.props.handleOk();\r\n        }else{\r\n          this.setState({descriptionError: \"Add atleast one Dropdown\"});\r\n        }\r\n      }\r\n      else{\r\n          this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n      }\r\n    }\r\n}\r\n_handleKeyDown = (e) => {\r\n \r\n}\r\n  onChangeDescription = (e) => {\r\n    let value = e.target.value;\r\n    if (e.key === 'Enter') {\r\n     // console.log('do validate');\r\n    \r\n      value= value + \"\\n\";\r\n      //console.log(\"value: \",value);\r\n      this.setState({ description: value });\r\n    }\r\n    console.log(value);\r\n    this.setState({ description: value });\r\n  };\r\n  onEnterOptionValue = (index, e) => {\r\n    const value = e.target.value;\r\n    let newArr = this.state.addOptionFields.splice();\r\n    newArr[index] = value;\r\n    this.setState({ addOptionFields: newArr });\r\n  };\r\n  onOptionChangeValue = (e, index, optionIndex) => {\r\n    const value = e.target.value;\r\n    let optionArray = this.state.options[index].split(\",\");\r\n    optionArray[optionIndex] = value;\r\n    let newOptionArray = optionArray.join(\",\");\r\n    optionArray = this.state.options;\r\n    optionArray[index] = newOptionArray;\r\n    this.setState({ options: optionArray });\r\n  };\r\n  onDeleteOptionValue = (index, optionIndex) => {\r\n    let optionValue = this.state.options[index].split(\",\");\r\n    let del = optionValue.splice(optionIndex, 1);\r\n    let options = this.state.options;\r\n    if (optionIndex === this.state.ans[index]) {\r\n      //if we remove checked then make ans 0 index\r\n      let ans = this.state.ans;\r\n      ans[index] = 0;\r\n      this.setState({ ans });\r\n    }\r\n\r\n    if (optionIndex < this.state.ans[index]) {\r\n      let ans = this.state.ans;\r\n      let ansValue = this.state.ans[index];\r\n      // console.log(\"ans value: \", ansValue);\r\n      ans[index] = ansValue - 1;\r\n      this.setState({ ans });\r\n    }\r\n    const newOptionValue = optionValue.join(\",\");\r\n    options[index] = newOptionValue;\r\n    this.setState({ options: options });\r\n  };\r\n  onChangeCheckedOptionValue = (index, optionIndex) => {\r\n    let ans = this.state.ans;\r\n    ans[index] = optionIndex;\r\n    this.setState({ ans: ans });\r\n  };\r\n  onAddOptionValueBtn = (index) => {\r\n    const value = this.state.addOptionFields[index];\r\n    let addOptionFields = this.state.addOptionFields;\r\n    //addOptionFields--->index\r\n\r\n    //if emty display errors\r\n\r\n    if (value.length === 0) {\r\n      let err = \"Please Enter Value and then Add\";\r\n      let addOptionFieldsError = this.state.addOptionFieldsError;\r\n      addOptionFieldsError[index] = err;\r\n      this.setState({ addOptionFieldsError });\r\n      setTimeout(() => {\r\n        addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = \"\";\r\n        this.setState({ addOptionFieldsError });\r\n      }, 2000);\r\n    } else {\r\n      //check if same exists\r\n      let optionsValue = this.state.options[index].split(\",\");\r\n      if (optionsValue.includes(value)) {\r\n        let err = \"Already Exists\";\r\n        let addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = err;\r\n        this.setState({ addOptionFieldsError });\r\n        setTimeout(() => {\r\n          addOptionFieldsError = this.state.addOptionFieldsError;\r\n          addOptionFieldsError[index] = \"\";\r\n          this.setState({ addOptionFieldsError });\r\n        }, 2000);\r\n      } else {\r\n          if(optionsValue[0]===\"\"){\r\n              optionsValue[0]=value;\r\n              const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n          }else{\r\n        optionsValue.push(value);\r\n        const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n        // adding to options //\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  onDeleteDropDown = (index) => {\r\n    let { ans, options, addOptionFields, addOptionFieldsError, description} = this.state;\r\n    ans.splice(index,1);\r\n   \r\n    options.splice(index,1);\r\n    addOptionFields.splice(index,1);\r\n    addOptionFieldsError.splice(index,1);\r\n    const str= \"#\"+(index+1)+\" Dropdown#\";\r\n    const newDesc=description.split(str).join(\"\");\r\n    let count=1; let first=true; let skip=false;\r\n    let finalDesc=newDesc.split(\"Dropdown#\");\r\n    let Desc=[];\r\n  //  console.log(\"newDesc: \", newDesc);\r\n    //console.log(\"finaldescBefore: \", finalDesc);//\r\n    finalDesc.forEach((item,index)=>{\r\n      \r\n         const length= item.length;\r\n       \r\n         if(item.length>1){\r\n             let n=length-3;\r\n            \r\n             if(item[n]===\"#\"){\r\n                 n++;\r\n                 let str=item.split(\"\");\r\n                 str[n]=count+\"\";\r\n                 let newStr=str.join(\"\");\r\n                 count++;\r\n                // console.log(\"str: \", newStr);\r\n                 Desc.push(newStr);\r\n            \r\n             }else{\r\n               // console.log(\"item: \", item);\r\n                Desc.push(item);\r\n             }\r\n\r\n         }else{\r\n          //  console.log(\"item: \", item);\r\n            Desc.push(item);\r\n         }\r\n  \r\n    });\r\n \r\n    let finaldescription= Desc.join(\"Dropdown#\");\r\n    if(Desc.length===1){\r\n        var c = (finaldescription.match(/Dropdown/g) || []).length;\r\n        var f = (finaldescription.match(/#/g) || []).length;\r\n        if(c===0 && f===1){\r\n        finaldescription=finaldescription+\"Dropdown#\";}\r\n    }\r\n  \r\n    this.setState({ans, options, addOptionFields, addOptionFieldsError, description: finaldescription});\r\n  }\r\n\r\n  onAddDropdown = () => {\r\n        let {description, ans, options, addOptionFields, addOptionFieldsError} = this.state;\r\n        let length = this.state.options.length;\r\n        description = description + \" #\"+(length+1)+\" Dropdown#\";\r\n        ans[length]=0;\r\n        options[length]=\"\";\r\n        addOptionFields[length]=\"\";\r\n        addOptionFieldsError[length]=\"\";\r\n        this.setState({description, ans, options, addOptionFields, addOptionFieldsError});\r\n  }\r\n\r\n  renderAddDropdownSection = (item, index) => {\r\n    const optionArray = item.split(\",\"); //1,2,3\r\n    return (\r\n      <div style={{textAlign: \"center\"}} className=\"col-11 col-sm-4 offset-sm-1 dropdown-container-style\">\r\n        <div id=\"box\">\r\n          <Button onClick={()=>{this.onDeleteDropDown(index);}} type=\"text\" id=\"icon-delete-dropdown\">\r\n            <span>\r\n              <CloseCircleTwoTone\r\n                style={{ fontSize: 20 }}\r\n                twoToneColor=\"#eb2f96\"\r\n              />\r\n            </span>\r\n          </Button>\r\n        </div>\r\n        {/* input field and add button */}\r\n        <h5 style={{margin : 7}}>Dropdown #{index+1}</h5>\r\n        <div\r\n          style={{ marginTop: 10 }}\r\n          className=\"row no-gutters enter-option-value-container\"\r\n        >\r\n          <div className=\"enter-option-value-input\">\r\n            <Input\r\n              value={this.state.addOptionFields[index]}\r\n              onChange={(e) => this.onEnterOptionValue(index, e)}\r\n              placeholder=\"Enter Option Value to Add\"\r\n            />\r\n          </div>\r\n          <div className=\"enter-option-value-add-btn\">\r\n            <Button\r\n              onClick={() => {\r\n                this.onAddOptionValueBtn(index);\r\n              }}\r\n              type=\"primary\"\r\n            >\r\n              <span>\r\n                <PlusOutlined\r\n                  style={{\r\n                    color: \"white\",\r\n                    verticalAlign: \"baseline\",\r\n                    fontSize: 18,\r\n                  }}\r\n                />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        {/* error row */}\r\n        <div className=\"row no-gutters\">\r\n          <p style={{ color: ERROR_COLOR }}>\r\n            {this.state.addOptionFieldsError[index]}\r\n          </p>\r\n        </div>\r\n        {/* List of options */}\r\n\r\n        {this.state.options[index] !== \"\"\r\n          ? optionArray.map((item, optionIndex) => {\r\n              let checked = false;\r\n              if (optionIndex === this.state.ans[0]) {\r\n                checked = true;\r\n              }\r\n              return (\r\n                <div className=\"row \">\r\n                  <div className=\"checkbox-div\">\r\n                    <Button type=\"text\">\r\n                      <Checkbox\r\n                        checked={checked}\r\n                        onChange={(e) => {\r\n                          this.onChangeCheckedOptionValue(index, optionIndex);\r\n                        }}\r\n                      />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"option-value-div\">\r\n                    <Input\r\n                      value={item}\r\n                      onChange={(e) => {\r\n                        this.onOptionChangeValue(e, index, optionIndex);\r\n                      }}\r\n                      placeholder=\"Option Value\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"option-value-delete-div\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.onDeleteOptionValue(index, optionIndex);\r\n                      }}\r\n                    >\r\n                      <span>\r\n                        <DeleteTwoTone\r\n                          twoToneColor=\"#eb2f96\"\r\n                          style={{ verticalAlign: \"baseline\" }}\r\n                        />{\" \"}\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    // console.log(this.state.ans);\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* <h1>Select from Dropdown</h1> */}\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n              onKeyDown={this._handleKeyDown}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{ color: ERROR_COLOR }}>\r\n                {this.state.descriptionError}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\r\n                <div >\r\n                <Button onClick={()=>this.onAddDropdown()} type=\"primary\" style={{position: \"absolute\", right :13}}>Add Dropdown</Button>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <br/><br/>\r\n        <div className=\"row\">\r\n          {this.state.options.map((item, index) => {\r\n            return <>{this.renderAddDropdownSection(item, index)}</>;\r\n          })}\r\n        </div>\r\n        <AddQuestionFooter\r\n            type=\"Update\"\r\n          handleCancel={this.props.handleCancel}\r\n          handleOk={this.onAddQuestion}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Modal, Card, Menu, Dropdown} from \"antd\";\r\nimport { EditTwoTone, DeleteTwoTone} from \"@ant-design/icons\";\r\nimport EditDropDown from \"./EditDropDown\";\r\nexport default class DropDownSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n         \r\n            visible: false,\r\n          };\r\n    }\r\n    showModal = () => {\r\n      this.setState({ visible: true });\r\n    };\r\n  \r\n    handleOk = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n  \r\n    handleCancel = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n\r\n    onDelete=()=>{\r\n      this.props.deleteQuestion(this.props.data.id);\r\n    }\r\n     isNumeric(str) {\r\n        if (typeof str != \"string\") return false // we only process strings!  \r\n        return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n               !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\r\n      }\r\n\r\n    onRenderDropdownQuestion=(quesNo, data)=> {\r\n        const dataArray = data.description.split(\"Dropdown#\");\r\n        let ansIndex=0;\r\n        return(<p style={{ fontSize: 17}}>{quesNo}. {\"  \"}\r\n            {dataArray.map((item, index)=>{\r\n               console.log(\"item: \", item);\r\n                if(item.includes(\"#\")){\r\n                    const deepItem=item.split(\"#\");\r\n                    console.log(\"deepItem: \", deepItem);\r\n                     return deepItem.map((item2)=>{\r\n                        if(this.isNumeric(item2[0])){\r\n                            ansIndex++;\r\n                            let count=ansIndex-1;\r\n                            // console.log(count)\r\n                        return(<Dropdown overlay={this.menu(data.options[count], data.ans[count], count)}>\r\n                            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                              -Select- \r\n                            </a>\r\n                          </Dropdown>);    \r\n                        }\r\n                        if(item2.includes(\"\\n\")){\r\n                            const item3 = item2.split(\"\\n\");\r\n                            return item3.map((i)=>{\r\n                                return(<><br/> {i}</>);\r\n                            })\r\n                        }\r\n                        return item2;\r\n                     })\r\n                    \r\n                }else{\r\n                    return item;\r\n                }\r\n            })}\r\n        </p>);\r\n    }\r\n     menu =(options, ans, count)=> {\r\n       console.log(options)\r\n         const optionsArr = options.split(\",\");\r\n            return <Menu>  {optionsArr.map((item,index)=>{\r\n                if(index === ans){\r\n                    return   <Menu.Item key={index} danger>{item}</Menu.Item>;\r\n                }else{\r\n                    return(\r\n                        \r\n                          <Menu.Item key={index}>\r\n                            \r\n                              {item}\r\n                          \r\n                          </Menu.Item>\r\n                        \r\n                        \r\n                      );\r\n                }\r\n            }\r\n            )}</Menu>;\r\n     };\r\n    render() {\r\n        return (\r\n            <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n      <Card\r\n        style={{ backgroundColor: this.props.color }}\r\n        actions={[\r\n          <EditTwoTone\r\n            onClick={() => {\r\n              this.showModal();\r\n            }}\r\n            twoToneColor=\"#52c41a\"\r\n            key=\"edit\"\r\n          />,\r\n          <DeleteTwoTone\r\n            onClick={() => {\r\n              this.onDelete();\r\n            }}\r\n            twoToneColor=\"#eb2f96\"\r\n            key=\"del\"\r\n          />,\r\n        ]}\r\n      >\r\n       {this.onRenderDropdownQuestion(this.props.quesNo, this.props.data)}\r\n      </Card>\r\n      <Modal\r\n        style={{ width: 1000 }}\r\n        title=\"Edit Question\"\r\n        visible={this.state.visible}\r\n        onCancel={() => this.handleCancel()}\r\n        width={1200}\r\n        footer={null}\r\n      >\r\n         <EditDropDown updateQuestion={this.props.updateQuestion} data={this.props.data} handleOk={this.handleOk} handleCancel={this.handleCancel}/> \r\n      </Modal>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Input, Divider, Button, Radio} from \"antd\";\r\nimport {ERROR_COLOR} from \"../../../util/colors\";\r\nimport { TRUE_AND_FALSE} from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\n\r\nexport default function EditTrueFalse(props) {\r\n    const [question, setQuestion] = useState({\r\n       \r\n        category: TRUE_AND_FALSE,\r\n        description: props.data.description,\r\n        options: [],\r\n        ans: props.data.ans,\r\n        \r\n        descriptionError: \"\",\r\n       \r\n    });\r\n    const [value, setValue] = useState(props.data.ans[0]);\r\n\r\n\r\n    const onAddQuestion = () => {\r\n        if(question.description.length===0){\r\n            setQuestion({ ...question,descriptionError: \"Description Empty!!!\"});\r\n        }else{\r\n            \r\n        let ans=[];\r\n        ans[0]=value;\r\n             \r\n              const data={category: TRUE_AND_FALSE, description: question.description, options: [], ans: ans,descriptionError: \"\", id: props.data.id };\r\n             //console.log(data);\r\n               props.updateQuestion(data);\r\n              props.handleOk();\r\n        }\r\n      };\r\n\r\n\r\n\r\n      const onChange = e => {\r\n       // console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n      };\r\n      const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n      };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n       \r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{color:ERROR_COLOR}}>{question.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n         <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={question.description}\r\n              onChange={(e)=>setQuestion({...question,description: e.target.value})}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n          <Radio.Group onChange={onChange} value={value}>\r\n      <Radio style={radioStyle} value={true}>True</Radio>\r\n      <Radio style={radioStyle} value={false}>False</Radio>\r\n      \r\n    </Radio.Group>\r\n          </div>\r\n        </div>\r\n        \r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n             Update\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { Modal, Card, Radio} from \"antd\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\nimport EditTrueFalse from \"./EditTrueFalse\";\r\nexport default function TrueAndFalse(props) {\r\n    const [visible, toggleModal] = useState(false);\r\n    const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n      };\r\n      const showModal = () => {\r\n        toggleModal(true);\r\n      };\r\n    \r\n      const handleOk = () => {\r\n        toggleModal(false);\r\n      };\r\n    \r\n      const handleCancel = () => {\r\n        toggleModal(false);\r\n      };\r\n      const onDelete = () => {\r\n        props.deleteQuestion(props.data.id);\r\n      };\r\n\r\n    return (\r\n        <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n        <Card\r\n          style={{ backgroundColor: props.color }}\r\n          actions={[\r\n            <EditTwoTone\r\n              onClick={() => {\r\n                showModal();\r\n              }}\r\n              twoToneColor=\"#52c41a\"\r\n              key=\"edit\"\r\n            />,\r\n            <DeleteTwoTone\r\n              onClick={() => {\r\n                onDelete();\r\n              }}\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"del\"\r\n            />,\r\n          ]}\r\n        >\r\n         \r\n<div>\r\n<p style={{ fontSize: 17 }}>\r\n           \r\n           {props.quesNo}. {props.data.description}\r\n          \r\n         </p>\r\n         <Radio.Group  value={props.data.ans[0]}>\r\n      <Radio style={radioStyle} value={true}>True</Radio>\r\n      <Radio style={radioStyle} value={false}>False</Radio>\r\n      \r\n    </Radio.Group>\r\n</div>\r\n\r\n        </Card>\r\n        <Modal\r\n          style={{ width: 1000 }}\r\n          title=\"Edit Question\"\r\n          visible={visible}\r\n          onCancel={() => props.handleCancel()}\r\n          width={1200}\r\n          footer={null}\r\n        >\r\n           <EditTrueFalse updateQuestion={props.updateQuestion} data={props.data} handleOk={handleOk} handleCancel={handleCancel}/> \r\n        </Modal>\r\n      </div>\r\n    )\r\n}\r\n","import React, {Component} from 'react';\nimport { Card, Modal, List } from 'antd';\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\n// import  from './MakeSequenceInOrder';\nimport classes from './MatchingWords.module.css';\nimport MakeMatchingWords from './MakeMatchingWords';\nclass MatchingWords extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n    render(){\n        // const ListStyle = {\n        //     display: 'block',\n        //     height: '30px',\n        //     lineHeight: '30px',\n        //   };\n        return(\n            // <div>\n                 <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  actions={[\n                    \n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n                  ]}>\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <div className={classes.DivinCol}>\n                <div>\n                    <h6>Left Options</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.leftoptions.map(index=>{\n                return(\n                    <div className={classes.MyListDiv}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )})}\n            </List>\n                </div>\n                <div>\n                    <h6>Right Options</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.rightoptions.map(index=>{\n                return(\n                    <div className={classes.MyListDiv}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n                <div>\n                    <h6>Right Answers</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.ans.map(index=>{\n                return(\n                    <div className={classes.MyListDiv}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n            </div>\n            \n            </Card>\n            <Modal\n              style={{ width: 1000 }}\n              title=\"Edit Question\"\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              width={1200}\n              footer={null}\n            >\n            \n            <MakeMatchingWords updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\n            </Modal>\n            </div>\n            // </div>\n        )\n    }\n}\n\n\nexport default MatchingWords;","export const ADD_QUESTION=\"ADD_QUESTION\";\r\nexport const DELETE_QUESTION=\"DELETE_QUESTION\";\r\nexport const EDIT_QUESTION=\"EDIT_QUESTION\";\r\nexport const SHOW_QUESTION=\"SHOW_QUESTION\";\r\n\r\nexport const UPDATE_QUESTION=\"UPDATE_QUESTION\";\r\nexport const CHANGE_COLOR=\"CHANGE_COLOR\";\r\nexport const CHANGE_SCORE=\"CHANGE_SCORE\";\r\nexport const CHANGE_TIME=\"CHANGE_TIME\";\r\n\r\nexport const INIT_QUESTIONS = \"INIT_QUESTIONS\";\r\n","import * as ActionTypes from \"../types/Questions\";\r\nimport axios from \"axios\";\r\nexport const addQuestion = (question) => ({\r\n  type: ActionTypes.ADD_QUESTION,\r\n  payload: question,\r\n});\r\n\r\nexport const deleteQuestion = (question) => ({\r\n  type: ActionTypes.DELETE_QUESTION,\r\n  payload: question,\r\n});\r\nexport const changeColor = (color) => ({\r\n  type: ActionTypes.CHANGE_COLOR,\r\n  payload: color,\r\n});\r\n\r\nexport const changeScore = (score) => ({\r\n    type: ActionTypes.CHANGE_SCORE,\r\n    payload: score,\r\n  });\r\n  export const changeTime = (time) => ({\r\n    type: ActionTypes.CHANGE_TIME,\r\n    payload: time,\r\n  });\r\n\r\n export const updateQuestion = (question)=>({\r\n     type: ActionTypes.UPDATE_QUESTION,\r\n     payload: question,\r\n });\r\n\r\n export const initquestions = () =>{\r\n   axios.get(\"https://ymstutor-lms-default-rtdb.firebaseio.com/questions.json\")\r\n   .then(res=>{\r\n     console.log(res)\r\n   })\r\n   .catch(err=>{\r\n     console.log(err)\r\n   })\r\n }\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {  withRouter } from \"react-router-dom\";\r\nimport {  } from \"reactstrap\";\r\nimport Header from \"./Header\";\r\nimport {  Divider } from \"antd\";\r\nimport \"./css/main.css\";\r\nimport Options from \"./Options\";\r\nimport MultipleChoice from \"./Categories/Multiple Choice/MultipleChoice\";\r\nimport MultipleCheckbox from \"./Categories/MultipleCheckbox/MultipleCheckbox\";\r\nimport SequenceinOrder from \"./Categories/SequenceInOrder/SequenceInOrder\";\r\nimport AddQuestion from \"./AddQuestion\";\r\nimport {Blanks} from \"./Categories/Blanks/Blanks\";\r\nimport DropDownSelect from \"./Categories/Select-From-dropdown/DropDown\";\r\nimport TrueAndFalse from \"./Categories/TrueAndFalse/TrueAndFalse\";\r\nimport MatchingWords from \"./Categories/MatchingWords/MatchingWords\";\r\nimport * as CategoryTypes from \"../util/Categories\"; \r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n  addQuestion,\r\n  deleteQuestion,\r\n  changeColor,\r\n  changeScore,\r\n  changeTime,\r\n  updateQuestion,\r\n  initquestions,\r\n} from \"../redux/actions/QuestionActions\";\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addQuestion: (data) => dispatch(addQuestion(data)),\r\n  updateQuestion: (data) => dispatch(updateQuestion(data)),\r\n  deleteQuestion: (data) => {\r\n    dispatch(deleteQuestion(data));\r\n  },\r\n  changeColor: (color) => {\r\n    dispatch(changeColor(color));\r\n  },\r\n  changeScore: (score) => {\r\n    dispatch(changeScore(score));\r\n  },\r\n  changeTime: (time) => {\r\n    dispatch(changeTime(time));\r\n  },\r\n  initquestions:()=>{ dispatch(initquestions());}\r\n});\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    questions: state.question,\r\n  };\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      score: 0,\r\n      time: 0,\r\n      color: \"white\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // this.props.addQuestion();\r\n    initquestions()\r\n  }\r\n  onChangeTime = (value) => {\r\n    const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\r\n    if (\r\n      (!Number.isNaN(value) && reg.test(value)) ||\r\n      value === \"\" ||\r\n      value === \"-\"\r\n    ) {\r\n      this.props.changeTime(value);\r\n      this.setState({ time: value, timeError: false });\r\n    } else {\r\n      this.setState({ timeError: true });\r\n    }\r\n  };\r\n  onChangeScore = (value) => {\r\n    //console.log(\"value: \", value)\r\n    const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\r\n    if (\r\n      (!Number.isNaN(value) && reg.test(value)) ||\r\n      value === \"\" ||\r\n      value === \"-\"\r\n    ) {\r\n      this.setState({ score: value, scoreError: false });\r\n      this.props.changeScore(value);\r\n    } else {\r\n      this.setState({ scoreError: true });\r\n    }\r\n  };\r\n  onChangeColor = (color) => {\r\n    this.props.changeColor(color);\r\n    this.setState({ color: color });\r\n  };\r\n  btnClick = () => {};\r\n  renderQuestionRows = () => {\r\n    //<MultipleChoice quesNo={1} data={data} />\r\n    //    const ques = this.props.questions;\r\n    //console.log(\"ques.ques: \",this.props.questions.questions);\r\n\r\n    const result = this.props.questions.questions.map((item, index) => {\r\n      //console.log(\"item \",item);\r\n      index++;\r\n      //console.log(\"item: \", item.category)\r\n      if(item.category === CategoryTypes.MULTIPLE_CHOICE){\r\n      return (\r\n        <div\r\n          key={item.ans[0]}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <MultipleChoice\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category === CategoryTypes.FILL_IN_THE_BLANKS){\r\n     // console.log(\"sdfsd\");\r\n      return (\r\n        <div\r\n          key={item.ans[0]}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <Blanks\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category=== CategoryTypes.SELECT_FROM_DROPDOWN){\r\n      return (\r\n        <div\r\n          key={item.ans[0]}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <DropDownSelect\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category=== CategoryTypes.TRUE_AND_FALSE){\r\n      return (\r\n        <div\r\n          key={item.ans[0]}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <TrueAndFalse\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category === CategoryTypes.MULTIPLE_CHECKBOX){\r\n      return (\r\n        <div\r\n          key={item.ans[0]}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <MultipleCheckbox\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category === CategoryTypes.SEQUENCE_IN_ORDER){\r\n      return (\r\n        <div\r\n          key={item.ans[0]}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <SequenceinOrder\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    else if(item.category === CategoryTypes.MATCHING_WORDS){\r\n      return (\r\n        <div\r\n          key={item.ans[0]}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <MatchingWords\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    })\r\n    ;\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    //console.log(\"questions:\",this.props.questions);\r\n    console.log(\"questions:\",this.props.questions);\r\n    // console.log(this.props.data)\r\n    return (\r\n      <div className=\"mainBody\">\r\n        {/* <h1>{this.props.user.username}</h1> */}\r\n        <Header />\r\n        <div style={{ position: \"fixed\" }} className=\"add\">\r\n          <div className=\"row\">\r\n            \r\n            <AddQuestion addQuestion={this.props.addQuestion} />\r\n            \r\n            <br />\r\n            {/* <NavLink to=\"/test\">TEST START</NavLink> */}\r\n            <hr />\r\n            <NavLink to=\"/test123\">TEST START</NavLink>\r\n            <br />\r\n          </div>\r\n          \r\n        </div>\r\n        {/* Options */}\r\n        <div style={{ height: 10 }} />\r\n        <div style={{ height: 10 }} />\r\n        <div style={{ height: 10 }} />\r\n        <div />\r\n        <Divider style={{ marginTop: 20 }} orientation=\"left\">\r\n          Options\r\n        </Divider>\r\n        <Options\r\n          onChangeColor={this.onChangeColor}\r\n          onChangeScore={this.onChangeScore}\r\n          onChangeTime={this.onChangeTime}\r\n          time={this.props.questions.time}\r\n          score={this.props.questions.score}\r\n          color={this.props.questions.color}\r\n        />\r\n        <Divider style={{ marginTop: 20 }} orientation=\"left\" />\r\n        <div style={{flex:1, flexDirection: \"row-reverse\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"}}>\r\n          <p>Questions :{\" \"}\r\n          {this.props.questions.questions.length\r\n            ? this.props.questions.questions.length\r\n            : \"0\"}</p>\r\n        \r\n        </div>\r\n      \r\n        <br />\r\n        {this.props.questions ? (\r\n          this.renderQuestionRows()\r\n        ) : (\r\n          <p>No Questions Added yet</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import React, { Component } from 'react'\nimport { Radio,  Card} from 'antd';\nexport default class MultipleChoice extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n\n    onChange = e => {\n        console.log('radio checked', e.target.value);\n        console.log(this.props.data)\n        //  the state.value holds the value that has been chosen by the user...\n        // either we can compare them here and then store them as yes or no or else can store the real ans and user ans\n        // then we can compare the list after clicking the submit button...\n        this.setState({\n          value: e.target.value,\n        });\n      };\n    render() {\n        const radioStyle = {\n          display: 'block',\n          height: '30px',\n          lineHeight: '30px',\n        };\n        // const { value } = this.state;\n        return (\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  >\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n                <Radio.Group onChange={this.onChange}>\n                    {this.props.data.options.map(index=>{\n                      \n                        return(\n                            <Radio key={index} style={radioStyle} value={index}>\n                            {index}\n                          </Radio>\n                        );\n                    })}\n          </Radio.Group>\n                </Card>\n            </div>\n       \n        );\n      }\n    \n}\n","import React, { useState } from \"react\";\nimport { Modal, Card } from \"antd\";\n// import { DeleteTwoTone, EditTwoTone } from \"@ant-design/icons\";\n// import {EditFillInTheBlanks} from \"./EditFillInTheBlanks\";\nconst blankString = \"____\";\n\n\nconst myIncludes=(str)=>{\n    if(str.includes(\".\")){\n        return true;\n    }else if(str.includes(\",\")){\n        return true;\n    }else if(str.includes(\"'\")){\n        return true;\n    }else if(str.includes(\"\\\"\")){\n        return true;\n    }\n    return false;\n};\n\nexport const BlanksTest = (props) => {\n // console.log(\"props: \",props.data);\n  // const [visible, toggleModal] = useState(false);\n\n  // const showModal = () => {\n  //   toggleModal(true);\n  // };\n\n  // const handleOk = () => {\n  //   toggleModal(false);\n  // };\n\n  // const handleCancel = () => {\n  //   toggleModal(false);\n  // };\n  // const onDelete = () => {\n  //   props.deleteQuestion(props.data.id);\n  // };\n  var numOfBlanks;\n  const makeNumberedBlanks = (sen) => {\n    const words = sen.split('____');\n    \n    let mod = \"\";\n    let c=1;\n    for(let i=0;i<words.length;i++){\n      if(words[i].length>0){\n        \n        mod+= \"(\"+c+\")____\"+words[i];\n        c++;\n      }\n      \n    }\n    numOfBlanks = c-1;\n    console.log(mod)\n    return mod;\n    \n  };\n  \n  // const makeDescription = (desc) => {\n  //   //console.log(\"ans: \",props.data.ans[0]);\n  //   const array = desc.split(\" \");\n  //   let count = 0;\n  //   const result = array.map((item, index) => {\n  //     // console.log(index);\n  //     if((myIncludes(item)) &&  item.includes(\"____\")){\n  //       console.log(\"found: \", item);\n  //       if (item[item.length - 1] === \".\") {\n            \n  //           count=count+1\n  //         return (\n  //           <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //             {props.data.ans[count-1]}\n              \n              \n  //           </span>\n  //         );\n  //       } else if (item[0] === \".\") {\n  //           console.log(\"found\");\n  //           count=count+1;\n  //           return (\n  //               <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>.{\" \"} \n  //                 {props.data.ans[count-1]}\n                  \n  //               </span>\n  //             );\n  //       }else if (item[item.length - 1] === \",\") {\n  //           count=count+1;\n  //           return (\n  //             <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //               {props.data.ans[count-1]}\n  //               {\",\"}\n                \n  //             </span>\n  //           );\n  //         } else if (item[0] === \",\") {\n  //           count=count+1;\n  //             return (\n  //                 <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>,{\" \"} \n  //                   {props.data.ans[count-1]}\n                    \n  //                 </span>\n  //               );\n  //         }\n          \n  //     }else{ \n  //     if (item === blankString) {\n  //       count=count+1;\n  //       return (\n  //         <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //           {props.data.ans[count-1]}{\" \"}\n           \n  //         </span>\n  //       );\n  //     } else if (item !== blankString) {\n  //       return <span>{item} </span>;\n  //     }\n    \n  //   }if(item.includes(\".\")){\n  //       count=count+1;\n  //       const arr= item.split(\".\");\n  //       if(arr[0]===blankString){\n  //           return(<>\n  //           <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //           {props.data.ans[count-1]}\n            \n  //         </span>. {arr[1]} {\" \"}</>);\n  //       }else{\n  //           return(\n  //           <>{arr[0]}.\n  //           <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //           {props.data.ans[count-1]} {\" \"}\n            \n  //         </span>\n  //         </>);\n  //       }\n  //   }\n  //   if(item.includes(\",\")){\n  //       count=count+1;\n  //       const arr= item.split(\",\");\n  //       if(arr[0]===blankString){\n  //           return(<>\n  //           <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //           {props.data.ans[count-1]}\n            \n  //         </span>, {arr[1]} {\" \"}</>);\n  //       }else{\n  //           return(\n  //           <>{arr[0]},\n  //           <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //           {props.data.ans[count-1]} {\" \"}\n            \n  //         </span>\n  //         </>);\n  //       }\n  //   }\n     \n  //   });\n\n\n  //    //console.log(\"last result\");\n  //   return result;\n  // };\n  return (\n    <div className=\"col-12 col-sm-10 offset-sm-1\">\n      <Card\n        style={{ backgroundColor: props.color }}\n        \n      >\n        <p style={{ fontSize: 17 }}>\n         \n          {props.quesNo}. {makeNumberedBlanks(props.data.description)}\n        </p>\n        <div>\n        {Array(numOfBlanks).fill(0).map((item, i) =>{\n           return (<span>{i+1}<input style={{marginLeft:\"5px\",marginBottom:\"2px\"}}></input><br/></span>)\n        })}\n        </div>\n      </Card>\n      {/* <Modal\n        style={{ width: 1000 }}\n        title=\"Edit Question\"\n        visible={visible}\n        onCancel={() => handleCancel()}\n        width={1200}\n        footer={null}\n      > */}\n         {/* <EditFillInTheBlanks updateQuestion={props.updateQuestion} data={props.data} handleOk={handleOk} handleCancel={handleCancel}/>  */}\n      {/* </Modal> */}\n    </div>\n  );\n};\n\n\nexport default BlanksTest","import React, { Component } from 'react'\nimport {Modal, Card, Menu, Dropdown, Button} from \"antd\";\nimport { EditTwoTone, DeleteTwoTone} from \"@ant-design/icons\";\nimport EditDropDown from \"./EditDropDown\";\nexport default class DropDownSelect extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            val: [],\n            visible: false,\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n     isNumeric(str) {\n        if (typeof str != \"string\") return false // we only process strings!  \n        return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n               !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\n      }\n    onClickHandler = (count, e) =>{\n      console.log(this.state.val)\n      let ca = this.props.data.options[count].split(\",\")\n      let ans = []\n      ans= ca[e.key]\n      // if(this.state.val[count]){\n\n      // }\n      console.log( ca[e.key], e)\n      console.log(ans)\n      this.setState({val:this.state.val.concat({count, ans})})\n      \n      console.log(this.state.val)\n    }\n    // onClickHandler = ({key}) =>{\n    //   let ca = this.props.data.options[key]\n    //   // this.setState({val:\"\"})\n    //   console.log( key,ca)\n    //   // console.log(e.target)\n    // }\n\n\n\n      menu =(options, ans, count)=> {\n        const optionsArr = options.split(\",\");\n           return <Menu onClick={(e)=>{this.onClickHandler(count, e)}}>  {optionsArr.map((item,index)=>{\n               // if(index === ans){\n               //     return   <Menu.Item key={index} danger>{item}</Menu.Item>;\n               // }else{\n                   return(\n\n                         <Menu.Item key={index} >\n                         \n                             {item}\n                         \n                         </Menu.Item>\n                       \n                       \n                     );\n               }\n           // }\n           )}</Menu>;\n    };\n    onRenderDropdownQuestion=(quesNo, data)=> {\n        const dataArray = data.description.split(\"Dropdown#\");\n        let ansIndex=0;\n        return(<p style={{ fontSize: 17}}>{quesNo}. {\"  \"}\n            {dataArray.map((item, index)=>{\n               // console.log(\"item: \", item);\n                if(item.includes(\"#\")){\n                    const deepItem=item.split(\"#\");\n                    console.log(\"deepItem: \", deepItem);\n                     return deepItem.map((item2)=>{\n                        if(this.isNumeric(item2[0])){\n                            ansIndex++;\n                            let count=ansIndex-1;\n                        return(<Dropdown overlay={this.menu(data.options[count], data.ans[count], count)}>\n                            {/* <a className=\"ant-dropdown-link\"  onClick={e => e.preventDefault()}>\n                              -Select- \n                            </a> */}\n                            <Button className=\"ant-dropdown-link\"  onClick={e => e.preventDefault()}>\n                              -Select- \n                            </Button>\n                            {/* on click event should have to save the value and the index of the dropdown and the\n                            name -SELECT- have to be changed according to the options... */}\n                          </Dropdown>);    \n                        }\n                        if(item2.includes(\"\\n\")){\n                            const item3 = item2.split(\"\\n\");\n                            return item3.map((i)=>{\n                                return(<><br/> {i}</>);\n                            })\n                        }\n                        return item2;\n                     })\n\n                }else{\n                    return item;\n                }\n            })}\n        </p>);\n    }\n\n    render() {\n        return (\n            <div className=\"col-12 col-sm-10 offset-sm-1\">\n      <Card\n        style={{ backgroundColor: this.props.color }}\n\n      >\n       {this.onRenderDropdownQuestion(this.props.quesNo, this.props.data)}\n      </Card>\n      {/* <Modal\n        style={{ width: 1000 }}\n        title=\"Edit Question\"\n        visible={this.state.visible}\n        onCancel={() => this.handleCancel()}\n        width={1200}\n        footer={null} */}\n      {/* > */}\n         {/* <EditDropDown updateQuestion={this.props.updateQuestion} data={this.props.data} handleOk={this.handleOk} handleCancel={this.handleCancel}/>  */}\n      {/* </Modal> */}\n    </div>\n        )\n    }\n}\n","import React, {useState} from 'react'\nimport {  Card, Radio} from \"antd\";\n// import { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\n// import EditTrueFalse from \"./EditTrueFalse\";\nexport default function TrueAndFalse(props) {\n    // const [visible, toggleModal] = useState(false);\n    const [value, setValue] = useState(1);\n    const radioStyle = {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px',\n      };\n      // const showModal = () => {\n      //   toggleModal(true);\n      // };\n    \n      // const handleOk = () => {\n      //   toggleModal(false);\n      // };\n    \n      // const handleCancel = () => {\n      //   toggleModal(false);\n      // };\n      // const onDelete = () => {\n      //   props.deleteQuestion(props.data.id);\n      // };\n      const onChange = e => {\n        console.log('radio checked', e.target.value);\n        setValue(e.target.value);\n        // if(){\n\n        // }\n        // write a if statement to check the ans and verify it and change the total score if possible or store the required \n        // data such as the correct ans and the submitted ans...\n      };\n      console.log(props)\n    return (\n        <div className=\"col-12 col-sm-10 offset-sm-1\">\n        <Card\n          style={{ backgroundColor: props.color }}\n          \n        >\n         \n<div>\n<p style={{ fontSize: 17 }}>\n           \n           {props.quesNo}. {props.data.description}\n          \n         </p>\n         {/* <Radio.Group  value={props.data.ans[0]} onChange={onChange}> */}\n         <Radio.Group  value={value} onChange={onChange}>\n      <Radio style={radioStyle} value={true}>True</Radio>\n      <Radio style={radioStyle} value={false}>False</Radio>\n      \n    </Radio.Group>\n</div>\n\n        </Card>\n        {/* <Modal\n          style={{ width: 1000 }}\n          title=\"Edit Question\"\n          visible={visible}\n          onCancel={() => props.handleCancel()}\n          width={1200}\n          footer={null}\n        >\n           <EditTrueFalse updateQuestion={props.updateQuestion} data={props.data} handleOk={handleOk} handleCancel={handleCancel}/> \n        </Modal> */}\n      </div>\n    )\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {  withRouter } from \"react-router-dom\";\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\nimport {  } from \"reactstrap\";\nimport Header from \"./Header\";\nimport {  Divider } from \"antd\";\nimport \"./css/main.css\";\n// import Options from \"./Options\";\nimport MultipleChoice from \"./Categories/Multiple Choice/MultipleChoiceTest\";\n// import AddQuestion from \"./AddQuestion\";\nimport BlanksTest from \"./Categories/Blanks/BlanksTest\";\nimport DropDownSelect from \"./Categories/Select-From-dropdown/DropDownTest\";\nimport TrueAndFalse from \"./Categories/TrueAndFalse/TrueAndFalseTest\";\nimport * as CategoryTypes from \"../util/Categories\"; \n// import {\n\n// } from \"../redux/actions/QuestionActions\";\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  // addQuestion: (data) => dispatch(addQuestion(data)),\n  // updateQuestion: (data) => dispatch(updateQuestion(data)),\n  // deleteQuestion: (data) => {\n  //   dispatch(deleteQuestion(data));\n  // },\n  // changeColor: (color) => {\n  //   dispatch(changeColor(color));\n  // },\n  // changeScore: (score) => {\n  //   dispatch(changeScore(score));\n  // },\n  // changeTime: (time) => {\n  //   dispatch(changeTime(time));\n  // },\n});\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    questions: state.question,\n  };\n};\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      time: 0,\n      color: \"white\",\n    };\n  }\n  componentDidMount() {\n    // this.props.addQuestion();\n  }\n  onChangeTime = (value) => {\n    const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\n    if (\n      (!Number.isNaN(value) && reg.test(value)) ||\n      value === \"\" ||\n      value === \"-\"\n    ) {\n      this.props.changeTime(value);\n      this.setState({ time: value, timeError: false });\n    } else {\n      this.setState({ timeError: true });\n    }\n  };\n  onChangeScore = (value) => {\n    //console.log(\"value: \", value)\n    const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\n    if (\n      (!Number.isNaN(value) && reg.test(value)) ||\n      value === \"\" ||\n      value === \"-\"\n    ) {\n      this.setState({ score: value, scoreError: false });\n      this.props.changeScore(value);\n    } else {\n      this.setState({ scoreError: true });\n    }\n  };\n  onChangeColor = (color) => {\n    this.props.changeColor(color);\n    this.setState({ color: color });\n  };\n  btnClick = () => {};\n  renderQuestionRows = () => {\n    //<MultipleChoice quesNo={1} data={data} />\n    //    const ques = this.props.questions;\n    //console.log(\"ques.ques: \",this.props.questions.questions);\n\n    const result = this.props.questions.questions.map((item, index) => {\n      //console.log(\"item \",item);\n      index++;\n      //console.log(\"item: \", item.category)\n      if(item.category === CategoryTypes.MULTIPLE_CHOICE){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <MultipleChoice\n            color={this.props.questions.color}\n            actions={[\n                    \n              <EditTwoTone onClick={()=>{(new MultipleChoice()).showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n              <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n            ]}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      );\n    }else if(item.category === CategoryTypes.FILL_IN_THE_BLANKS){\n     // console.log(\"sdfsd\");\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <BlanksTest \n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      );\n    }else if(item.category === CategoryTypes.SELECT_FROM_DROPDOWN){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <DropDownSelect\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      );\n    }else if(item.category === CategoryTypes.TRUE_AND_FALSE){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <TrueAndFalse\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      );\n    }\n    });\n    return result;\n  };\n\n  render() {\n    //console.log(\"questions:\",this.props.questions);\n    // console.log(\"questions:\",this.props.questions);\n    console.log(\"questions:\",this.props.questions);\n    return (\n      <div className=\"mainBody\">\n        {/* <h1>{this.props.user.username}</h1> */}\n        <Header />\n        <div style={{ position: \"fixed\" }} className=\"add\">\n          <div className=\"row\">\n            <br />\n            <hr />\n            <br />\n          </div>\n        </div>\n        {/* Options */}\n        <div style={{ height: 10 }} />\n        <div style={{ height: 10 }} />\n        <div style={{ height: 10 }} />\n        <div />\n        <Divider style={{ marginTop: 20 }} orientation=\"left\">\n          Options\n        </Divider>\n        <Divider style={{ marginTop: 20 }} orientation=\"left\" />\n        <div style={{flex:1, flexDirection: \"row-reverse\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"}}>\n          <p>Questions :{\" \"}\n          {this.props.questions.questions.length\n            ? this.props.questions.questions.length\n            : \"0\"}</p>\n        \n        </div>\n      \n        <br />\n        {this.props.questions ? (\n          this.renderQuestionRows()\n        ) : (\n          <p>No Questions Added yet</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import React, { Component } from 'react';\nimport {Card,Checkbox, Row } from 'antd';\nclass MultipleCheckboxTest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: [],\n            visible: false,\n          };\n    }\n\n    onChangeC = (checkedValues) => {\n        console.log('checked = ', checkedValues.target.value);\n       \n        let uncheck = checkedValues.target.value\n        let myvalues = this.state.value\n        if(myvalues.includes(uncheck)){\n            const index = myvalues.indexOf(uncheck);\n            if (index > -1) {\n            myvalues.splice(index, 1);\n            }\n        this.setState({ value: myvalues });\n      }\n        else{\n            this.setState({\n                value: this.state.value.concat(uncheck)\n              });\n        }\n        console.log(\"valuee\", this.state.value);\n    }    \n\n\n    render(){\n        console.log(\"heuu im form render\")\n        console.log(this.state.value)\n        const radioStyle = {\n            display: 'block',\n            height: '30px',\n            lineHeight: '30px',\n          };\n        return(\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                 >\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n                {/* <Checkbox.Group value={this.props.data.ans}> */}\n                <Checkbox.Group value={this.state.value}>\n                <Row>\n                    {this.props.data.options.map(index=>{\n                      \n                        return(\n                            <Checkbox key={index} style={radioStyle} value={index} onChange={this.onChangeC}>\n                            {index}\n                          </Checkbox>\n                        );\n                        \n                    })}\n                </Row>\n           \n                      \n          </Checkbox.Group>\n                </Card>\n            </div>\n        )\n    }\n}\n\n\nexport default MultipleCheckboxTest","import React, {Component} from 'react';\nimport { Card,  List } from 'antd';\nimport classes from './SequenceInOrder.module.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nclass SequenceInTest extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n            mydata: this.props.data.options,\n          };\n    }\n    handleOnDragEnd = (result) =>{\n        if (!result.destination) return;\n        console.log(result)\n        const items = Array.from(this.state.mydata);\n        \n        const [reorderedItem] = items.splice(result.source.index, 1);\n        console.log(reorderedItem)\n        items.splice(result.destination.index, 0, reorderedItem);\n        console.log(items)\n        this.setState({mydata: items})\n        \n        \n    }\n\n    render(){\n\n        return(\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  >\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <DragDropContext onDragEnd={this.handleOnDragEnd}>\n            <Droppable droppableId=\"characters\" >\n    {(provided) => (\n            <ol className = \"characters\" {...provided.droppableProps} ref={provided.innerRef}>\n            {this.state.mydata.map(index=>{\n                console.log(index.split(\",,\"))\n                // let x = 123 \n                // let lala = index.split(\",,\")\n                // {this.props.data.options.indexOf(index)}\n                return(\n                    <Draggable key = {index} draggableId={index} index= {this.state.mydata.indexOf(index)}>\n                    {(provided) => (\n                    <li className={classes.MyListDiv} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{index}\n                   {/* </List.Item> */}\n                   </li>\n                    // </div>\n                     )}\n                     </Draggable>\n                    \n            )\n                  \n            })}\n            {/* </List> */}\n            {provided.placeholder}\n            </ol>\n            )}\n            </Droppable>\n            </DragDropContext>\n            \n            </Card>\n            </div>\n        )\n    }\n}\n// <div className={classes.MyListDiv}>\n// {/* <div > */}\n// {/* <List.Item */}\n\nexport default SequenceInTest;\n\n","import React, {Component} from 'react';\nimport { Card,  List } from 'antd';\nimport classes from \"./MatchingWords.module.css\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nclass MatchingWordsTest extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n            mydata: this.props.data.rightoptions,\n            answers: this.props.data.ans,\n            leftoptions: this.props.data.leftoptions\n\n          };\n    }\n    handleOnDragEnd = (result) =>{\n        if (!result.destination) return;\n        console.log(result)\n        const items = Array.from(this.state.mydata);\n        \n        const [reorderedItem] = items.splice(result.source.index, 1);\n        console.log(reorderedItem)\n        items.splice(result.destination.index, 0, reorderedItem);\n        console.log(items)\n        this.setState({mydata: items})\n        \n        \n    }\n\n    render(){\n\n        return(\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  >\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n\n\n        <div className={classes.DivinCol}>\n        <div>\n        <List itemLayout=\"horizontal\" >\n            {this.props.data.leftoptions.map(index=>{\n                return(\n                    <div className={classes.DivinCol}>\n                        <div className={classes.MyListDiv}>\n                        <List.Item>{index}</List.Item>  \n                    </div>\n                    <h6 style={{paddingTop:\"20px\"}}>-----</h6>\n                    </div>\n                    \n            )})}\n            </List>\n\n        </div>\n            {/* </div> */}\n            \n            <DragDropContext onDragEnd={this.handleOnDragEnd}>\n            <Droppable droppableId=\"characters\" >\n    {(provided) => (\n            <ul  className = \"characters\" style={{listStyleType:\"none\"}} {...provided.droppableProps} ref={provided.innerRef}>\n            {this.state.mydata.map(index=>{\n                console.log(index.split(\",,\"))\n                // let x = 123 \n                // let lala = index.split(\",,\")\n                // {this.props.data.options.indexOf(index)}\n                return(\n                    <div className={classes.DivinCol}>\n                    <Draggable key = {index} draggableId={index} index= {this.state.mydata.indexOf(index)}>\n                    {(provided) => (\n                    <li className={classes.MyListDiv2}\n                     ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{index}\n                   {/* </List.Item> */}\n                   </li>\n                    // </div>\n                     )}\n                     </Draggable>\n                     </div>\n                    \n            )\n                  \n            })}\n            {/* </List> */}\n            {provided.placeholder}\n            </ul>\n            )}\n            </Droppable>\n            </DragDropContext>\n            \n        </div>\n        \n            \n            </Card>\n            </div>\n        )\n    }\n}\n// <div className={classes.MyListDiv}>\n// {/* <div > */}\n// {/* <List.Item */}\n\nexport default MatchingWordsTest;\n\n","import React, {Component} from 'react';\nimport { Card,  List } from 'antd';\nimport classes from \"./MatchDrag.module.css\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nclass MatchDragTest extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n            mydata: this.props.data.rightoptions,\n            answers: this.props.data.ans,\n            leftoptions: this.props.data.leftoptions,\n            dragdata: {\n                1:{ id:\"leftoptions\",\n                    data:this.props.data.leftoptions,\n                },\n                2:{id:\"rightoptions\",\n                    data:this.props.data.rightoptions,\n                }\n            },\n            arr: new Array(this.props.data.rightoptions.length),\n            lrr: [...this.props.data.leftoptions],\n\n          };\n    }\n    handleOnDragEnd = (result) =>{\n        // console.log(result)\n        if (!result.destination) return;\n        const items = this.state.leftoptions\n        const right = this.state.mydata\n        if(right.includes(result.destination.droppableId) && right.includes(result.source.droppableId)){\n            const arr = this.state.arr\n            // const [reorderedItem] = arr.splice(result.source.index, 1);\n            // arr.splice(result.destination.index, 0, reorderedItem);\n            let temp = arr[result.source.index]\n            arr[result.source.index] = arr[result.destination.index]\n            arr[result.destination.index] = temp\n            this.setState({arr: arr})\n        }\n        // // console.log(items.includes(result.source.droppableId))\n        else if(items.includes(result.source.droppableId) && right.includes(result.destination.droppableId)){\n            const srcindex = items.indexOf(result.source.droppableId);\n            \n            \n            const temp = right.indexOf(result.destination.droppableId)\n            const arr = this.state.arr\n            const lrr = this.state.lrr\n            // if(arr[temp] !== null){return;}\n            arr[temp] = result.draggableId\n            lrr[srcindex] = \"\"\n            // console.log(\"right\",right)\n            // console.log(\"items\",items)\n            // console.log(\"arr\",arr)\n            this.setState({dragdata:{\n                1:{\n                    id:\"leftoptions\",\n                    data:items\n                },\n                2:{\n                    id:\"rightoptions\",\n                    data:right\n                }\n            }, arr:arr, lrr:lrr})\n        }\n        else if(right.includes(result.source.droppableId) && items.includes(result.destination.droppableId)){\n            const srcindex = right.indexOf(result.source.droppableId);\n            const temp = items.indexOf(result.destination.droppableId)\n            const arr = this.state.arr\n            const lrr = this.state.lrr\n            arr[srcindex] = \"\"\n            lrr[temp] = result.draggableId\n            // console.log(\"right\",right)\n            // console.log(\"items\",items)\n            // console.log(\"arr\",arr)\n            this.setState({dragdata:{\n                1:{\n                    id:\"leftoptions\",\n                    data:items\n                },\n                2:{\n                    id:\"rightoptions\",\n                    data:right\n                }\n            }, arr:arr, lrr:lrr})\n        }\n        // console.log(result)\n    }\n\n\n    myanslist=(m,data)=>{\n        // console.log(this.state.arr[m])\n        let temp = this.state.arr[m]\n        // console.log(isNaN(temp))\n        if(!temp){\n            // console.log(m)\n            return(<div></div>)\n        }\n        else{\n            // console.log(\"bllllllll\")\n            return(\n                <div>\n                        <Draggable key = {temp} draggableId={temp} index= {m}>\n                        {(provided) => (\n                           \n                        <li className={classes.MyListDiv}\n                         ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{this.state.arr[m]}\n                       </li>\n                         )}\n                         </Draggable>\n                            </div>\n            );\n        }\n    }\n\n    myoptionlist = (m) =>{\n        let temp = this.state.lrr[m]\n        if(!temp){\n            // console.log(m)\n            return(<div></div>)\n        }\n        else{\n            // console.log(\"bllllllll\")\n            return(\n                <div>\n                        <Draggable key = {temp} draggableId={temp} index= {m}>\n                        {(provided) => (\n                           \n                        <li className={classes.MyListDiv}\n                         ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{this.state.lrr[m]}\n                       </li>\n                         )}\n                         </Draggable>\n                            </div>\n            );\n        }\n    }\n\n    render(){\n\n        // console.log(this.state.dragdata)\n        return(\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  >\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n\n            \n             <DragDropContext onDragEnd={this.handleOnDragEnd}>\n             <div className={classes.DivinCol}>\n                {Object.entries(this.state.dragdata).map((data)=>{\n                    // console.log(\"kajhsdkahsdkajshd\",data)\n                    let x = data[1]\n                    // // console.log(x.data)\n                    if(x.id === \"leftoptions\"){\n                        return(\n                            <div className=\"row\">\n                                 {x.data.map(index =>{\n                                     let ma =x.data.indexOf(index)\n                                     const renderdataa = this.myoptionlist(ma,index)\n                                          return(\n                                <Droppable droppableId={index} >\n                                {(provided, snapshot) => (\n                                    <ul  className = \"characters\" \n                                    style={{listStyleType:\"none\", background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\"}} \n                                    {...provided.droppableProps} ref={provided.innerRef}>\n                                     \n                                            <div className={classes.DivinCol2}>\n                                            <div className={classes.MyListDrop}>\n                                                <p  style={{textAlign:\"center\"}}>{index}</p>\n                                             </div>\n                                             {renderdataa}\n                                                {/* <Draggable key = {index} draggableId={index} index= {x.data.indexOf(index)}>\n                                                {(provided) => (\n                                                \n                                                <li className={classes.MyListDiv2}\n                                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{index}\n                            \n                                                </li>\n                                \n                                                )}\n                                                </Draggable> */}\n                                            </div>\n                                          \n                                            \n                                            {provided.placeholder}\n                                    </ul>\n                                    \n                                )}\n                                \n                                </Droppable>\n                                )})}\n                            </div>\n                        )\n                    }\n                    \n                    else{\n                        \n                        return(\n                            <div>\n                                {x.data.map(index =>{\n                                    // console.log(\"rightdrop\", x.data)\n                                    let m =x.data.indexOf(index)\n                                    const renderdata = this.myanslist(m,index)\n                                    return(\n                                        <Droppable droppableId={index} >\n                                    {(provided, snapshot) => (\n                                <ul  className = \"characters\" \n                                style={{listStyleType:\"none\",padding:\"0px\", background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\"}} \n                                {...provided.droppableProps} ref={provided.innerRef}>\n                                            <div className={classes.DivinCol2}>\n                                            <div className={classes.MyListDrop}>\n                                                <p  style={{textAlign:\"center\"}}>{index}</p>\n                                             </div>\n                                            {renderdata}\n                                            </div>\n                                            {provided.placeholder}\n                                </ul>\n                                 )}\n                                </Droppable>\n                                )})}\n                            \n                        </div>\n                        )\n                        \n                    }\n\n            // {/* })}\n            // {provided.placeholder}\n            // </ul>\n            // )}\n            // </Droppable>\n                    // )\n                        })} \n             </div>\n            </DragDropContext>\n            \n       \n        \n            \n            </Card>\n            </div>\n        )\n    }\n}\n\n\nexport default MatchDragTest;\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {  withRouter } from \"react-router-dom\";\nimport Header from \"../Header\";\nimport Countdown from \"react-countdown\";\nimport {  Divider } from \"antd\";\nimport * as CategoryTypes from '../../util/Categories';\nimport MultipleChoiceTest from \"../Categories/Multiple Choice/MultipleChoiceTest\";\nimport BlanksTest from \"../Categories/Blanks/BlanksTest\";\nimport DropDownTest from \"../Categories/Select-From-dropdown/DropDownTest\";\nimport TrueAndFalseTest from \"../Categories/TrueAndFalse/TrueAndFalseTest\";\nimport MultipleCheckboxTest from \"../Categories/MultipleCheckbox/MultipleCheckboxTest\";\nimport SequenceInTest from \"../Categories/SequenceInOrder/SequenceInTest\";\nimport MatchingWordsTest from \"../Categories/MatchingWords/MatchingWordsTest\";\nimport MatchDragTest from \"../Categories/MatchDrag/MatchDragTest\";\n// import MultipleC from \"../Categories/Multip\"\n\nclass MyTest extends Component{\n\n\n  renderQuestionRows = () => {\n    //<MultipleChoice quesNo={1} data={data} />\n    //    const ques = this.props.questions;\n    //console.log(\"ques.ques: \",this.props.questions.questions);\n\n    const result = this.props.questions.questions.map((item, index) => {\n      //console.log(\"item \",item);\n      index++;\n      //console.log(\"item: \", item.category)\n      if(item.category === CategoryTypes.MULTIPLE_CHOICE){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <MultipleChoiceTest\n            color={this.props.questions.color}\n            // actions={[\n                    \n            //   <EditTwoTone onClick={()=>{(new MultipleChoice()).showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n            //   <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n            // ]}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      );\n    }else if(item.category === CategoryTypes.FILL_IN_THE_BLANKS){\n     // console.log(\"sdfsd\");\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <BlanksTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      );\n    }else if(item.category === CategoryTypes.SELECT_FROM_DROPDOWN){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <DropDownTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      );\n    }else if(item.category === CategoryTypes.TRUE_AND_FALSE){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <TrueAndFalseTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      )\n      ;\n    }\n    else if(item.category === CategoryTypes.MULTIPLE_CHECKBOX){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <MultipleCheckboxTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      );\n    }\n    else if(item.category === CategoryTypes.SEQUENCE_IN_ORDER){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <SequenceInTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      );\n    }\n    else if(item.category === CategoryTypes.MATCHING_WORDS){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <MatchingWordsTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      );\n    }\n    else if(item.category === CategoryTypes.MATCH_DRAG){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <MatchDragTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n          />\n        </div>\n      );\n    }\n    })\n    ;\n    return result;\n  };\n\n\n    render(){\n        console.log(this.props.questions.time)\n        return(\n            // <div>\n            //     <Countdown date={Date.now() + 30000}></Countdown>\n            //     <Countdown date={Date.now() + (this.props.questions.time * 60 * 1000)}></Countdown>\n            // </div>\n            <div className=\"mainBody\">\n        {/* <h1>{this.props.user.username}</h1> */}\n        <Header />\n        <div style={{ position: \"fixed\" }} className=\"add\">\n          <div className=\"row\">\n            <br />\n            <hr />\n            <br />\n          </div>\n        </div>\n        {/* Options */}\n        <div style={{ height: 10 }} />\n        <div style={{ height: 10 }} />\n        <div style={{ height: 10 }} />\n        <div />\n        <Divider style={{ marginTop: 20 }} orientation=\"left\">\n          Options\n        </Divider>\n        <Divider style={{ marginTop: 20 }} orientation=\"left\" />\n        <div style={{flex:1, flexDirection: \"row-reverse\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"}}>\n          <p>Questions :{\" \"}\n          {this.props.questions.questions.length\n            ? this.props.questions.questions.length\n            : \"0\"}</p>\n        \n        </div>\n      \n        <br />\n        {this.props.questions ? (\n          this.renderQuestionRows()\n        ) : (\n          <p>No Questions Added yet</p>\n        )}\n      </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    // addQuestion: (data) => dispatch(addQuestion(data)),\n    // updateQuestion: (data) => dispatch(updateQuestion(data)),\n    // deleteQuestion: (data) => {\n    //   dispatch(deleteQuestion(data));\n    // },\n    // changeColor: (color) => {\n    //   dispatch(changeColor(color));\n    // },\n    // changeScore: (score) => {\n    //   dispatch(changeScore(score));\n    // },\n    // changeTime: (time) => {\n    //   dispatch(changeTime(time));\n    // },\n  });\n  const mapStateToProps = (state) => {\n    return {\n      user: state.user,\n      questions: state.question,\n      option: state.option\n    };\n  };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MyTest));","import React from 'react';\nimport \"./App.css\";\nimport { Route} from 'react-router-dom';\nimport {Switch, withRouter} from 'react-router-dom';\n\nimport Main from \"./components/Main\";\nimport 'antd/dist/antd.css';\nimport Test from './components/Test.js';\nimport MyTest from \"./components/MyTest/MyTest\";\n\n\nfunction App() {\n  return (\n      <Switch>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/test\" component={Test} />\n      <Route path=\"/test123\" component={MyTest} />\n      </Switch>\n  )\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CHANGE_COLOR=\"CHANGE_COLOR\";\r\nexport const CHANGE_SCORE=\"CHANGE_SCORE\";\r\nexport const CHANGE_TIME=\"CHANGE_TIME\";\r\n\r\nexport const GET_COLOR=\"GET_COLOR\";\r\nexport const GET_SCORE=\"GET_SCORE\";\r\nexport const GET_TIME=\"GET_TIME\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import { ConfigureStore } from \"./redux/ConfigureStore\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport {  User } from \"./redux/reducers/User\";\nimport {  Questions } from \"./redux/reducers/Questions\";\nimport {  options } from \"./redux/reducers/Option\";\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore, applyMiddleware, compose, combineReducers } from 'redux';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\n\nconst rootReducer = combineReducers({\n  user: User,\n    question: Questions,\n    option: options\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\r\nexport const User= (state={username: \"user123\"}, action) =>{\r\n return state;\r\n}","import * as types from \"../types/Questions\";\r\n\r\n\r\n\r\nexport const Questions = (\r\n  state = {\r\n    questions: [\r\n        {       id:123,\r\n                category: \"Multiple Choice\",\r\n                description: \"How long one-one meeting with the subordinate last.\",\r\n                options: [\"5 mins\", \"10 mins\", \"15 mins\"],\r\n                ans: [\"5 mins\"],\r\n              }, {       id:126,\r\n                category: \"Fill in the Blanks\",\r\n                description: \"____ of America is ____ .but ____ is the capital of Australia\",\r\n                options: [],\r\n                ans: [\"Capital\",\"New York\", \"Sydney\"],\r\n              }, {       id:16,\r\n                category: \"Select From Dropdown\",\r\n                description: \"Islamabad is the capital of  #1 Dropdown#. China is her  #2 Dropdown#\",\r\n                options: [\"Pakistan,India\",\"bestfriend,enemy\"],\r\n                ans: [0,0],\r\n              },{       id:166,\r\n                category: \"True and False\",\r\n                description: \"Is Trump President of America.\",\r\n                options: [],\r\n                ans: [false],\r\n              },{       id:\"ale\",\r\n                category: \"Multiple Checkbox\",\r\n                description: \"From the below options select the states in INDIA\",\r\n                options: [\"New York\", \"Telangana\",  \"Nepal\",\"Kerala\"],\r\n                ans: [\"Telangana\", \"Kerala\"],\r\n              },{       id:\"ale\",\r\n              category: \"Sequence In Order\",\r\n              description: \"From the below options place them in alphabetical order \",\r\n              options: [\"Dino\", \"From\",  \"Apple\",\"Cat\"],\r\n              ans: [\"Apple\", \"Cat\", \"Dino\", \"From\"],\r\n            },{       id:\"maaa\",\r\n            category: \"Matching Words\",\r\n            description: \"From the below options Match them correctly \",\r\n            leftoptions: [\"A\",\"B\",\"C\",\"D\"],\r\n            rightoptions: [\"Cat\", \"Dino\", \"Apple\", \"Banana\"],\r\n            ans: [\"Apple\", \"Banana\", \"Cat\", \"Dino\"],\r\n          },{       id:\"match\",\r\n          category: \"Match Drag\",\r\n          description: \"From the below options Drag and drop in correact positions \",\r\n          leftoptions: [\"A\",\"B\",\"C\",\"D\"],\r\n          rightoptions: [\"Cat\", \"Dino\", \"Apple\", \"Banana\"],\r\n          ans: [\"Apple\", \"Banana\", \"Cat\", \"Dino\"],\r\n        }\r\n              \r\n    ],color: \"white\",score:1,time:60\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case types.ADD_QUESTION:\r\n       action.payload.id= action.payload.ans[0];\r\n       console.log(action.payload)\r\n       console.log(state.questions)\r\n      // return { ...state, questions: state.questions.concat(action.payload) };\r\n      return {...state, questions: [...state.questions, action.payload]}\r\n    // case types.INIT_QUESTIONS:\r\n    //   axios.\r\n\r\n    case types.DELETE_QUESTION:\r\n        const newArray= state.questions.filter(item=>{return item.id!==action.payload});\r\n        return { ...state, questions: newArray};\r\n    case types.CHANGE_COLOR:\r\n         return { ...state, color: action.payload} \r\n    case types.CHANGE_SCORE:\r\n            return { ...state, score: action.payload}\r\n    case types.CHANGE_TIME:\r\n            return { ...state, time: action.payload}   \r\n    case types.UPDATE_QUESTION:\r\n            const question=action.payload;\r\n           // console.log(\"question: \",question);\r\n            const id= question.id;\r\n          //  console.log(\"id: \",id);\r\n            var foundIndex = state.questions.findIndex(x => x.id === id);\r\n           // console.log(\"found index: \",foundIndex);\r\n            state.questions[foundIndex]=question;\r\n            //console.log(\"state: \",state);\r\n            return { ...state, questions: state.questions}        \r\n    default:\r\n              return state;\r\n  }\r\n  // return state;\r\n};\r\n// {\r\n//     category: \"Multiple Choice\",\r\n//     description: \"How long one-one meeting with the subordinate last.\",\r\n//     options: [\"5 mins\", \"10 mins\", \"15 mins\"],\r\n//     ans: \"5 mins\",\r\n//   },\r\n//   {\r\n//     category: \"Multiple Choice\",\r\n//     description: \"How long one-one meeting with the subordinate last.\",\r\n//     options: [\"5 mins\", \"10 mins\", \"15 mins\"],\r\n//     ans: \"5 mins\",\r\n//   },","import * as opt from \"../types/OptionTypes\";\r\n\r\nexport const options = (\r\n  state = {\r\n    score: 0,\r\n    time: 0,\r\n    color: \"white\",\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case opt.CHANGE_COLOR:\r\n      return { ...state, color: action.payload };\r\n    case opt.CHANGE_SCORE:\r\n      return { ...state, score: action.payload };\r\n    case opt.CHANGE_TIME:\r\n      return { ...state, time: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainDiv\":\"MatchingWords_MainDiv__1YVc-\",\"MyListDiv\":\"MatchingWords_MyListDiv__3OU04\",\"MyListDivTest\":\"MatchingWords_MyListDivTest__OiaxR\",\"MyListDiv2\":\"MatchingWords_MyListDiv2__2pC-k\",\"DivinCol\":\"MatchingWords_DivinCol__1fGX_\",\"InnerDiv\":\"MatchingWords_InnerDiv__3e8Z2\",\"BoxOrderDiv\":\"MatchingWords_BoxOrderDiv__1gXYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainDiv\":\"SequenceInOrder_MainDiv__P903A\",\"MyListDiv\":\"SequenceInOrder_MyListDiv__GVXQB\",\"DivinCol\":\"SequenceInOrder_DivinCol__1A5Vd\",\"InnerDiv\":\"SequenceInOrder_InnerDiv__3LnZY\",\"BoxOrderDiv\":\"SequenceInOrder_BoxOrderDiv__2p7Ud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainDiv\":\"MatchDrag_MainDiv__pm1t9\",\"MyListDiv\":\"MatchDrag_MyListDiv__1sN9m\",\"MyListDrop\":\"MatchDrag_MyListDrop__2pMYn\",\"MyListDiv2\":\"MatchDrag_MyListDiv2__2b-Wj\",\"DivinCol\":\"MatchDrag_DivinCol__236Jo\",\"DivinCol2\":\"MatchDrag_DivinCol2__1V49F\",\"InnerDiv\":\"MatchDrag_InnerDiv__1nI_K\",\"BoxOrderDiv\":\"MatchDrag_BoxOrderDiv__HDaMx\",\"DropContent\":\"MatchDrag_DropContent__1G5UD\"};"],"sourceRoot":""}