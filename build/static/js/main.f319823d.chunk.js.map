{"version":3,"sources":["components/Categories/MatchingWords/MatchingWords.module.css","components/Header.js","components/modals/CustomTime.js","components/modals/CustomScore.js","util/colors.js","components/Options.js","components/Schemas/Mcqs.js","components/Categories/Multiple Choice/MakeMultipleChoice.js","components/Categories/Multiple Choice/MultipleChoice.js","components/Categories/MultipleCheckbox/MakeMultipleCheckbox.js","components/Categories/MultipleCheckbox/MultipleCheckbox.js","components/Categories/SequenceInOrder/MakeSequenceInOrder.js","components/Categories/SequenceInOrder/SequenceInOrder.js","components/Schemas/BlanksSchema.js","components/Categories/Blanks/MakeFillInTheBlanks.js","components/AddQuestionFooter.js","util/Categories.js","components/Categories/Select-From-dropdown/MakeDropDown.js","components/Categories/TrueAndFalse/MakeTrueFalse.js","components/Categories/MatchingWords/MakeMatchingWords.js","components/Categories/MatchDrag/MakeMatchDrag.js","components/Categories/MatchDragImg/MakeMatchDragImg.js","components/Categories/AudioMultipleChoice/MakeAudioMultipleChoice.js","components/Categories/AudioSequenceInOrder/AudioMakeSequence.js","components/Categories/VideoMultipleChoice/MakeVideoMultipleChoice.js","components/Categories/VideoSequenceInOrder/VideoMakeSequence.js","components/AddQuestion.js","components/Categories/Blanks/Blanks.js","components/Categories/Select-From-dropdown/EditDropDown.js","components/Categories/Select-From-dropdown/DropDown.js","components/Categories/TrueAndFalse/EditTrueFalse.js","components/Categories/TrueAndFalse/TrueAndFalse.js","components/Categories/MatchingWords/MatchingWords.js","components/Categories/MatchDrag/MatchDrag.js","components/Categories/MatchDragImg/MatchDragImg.js","components/Categories/AudioMultipleChoice/AudioMultipleChoice.js","components/Categories/AudioSequenceInOrder/AudioSequenceInOrder.js","components/Categories/VideoMultipleChoice/VideoMultipleChoice.js","components/Categories/VideoSequenceInOrder/VideoSequenceInOrder.js","redux/types/Questions.js","redux/actions/QuestionActions.js","components/Main.js","components/Categories/Multiple Choice/MultipleChoiceTest.js","components/Categories/Blanks/BlanksTest.js","components/Categories/Select-From-dropdown/DropDownTest.js","components/Categories/TrueAndFalse/TrueAndFalseTest.js","components/Categories/MultipleCheckbox/MultipleCheckboxTest.js","components/Categories/SequenceInOrder/SequenceInTest.js","components/Categories/MatchingWords/MatchingWordsTest.js","components/Categories/MatchDrag/MatchDragTest.js","components/Categories/MatchDragImg/MatchDragImgTest.js","components/Categories/AudioMultipleChoice/AudioMultipleChoiceTest.js","components/Categories/AudioSequenceInOrder/AudioSequenceInTest.js","components/Categories/VideoMultipleChoice/VideoMultipleChoiceTest.js","components/Categories/VideoSequenceInOrder/VideoSequenceInTest.js","components/SubmitTest/SubmitTest.js","components/MyTest/MyTest.js","App.js","reportWebVitals.js","redux/types/utility.js","redux/reducers/Questions.js","redux/types/OptionTypes.js","index.js","redux/reducers/User.js","redux/reducers/Option.js","components/Categories/MatchDragImg/MatchDrag.module.css","components/Categories/SequenceInOrder/SequenceInOrder.module.css","components/Categories/AudioSequenceInOrder/SequenceInOrder.module.css","components/Categories/VideoSequenceInOrder/SequenceInOrder.module.css","components/Categories/MatchDrag/MatchDrag.module.css"],"names":["module","exports","Header","props","setIsOpen","setState","isOpen","state","toggle","Navbar","color","fixed","light","expand","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Component","CustomTime","time","onChangeAnsField","val","console","log","visible","loading","title","onOk","handleOk","onCancel","handleCancel","footer","type","formItemLayout","Item","hasFeedback","validateStatus","onChange","value","style","width","React","labelCol","xs","span","sm","wrapperCol","CustomScore","score","LIGHTBLUE","LIGHTYELLOW","LIGHTGREEN","ERROR_COLOR","LIGHTPINK","LIGHTPURPLE","LIGHTBROWN","LIGHTGRAY","LIGHTSKYBLUE","Options","showModalTime","ModalTimeVisible","ModalTimeLoading","onChangeTime","setTimeout","showModalScore","ModalScoreVisible","handleOkScore","onChangeScore","ModalScoreLoading","handleCancelScore","ColorMenu","onChangeColor","target","rel","colors","ScoreMenu","TimeMenu","renderColorName","scoreError","timeError","className","marginTop","overlay","placement","arrow","block","description","Joi","string","required","option","min","TextArea","Input","errorStyleText","MakeMultipleChoice","e","onFinish","values","onFinishFailed","errorInfo","onChangeOptionField","optionValue","onChangeDescription","onAddOption","result","validate","Schemas","error","optionValueError","details","message","options","some","item","toUpperCase","concat","onAddorUpdate","ans","addorupdate","data","category","id","question","updateQuestion","key","addQuestion","onDelete","index","indexOf","splice","renderOptions","radioStyle","display","height","lineHeight","map","Group","DeleteTwoTone","twoToneColor","onAddQuestion","length","descriptionError","optionsError","placeholder","rows","marginLeft","success","MultipleChoice","showModal","deleteQuestion","backgroundColor","actions","EditTwoTone","fontSize","quesNo","MakeMultipleCheckbox","onChangeC","checkedValues","uncheck","myvalues","includes","ansans","indexans","MultipleCheckbox","AnsValue","onAddAnswer","AnsValueError","Answers","optionsorans","classes","MyListDiv","renderAnswers","BoxOrderDiv","DivinCol","SequenceInOrder","itemLayout","MakeFillInTheBlanks","useState","blankValue","bankValueError","setQuestion","useEffect","i","desc","arr","split","newArr","count","dashcount","forEach","push","join","deleteBlankInDescription","blankValueError","updateDesc","onAddBlank","questionOption","onBlankValueChange","AddQuestionFooter","FILL_IN_THE_BLANKS","MULTIPLE_CHOICE","AUDIO_MULTIPLE_CHOICE","VIDEO_MULTIPLE_CHOICE","AUDIO_SEQUENCE_ORDER","VIDEO_SEQUENCE_ORDER","SELECT_FROM_DROPDOWN","TRUE_AND_FALSE","MULTIPLE_CHECKBOX","SEQUENCE_IN_ORDER","MATCHING_WORDS","MATCH_DRAG","MATCH_DRAG_IMG","MakeDropDown","dropdownCount","match","optionCount","CategoryTypes","onEnterOptionValue","addOptionFields","onOptionChangeValue","optionIndex","optionArray","newOptionArray","onDeleteOptionValue","ansValue","newOptionValue","onChangeCheckedOptionValue","onAddOptionValueBtn","addOptionFieldsError","optionsValue","newOptionsValue","onDeleteDropDown","str","newDesc","finalDesc","Desc","n","newStr","finaldescription","c","f","onAddDropdown","renderAddDropdownSection","textAlign","CloseCircleTwoTone","margin","PlusOutlined","verticalAlign","checked","ansError","position","right","MakeTrueFalse","setValue","MakeMatchingWords","onChangeLeftField","leftoptionValue","onAddLeftOption","leftoptionValueError","leftoptions","rightoptions","onDeleteLeft","leftoptionsError","paddingLeft","MakeMatchDrag","MakeMatchDragImg","leftoptionsurl","MakeAudioMultipleChoice","audiourl","onChangeURLField","AudioMakeSequenceInOrder","MakeVideosMultipleChoice","videourl","VideoMakeSequenceInOrder","AddQuestion","onCatChange","catergory","menu","CategoryLoader","NaN","justifyContent","postion","icon","blankString","Blanks","toggleModal","array","textDecoration","makeDescription","EditDropDown","_handleKeyDown","onKeyDown","DropDownSelect","onRenderDropdownQuestion","dataArray","ansIndex","deepItem","item2","isNumeric","preventDefault","optionsArr","danger","isNaN","parseFloat","EditTrueFalse","TrueAndFalse","MatchingWords","MatchDrag","MatchDragImg","Img","src","alt","AudioMultipleChoice","autoPlay","controls","muted","AudioSequenceInOrder","VideoMultipleChoice","VideoSequenceInOrder","ADD_QUESTION","DELETE_QUESTION","UPDATE_QUESTION","CHANGE_COLOR","CHANGE_SCORE","CHANGE_TIME","USER_ANS_LIST","FETCH_QUESTIONS_SUCCESS","FETCH_QUESTIONS_FAIL","FETCH_COLOR_SUCCESS","FETCH_COLOR_FAIL","FETCH_SCORE_SUCCESS","FETCH_SCORE_FAIL","FETCH_TIME_SUCCESS","FETCH_TIME_FAIL","ActionTypes","payload","changeColor","changeScore","changeTime","initquestions","dispatch","axios","get","then","res","x","fetcheddata","catch","err","initcolor","initscore","inittime","userAnsList","list","Main","Number","test","changetime","changescore","changecolor","btnClick","renderQuestionRows","questions","deletequestion","updatequestion","xyz","addquestions","orientation","flex","flexDirection","alignItems","withRouter","connect","user","post","delete","put","onClickHandler","yesorno","userans","queNo","userAns","correctans","testscore","nextQue","float","BlanksTest","Array","numOfBlanks","mod","makeNumberedBlanks","sen","na","words","onChangeHandler","m","name","toLowerCase","fill","marginBottom","ansa","ca","myans","onClickNextHandler","j","MultipleCheckboxTest","sort","SequenceInTest","handleOnDragEnd","destination","items","from","mydata","source","reorderedItem","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","MatchingWordsTest","answers","paddingTop","listStyleType","MyListDiv2","MatchDragTest","srcindex","temp","lrr","dragdata","1","2","myanslist","myoptionlist","Object","entries","ma","renderdataa","snapshot","background","isDraggingOver","DivinCol2","MyListDrop","renderdata","padding","MatchDragImgTest","sourceid","substring","destid","sid","did","lefturls","arrurl","AudioMultipleChoiceTest","AudioSequenceInTest","VideoMultipleChoiceTest","VideoSequenceInTest","SubmitTest","minuteSeconds","MyTest","router","PropTypes","currentquestion","renderTime","dimension","getTimeSeconds","getTimeMinutes","updateCurrentNo","cur","updateUserAnsList","RenderorSubmit","window","location","timerProps","isPlaying","size","strokeWidth","remainingTime","paddingRight","duration","onComplete","totalElapsedTime","elapsedTime","totsc","s","acscore","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObj","updatedObj","initialState","fetchQuestionsSuccess","action","fetchQuestionsFail","Questions","types","newOrder","updateobj","newArray","filter","foundIndex","findIndex","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","username","opt","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f319823d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainDiv\":\"MatchingWords_MainDiv__1YVc-\",\"MyListDiv\":\"MatchingWords_MyListDiv__3OU04\",\"MyListDivTest\":\"MatchingWords_MyListDivTest__OiaxR\",\"MyListDiv2\":\"MatchingWords_MyListDiv2__2pC-k\",\"DivinCol\":\"MatchingWords_DivinCol__1fGX_\",\"InnerDiv\":\"MatchingWords_InnerDiv__3e8Z2\",\"BoxOrderDiv\":\"MatchingWords_BoxOrderDiv__1gXYf\"};","import React, { Component } from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    // Nav,\r\n    // NavItem,\r\n    // NavLink,\r\n    // UncontrolledDropdown,\r\n    // DropdownToggle,\r\n    // DropdownMenu,\r\n    // DropdownItem,\r\n    // NavbarText\r\n  } from 'reactstrap';\r\nexport default class Header extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={ isOpen: false};\r\n\r\n    }\r\n\r\n     setIsOpen=()=>{\r\n     this.setState({isOpen: !this.state.isOpen})\r\n }\r\n toggle=()=>{\r\n     this.setIsOpen();\r\n } \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"light\" fixed=\"top\"  light expand=\"md\">\r\n        <NavbarBrand href=\"/\">DYDQuizMaker</NavbarBrand>\r\n        <NavbarToggler onClick={this.toggle} />\r\n        <Collapse isOpen={this.state.isOpen} navbar>\r\n          {/* <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/components/\">Components</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Options\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  Option 1\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  Option 2\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  Reset\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav> */}\r\n          {/* <NavbarText>Simple Text</NavbarText> */}\r\n        </Collapse>\r\n      </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Modal, Button, InputNumber, Form } from 'antd';\r\nimport React from \"react\";\r\n// const formItemLayout = {\r\n//     labelCol: {\r\n//       xs: { span: 24 },\r\n//       sm: { span: 5 },\r\n//     },\r\n//     wrapperCol: {\r\n//       xs: { span: 24 },\r\n//       sm: { span: 12 },\r\n//     },\r\n//   };\r\nexport default class CustomTime extends React.Component {\r\n \r\n\r\n  state = {\r\n    time: this.props.time\r\n  }\r\n  onChangeAnsField = (val) => {\r\n    console.log(val)\r\n    this.setState({ time: val});\r\n    // console.log(this.state.AnsValue)\r\n  };\r\n  render() {\r\n    const { visible, loading } = this.props;\r\n    \r\n    return (\r\n      <>\r\n        \r\n        <Modal\r\n          visible={visible}\r\n          title=\"Custom Time\"\r\n          onOk={this.props.handleOk}\r\n          onCancel={this.props.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.props.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={()=>{this.props.handleOk(this.state.time)}}>\r\n              {/* <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.props.onChange(this.state.time)}> */}\r\n              Submit\r\n            </Button>,\r\n          ]}\r\n        >\r\n          {/* <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p> */}\r\n          <Form {...this.formItemLayout}>\r\n         \r\n         <Form.Item  hasFeedback validateStatus=\"success\">\r\n           {/* <InputNumber onChange={(val)=> {this.props.onChange(val)}} value={this.props.time}  style={{ width: '100%' }} /> */}\r\n           <InputNumber onChange={this.onChangeAnsField} value={this.props.time}  style={{ width: '100%' }} />\r\n         </Form.Item>\r\n               </Form>\r\n             \r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Modal, Button, InputNumber, Form } from 'antd';\r\nimport React from \"react\";\r\n\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 5 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 24 },\r\n    },\r\n  };\r\n\r\nexport default class CustomScore extends React.Component {\r\n \r\n  state = {\r\n    score: this.props.score\r\n  }\r\n  onChangeAnsField = (val) => {\r\n    console.log(val)\r\n    this.setState({ score: val});\r\n    // console.log(this.state.AnsValue)\r\n  };\r\n  \r\n\r\n  render() {\r\n    const { visible, loading } = this.props;\r\n   // console.log(\"score: \", this.props.score)\r\n    return (\r\n      <>\r\n        \r\n        <Modal\r\n          visible={visible}\r\n          title=\"Custom Score\"\r\n          onOk={this.props.handleOk}\r\n          onCancel={this.props.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.props.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={()=>{this.props.handleOk(this.state.score)}}>\r\n              Submit\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout}>\r\n         \r\n    <Form.Item  hasFeedback validateStatus=\"success\">\r\n      <InputNumber onChange={this.onChangeAnsField} value={this.props.score}  style={{ width: '100%' }} />\r\n    </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export const LIGHTBLUE=\"#C0E0FD\";\r\nexport const LIGHTYELLOW= \"#FFFFC3\";\r\nexport const LIGHTGREEN=\"#E0F7CC\";\r\nexport const ERROR_COLOR=\"#eb2f96\";\r\nexport const LIGHTPINK = \"#ffc2d4\";\r\nexport const LIGHTPURPLE = \"#f3c4fb\";\r\nexport const LIGHTBROWN = \"#e6ccb2\";\r\nexport const LIGHTGRAY = \"#dee2e6\";\r\nexport const LIGHTSKYBLUE = \"#c4fff9 \"\r\n\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react'\r\nimport {Button, Menu, Dropdown } from \"antd\";\r\nimport CustomTime from \"./modals/CustomTime\";\r\nimport CustomScore from \"./modals/CustomScore\";\r\nimport * as colors from \"../util/colors\";\r\n\r\nexport default class Options extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={ \r\n            ModalTimeVisible: false,\r\n            ModalTimeLoading: false,\r\n            ModalScoreVisible: false,\r\n            ModalScoreLoading: false, \r\n          \r\n            scoreError: false,\r\n            timeError: false,\r\n          \r\n        }\r\n    }\r\n  componentDidMount() {}\r\n  \r\n  showModalTime = () => {\r\n    this.setState({\r\n        ModalTimeVisible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = (time) => {\r\n    \r\n    this.setState({ ModalTimeLoading: true });\r\n    this.props.onChangeTime(time)\r\n    setTimeout(() => {\r\n      this.setState({ ModalTimeLoading: false, ModalTimeVisible: false });\r\n    }, 700);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ ModalTimeVisible: false });\r\n  };\r\n\r\n  \r\n  showModalScore = () => {\r\n    this.setState({\r\n        ModalScoreVisible: true,\r\n    });\r\n  };\r\n\r\n  handleOkScore = (score) => {\r\n    this.props.onChangeScore(score)\r\n    this.setState({ ModalScoreLoading: true });\r\n    setTimeout(() => {\r\n      this.setState({ ModalScoreLoading: false, ModalScoreVisible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancelScore = () => {\r\n    this.setState({ ModalScoreVisible: false });\r\n  };\r\n\r\n    ColorMenu =()=> {\r\n        return(\r\n          <Menu>\r\n               <Menu.Item onClick={()=>{this.props.onChangeColor(\"white\");}}>\r\n            <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n              Default\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTBLUE);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" >\r\n              Light Blue\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTYELLOW);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Light Yellow\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTGREEN);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Light Green\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTPINK);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Light Pink\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTPURPLE);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Light Purple\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTBROWN);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Light Brown\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTGRAY);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Light Gray\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.props.onChangeColor(colors.LIGHTSKYBLUE);}}>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Light Skyblue\r\n            </a>\r\n          </Menu.Item>\r\n        </Menu>\r\n    );}\r\n    ScoreMenu =()=> {\r\n      return(\r\n        <Menu>\r\n             <Menu.Item onClick={()=>{this.props.onChangeScore(1);}}>\r\n          <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n            1pt\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeScore(2);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" >\r\n            2pt\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeScore(5);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            5pt\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={this.showModalScore}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            custom\r\n          </a>\r\n        </Menu.Item>\r\n       \r\n      </Menu>\r\n  );}\r\n  TimeMenu =()=> {\r\n      return(\r\n        <Menu>\r\n             <Menu.Item onClick={()=>{this.props.onChangeTime(10);}}>\r\n          <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n            10 mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeTime(15);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" >\r\n            15 mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeTime(30);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            30mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=>{this.props.onChangeTime(60);}}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\">\r\n            60 mins\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item onClick={()=> {this.showModalTime();}}>\r\n        <a target=\"_blank\"  rel=\"noopener noreferrer\">\r\n            custom\r\n          </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n  );}\r\n\r\n  renderColorName=(color)=>{\r\n    if(color===colors.LIGHTYELLOW){\r\n      return \"Light Yellow\";\r\n    }else if(color===colors.LIGHTGREEN){\r\n      return \"Light Green\";\r\n    }\r\n    else if(color===colors.LIGHTBLUE){\r\n      return \"Light Blue\";\r\n    }\r\n    else if(color===colors.LIGHTPINK){\r\n      return \"Light Pink\";\r\n    }\r\n    else if(color===colors.LIGHTPURPLE){\r\n      return \"Light Purple\";\r\n    }\r\n    else if(color===colors.LIGHTBROWN){\r\n      return \"Light Brown\";\r\n    }\r\n    else if(color===colors.LIGHTGRAY){\r\n      return \"Light Gray\";\r\n    }\r\n    else if(color===colors.LIGHTSKYBLUE){\r\n      return \"Light Skyblue\";\r\n    }\r\n    else{\r\n      return \"White\";\r\n    }\r\n  }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n            <div style={{marginTop: 10}} className=\"col-md-3 offset-md-1  offset-sm-1 col-sm-10 offset-1 col-10\">\r\n            <Dropdown overlay={this.ColorMenu} placement=\"bottomLeft\" arrow>\r\n        <Button block className=\"\">Choose Color : {this.renderColorName(this.props.color)}</Button>\r\n    </Dropdown>\r\n            </div>\r\n\r\n            <div style={{marginTop: 10}} className=\"col-md-3 offset-md-1 offset-sm-1  col-sm-10 offset-1 col-10\">\r\n            <Dropdown overlay={this.ScoreMenu} placement=\"bottomLeft\" arrow>\r\n        <Button  block className=\"\">Choose Score : {this.props.score} pts</Button>\r\n    </Dropdown>\r\n    <CustomScore onChange={this.props.onChangeScore} score={this.props.score} visible={this.state.ModalScoreVisible} loading={this.state.ModalScoreLoading} handleCancel={this.handleCancelScore} handleOk={this.handleOkScore}  />\r\n            </div>\r\n            <div style={{marginTop: 10}} className=\"offset-1 col-10  col-md-3 offset-md-1 offset-sm-1  col-sm-10  \">\r\n            <Dropdown overlay={this.TimeMenu} placement=\"bottomLeft\" arrow>\r\n        <Button  block className=\"\">Choose Time : {this.props.time}</Button>\r\n      \r\n    </Dropdown>\r\n    <CustomTime onChange={this.props.onChangeTime} time={this.props.time} visible={this.state.ModalTimeVisible} loading={this.state.ModalTimeLoading} handleCancel={this.handleCancel} handleOk={this.handleOk}  />\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import Joi from \"joi-browser\";\r\nexport const description  = {\r\n    description: Joi.string().required()\r\n  };\r\nexport const option  = {\r\n    option: Joi.string().required().min(1)\r\n  };  ","import React, { Component } from \"react\";\r\nimport { Input,  Button, Radio, Divider } from \"antd\";\r\nimport { DeleteTwoTone } from \"@ant-design/icons\";\r\nimport Joi from \"joi-browser\";\r\nimport * as Schemas from \"../../Schemas/Mcqs\";\r\nimport \"./MakeMultipleChoice.css\";\r\nconst { TextArea } = Input;\r\n\r\nconst errorStyleText = {\r\n  color: \"#eb2f96\",\r\n};\r\nexport default class MakeMultipleChoice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\",\r\n      descriptionError: \"\",\r\n      optionValue: \"\",\r\n      optionValueError: \"\",\r\n      options: [],\r\n      optionsError: \"\",\r\n      value: 0,\r\n\r\n      addorupdate: \"Add Question\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if(this.props.description){\r\n      this.setState({description: this.props.question.description,\r\n          options: this.props.question.options,\r\n          value: this.props.question.ans[0],\r\n          addorupdate:\"Update Question\"},\r\n          )\r\n  }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    // console.log(\"radio checked\", e.target.value);\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  onChangeOptionField = (val) => {\r\n    //console.log(val.target.value);\r\n    const value = val.target.value;\r\n    this.setState({ optionValue: value });\r\n\r\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\r\n    // if(result.error)\r\n    //  console.log(result.error.details[0].message);\r\n\r\n    //const errors = {};\r\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\r\n    // console.log(\"errors: \", errors);\r\n  };\r\n\r\n  onChangeDescription = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ description: value });\r\n  };\r\n  onAddOption = () => {\r\n    const result = Joi.validate(\r\n      { option: this.state.optionValue },\r\n      Schemas.option\r\n    );\r\n    if (result.error) {\r\n      this.setState({ optionValueError: result.error.details[0].message });\r\n    } else {\r\n      const found = this.state.options.some(\r\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\r\n      );\r\n      if (!found) {\r\n        this.setState({\r\n          options: this.state.options.concat(this.state.optionValue),\r\n          optionValueError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ optionValueError: \"Already exists\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  onAddorUpdate = (ans)=>{\r\n    if(this.state.addorupdate === \"Update Question\"){\r\n      console.log(\"Update function is called\")\r\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n      const data={category: \"Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans,id:this.props.question.id};\r\n      this.props.updateQuestion(data, this.props.question.key)\r\n    }\r\n    else{\r\n      console.log(\"ADD QUESTION function is called\")\r\n      const data={category: \"Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans};\r\n      this.props.addQuestion(data)\r\n    }\r\n  }\r\n\r\n  onDelete = (option) => {\r\n    let options = this.state.options;\r\n    const index = options.indexOf(option);\r\n    if (index > -1) {\r\n      options.splice(index, 1);\r\n    }\r\n    this.setState({ options: options });\r\n  };\r\n\r\n  renderOptions = () => {\r\n   \r\n    const radioStyle = {\r\n      display: \"inline-block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n    const { value } = this.state;\r\n    return this.state.options.map((item) => {\r\n      return (\r\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\r\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\r\n            <Radio.Group onChange={this.onChange} value={value}>\r\n              <Radio style={radioStyle} value={item}>\r\n                {item}\r\n              </Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <div className=\"col-2 col-sm-1 \">\r\n            <Button onClick={() => this.onDelete(item)}>\r\n              {\" \"}\r\n              <span>\r\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n          {/* <div className=\"col-2 col-sm-1 \">\r\n       \r\n         <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\r\n     \r\n        </div> */}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  onAddQuestion = () => {\r\n    if (this.state.options.length > 0) {\r\n      // options are present\r\n      const result = Joi.validate(\r\n        { description: this.state.description },\r\n        Schemas.description\r\n      );\r\n      if (result.error) {\r\n        this.setState({\r\n          descriptionError: result.error.details[0].message,\r\n          optionsError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n        if (this.state.value) {\r\n          //      ADD to DATABASE\r\n          // Closing modal\r\n          const ans=[];\r\n          ans[0]=this.state.value;\r\n          // const data={category: \"Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans};\r\n          // this.props.addQuestion(data);\r\n          this.onAddorUpdate(ans)\r\n          this.props.handleOk();\r\n        } else {\r\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\r\n        }\r\n\r\n        \r\n      }\r\n    } else {\r\n      // options error : no option present\r\n      this.setState({ optionsError: \"Please add atleast one option\" });\r\n    }\r\n  };\r\n  render() { \r\n    // const radioStyle = {\r\n    //   display: \"inline-block\",\r\n    //   height: \"30px\",\r\n    //   lineHeight: \"30px\",\r\n    // };\r\n    // const { value } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\r\n            <Input\r\n              placeholder=\"Enter Option Here\"\r\n              value={this.state.optionValue}\r\n              onChange={(val) => {\r\n                this.onChangeOptionField(val);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-3\">\r\n            <Button\r\n              className=\"add-option\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={this.onAddOption}\r\n            >\r\n              {\" \"}\r\n              Add Option\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.optionValueError}</p>\r\n            <br />\r\n            <p>** Please Select Correct Option **</p>\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        {this.renderOptions()}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\r\n            <p style={errorStyleText}> {this.state.optionsError} </p>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                this.onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              {/* Add Question */}\r\n              {this.state.addorupdate}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Radio,  Card, Modal } from 'antd';\r\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\r\n// import EditMultipleChoice from \"./EditMultipleChoice\";\r\nimport MakeMultipleChoice from \"./MakeMultipleChoice\";\r\nexport default class MultipleChoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 1,\r\n            visible: false,\r\n          };\r\n    }\r\n    showModal = () => {\r\n      this.setState({ visible: true });\r\n    };\r\n  \r\n    handleOk = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n  \r\n    handleCancel = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n\r\n    onDelete=()=>{\r\n      console.log(this.props.data.key)\r\n      this.props.deleteQuestion(this.props.data.id, this.props.data.key);\r\n    }\r\n      onChange = e => {\r\n        //console.log('radio checked', e.target.value);\r\n        this.setState({\r\n          value: e.target.value,\r\n        });\r\n      };\r\n    render() {\r\n        const radioStyle = {\r\n          display: 'block',\r\n          height: '30px',\r\n          lineHeight: '30px',\r\n        };\r\n        \r\n        // const { value } = this.state;\r\n        return (\r\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\r\n                <Card style={{backgroundColor:this.props.color}}\r\n                // <Card style={{backgroundColor: \"#ffc2d4\"}}\r\n                  actions={[\r\n                    \r\n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\r\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\r\n                  ]}>\r\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\r\n                <Radio.Group value={this.props.data.ans[0]}>\r\n                    {this.props.data.options.map(index=>{\r\n                      \r\n                        return(\r\n                            <Radio key={index} style={radioStyle} value={index}>\r\n                            {index}\r\n                          </Radio>\r\n                        );\r\n                    })}\r\n           \r\n                      \r\n          </Radio.Group>\r\n                </Card>\r\n            <Modal\r\n              style={{ width: 1000 }}\r\n              title=\"Edit Question\"\r\n              visible={this.state.visible}\r\n              onCancel={this.handleCancel}\r\n              width={1200}\r\n              footer={null}\r\n            >\r\n            \r\n            <MakeMultipleChoice updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\r\n            </Modal>\r\n            </div>\r\n       \r\n        );\r\n      }\r\n    \r\n}\r\n","import React, { Component } from \"react\";\nimport { Input,  Button, Divider, Checkbox, Row } from \"antd\";\nimport { DeleteTwoTone } from \"@ant-design/icons\";\nimport Joi from \"joi-browser\";\nimport * as Schemas from \"../../Schemas/Mcqs\";\nimport \"../Multiple Choice/MakeMultipleChoice.css\";\nconst { TextArea } = Input;\n\nconst errorStyleText = {\n  color: \"#eb2f96\",\n};\nexport default class MakeMultipleCheckbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      descriptionError: \"\",\n      optionValue: \"\",\n      optionValueError: \"\",\n      options: [],\n      optionsError: \"\",\n      value: [],\n    };\n  }\n  componentDidMount() {\n    if(this.props.description){\n        this.setState({description: this.props.question.description,\n            options: this.props.question.options,\n            value: this.props.question.ans,\n            addorupdate : \"Update Question\"})\n    }\n  }\n\n  onChangeC = (checkedValues) => {\n    console.log('checked = ', checkedValues.target.value);\n    console.log(\"valuee\", this.state.value);\n    let uncheck = checkedValues.target.value\n    let myvalues = this.state.value\n    if(myvalues.includes(uncheck)){\n        const index = myvalues.indexOf(uncheck);\n        if (index > -1) {\n        myvalues.splice(index, 1);\n        }\n    this.setState({ value: myvalues });\n  }\n    else{\n        this.setState({\n            value: this.state.value.concat(uncheck)\n          });\n    }\n    \n  }\n//   onChange = (e) => {\n//     console.log(\"checked\", this.state.value);\n//     this.setState({\n//         value: this.state.value.concat(e.target.value)\n//       });\n    \n//   };\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  onChangeOptionField = (val) => {\n    console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ optionValue: value });\n    console.log(this.state.optionValue)\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\n    // if(result.error)\n    //  console.log(result.error.details[0].message);\n\n    //const errors = {};\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\n    // console.log(\"errors: \", errors);\n  };\n\n  onChangeDescription = (e) => {\n    const value = e.target.value;\n    this.setState({ description: value });\n  };\n  onAddOption = () => {\n    const result = Joi.validate(\n      { option: this.state.optionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ optionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.options.some(\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          options: this.state.options.concat(this.state.optionValue),\n          optionValueError: \"\",\n        });\n      } else {\n        this.setState({ optionValueError: \"Already exists\" });\n      }\n    }\n  };\n\n  onAddorUpdate = (ans)=>{\n    if(this.state.addorupdate === \"Update Question\"){\n      console.log(\"Update function is called\")\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\n      const data={category: \"Multiple Checkbox\", description: this.state.description, options: this.state.options, ans: ans,id:this.props.question.id};\n      this.props.updateQuestion(data, this.props.question.key)\n    }\n    else{\n      console.log(\"ADD QUESTION function is called\")\n      const data={category: \"Multiple Checkbox\", description: this.state.description, options: this.state.options, ans: ans};\n      this.props.addQuestion(data)\n    }\n  }\n\n\n  onDelete = (option) => {\n    let options = this.state.options;\n    let ansans = this.state.value\n    console.log(options, this.state)\n    const index = options.indexOf(option);\n    const indexans = ansans.indexOf(option);\n    // if(ansans.includes(option)){\n      // console.log(\"indexans  \"+indexans)\n    if (indexans > -1) {\n      // console.log(\"ASDFASDFADFADFDFS\")\n        ansans.splice(indexans, 1);\n    }\n    \n    if (index > -1) {\n      options.splice(index, 1);\n    }\n    // console.log(this.state.value)\n    // console.log(\"aksjhdbfallealleallealle\"+ansans)\n    this.setState({ options: options, value:ansans });\n    // console.log(this.state.value)\n  };\n  \n\n  renderOptions = () => {\n   \n    const radioStyle = {\n      display: \"inline-block\",\n      height: \"30px\",\n      lineHeight: \"30px\",\n      color:\"black\"\n    };\n    // const { value } = this.state;\n    return this.state.options.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\n            {/* <Radio.Group onChange={this.onChange} value={value}>\n              <Radio style={radioStyle} value={item}>\n                {item}\n              </Radio>\n            </Radio.Group> */}\n            <Checkbox.Group style={{ width: '100%' }} >\n            <Row>\n                <Checkbox style={radioStyle} value={item} onChange={this.onChangeC}>{item}</Checkbox>\n            </Row>\n            </Checkbox.Group>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n          {/* <div className=\"col-2 col-sm-1 \">\n       \n         <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\n     \n        </div> */}\n        </div>\n      );\n    });\n  };\n  onAddQuestion = () => {\n    if (this.state.options.length > 0) {\n      // options are present\n      const result = Joi.validate(\n        { description: this.state.description },\n        Schemas.description\n      );\n      if (result.error) {\n        this.setState({\n          descriptionError: result.error.details[0].message,\n          optionsError: \"\",\n        });\n      } else {\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\n        if (this.state.value[0]) {\n          //      ADD to DATABASE\n          // Closing modal\n          console.log(this.state.value)\n          let ans=[];\n          ans = this.state.value;\n          // const data={id: ans[0],category: \"Multiple Checkbox\", description: this.state.description, options: this.state.options, ans: ans};\n          // this.props.addQuestion(data);\n          this.onAddorUpdate(ans)\n          this.props.handleOk();\n        } else {\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\n        }\n\n        \n      }\n    } else {\n      // options error : no option present\n      this.setState({ optionsError: \"Please add atleast one option\" });\n    }\n  };\n  render() { \n    // const radioStyle = {\n    //   display: \"inline-block\",\n    //   height: \"30px\",\n    //   lineHeight: \"30px\",\n    // };\n    // const { value } = this.state;\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <TextArea\n              placeholder=\"Enter Your Question\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              rows={4}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\n            <Input\n              placeholder=\"Enter Option Here\"\n              value={this.state.optionValue}\n              onChange={(val) => {\n                this.onChangeOptionField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0 }}\n              block\n              type=\"primary\"\n              success\n              onClick={this.onAddOption}\n            >\n              {\" \"}\n              Add Option\n            </Button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.optionValueError}</p>\n            <br />\n            <p>** Please Select Correct Option **</p>\n          </div>\n        </div>\n\n        <br />\n        {this.renderOptions()}\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\n            <p style={errorStyleText}> {this.state.optionsError} </p>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\n            <Button block\n              onClick={() => {\n                this.props.handleCancel();\n              }}\n              style={{marginTop: 7}}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"col-12 col-sm-3 \">\n            <Button block\n              onClick={() => {\n                this.onAddQuestion();\n              }}\n              type=\"primary\"\n              style={{marginTop: 7}}\n            >\n              {/* Add Question */}\n              {this.state.addorupdate}\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\n\n// while editing the question the checked boxes are not checked soo make sure they are checked","import React, { Component } from 'react'\nimport { Card, Modal,Checkbox, Row } from 'antd';\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\n// import EditMultipleChoice from \"./EditMultipleChoice\";\nimport MakeMultipleCheckbox from \"./MakeMultipleCheckbox\"\nexport default class MultipleCheckbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n      onChange = e => {\n        //console.log('radio checked', e.target.value);\n        this.setState({\n          value: e.target.value,\n        });\n      };\n    render() {\n        const radioStyle = {\n          display: 'block',\n          height: '30px',\n          lineHeight: '30px',\n        };\n        \n        // const { value } = this.state;\n        return (\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  actions={[\n                    \n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n                  ]}>\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n                <Checkbox.Group value={this.props.data.ans}>\n                <Row>\n                    {this.props.data.options.map(index=>{\n                      \n                        return(\n                            <Checkbox key={index} style={radioStyle} value={index}>\n                            {index}\n                          </Checkbox>\n                        );\n                        \n                    })}\n                </Row>\n           \n                      \n          </Checkbox.Group>\n                </Card>\n            <Modal\n              style={{ width: 1000 }}\n              title=\"Edit Question\"\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              width={1200}\n              footer={null}\n            >\n            \n            <MakeMultipleCheckbox updateQuestion={this.props.updateQuestion} question={this.props.data} description={this.props.data.description} handleOk={this.handleOk} handleCancel={this.handleCancel}/>\n            </Modal>\n            </div>\n       \n        );\n      }\n    \n}\n","import React, { Component } from \"react\";\nimport { Input,  Button, Divider, List } from \"antd\";\nimport { DeleteTwoTone } from \"@ant-design/icons\";\nimport Joi from \"joi-browser\";\nimport * as Schemas from \"../../Schemas/Mcqs\";\nimport \"../Multiple Choice/MakeMultipleChoice.css\";\nimport classes from './SequenceInOrder.module.css'\nconst { TextArea } = Input;\n\nconst errorStyleText = {\n  color: \"#eb2f96\",\n};\nexport default class MakeMultipleCheckbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      descriptionError: \"\",\n      optionValue: \"\",\n      optionValueError: \"\",\n      AnsValueError: \"\",\n      addorupdate : \"Add Question\",\n      options: [],\n      Answers:[],\n      optionsError: \"\",\n      AnsValue:\"\",\n      value: [],\n    };\n  }\n  componentDidMount() {\n    if(this.props.description){\n      console.log(this.props.question)\n        this.setState({description: this.props.question.description,\n            options: this.props.question.options,\n            Answers: this.props.question.ans,\n            addorupdate : \"Update Question\"})\n    }\n  }\n\n  // onChangeC = (checkedValues) => {\n  //   console.log('checked = ', checkedValues.target.value);\n  //   console.log(\"valuee\", this.state.value);\n  //   let uncheck = checkedValues.target.value\n  //   let myvalues = this.state.value\n  //   if(myvalues.includes(uncheck)){\n  //       const index = myvalues.indexOf(uncheck);\n  //       if (index > -1) {\n  //       myvalues.splice(index, 1);\n  //       }\n  //   this.setState({ value: myvalues });\n  // }\n  //   else{\n  //       this.setState({\n  //           value: this.state.value.concat(uncheck)\n  //         });\n  //   }\n    \n  // }\n//   onChange = (e) => {\n//     console.log(\"checked\", this.state.value);\n//     this.setState({\n//         value: this.state.value.concat(e.target.value)\n//       });\n    \n//   };\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  onChangeOptionField = (val) => {\n    console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ optionValue: value });\n    console.log(this.state.optionValue)\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\n    // if(result.error)\n    //  console.log(result.error.details[0].message);\n\n    //const errors = {};\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\n    // console.log(\"errors: \", errors);\n  };\n  onChangeAnsField = (val) => {\n    // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ AnsValue: value });\n    // console.log(this.state.AnsValue)\n  };\n\n  onChangeDescription = (e) => {\n    const value = e.target.value;\n    this.setState({ description: value });\n  };\n  onAddOption = () => {\n    const result = Joi.validate(\n      { option: this.state.optionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ optionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.options.some(\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          options: this.state.options.concat(this.state.optionValue),\n          optionValueError: \"\",\n        });\n      } else {\n        this.setState({ optionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddAnswer = () => {\n    const result = Joi.validate(\n      { option: this.state.AnsValue },\n      Schemas.option\n    );\n    if(this.state.options.includes(this.state.AnsValue)){\n      if (result.error) {\n        this.setState({ AnsValueError: result.error.details[0].message });\n      } \n      else {\n        const found = this.state.Answers.some(\n          (item) => item.toUpperCase() === this.state.AnsValue.toUpperCase()\n        );\n        if (!found) {\n          this.setState({\n            Answers: this.state.Answers.concat(this.state.AnsValue),\n            AnsValueError: \"\",\n          });\n        } else {\n          this.setState({ AnsValueError: \"Already exists\" });\n        }\n      }\n    }\n    else{\n      this.setState({ AnsValueError: \"Answer value is not present in Options\" });\n    }\n    \n  };\n\n  onAddorUpdate = (ans)=>{\n    if(this.state.addorupdate === \"Update Question\"){\n      console.log(\"Update function is called\")\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\n      const data={category: \"Sequence In Order\", description: this.state.description, options: this.state.options, ans: ans,id:this.props.question.id};\n      this.props.updateQuestion(data, this.props.question.key)\n    }\n    else{\n      console.log(\"ADD QUESTION function is called\")\n      const data={category: \"Sequence In Order\", description: this.state.description, options: this.state.options, ans: ans};\n      this.props.addQuestion(data)\n    }\n  }\n\n\n  onDelete = (optionsorans,option) => {\n    let options = optionsorans;\n    let ansans = this.state.Answers\n    console.log(options, this.state)\n    const index = options.indexOf(option);\n    const indexans = ansans.indexOf(option);\n    // if(ansans.includes(option)){\n      // console.log(\"indexans  \"+indexans)\n    if (indexans > -1) {\n      // console.log(\"ASDFASDFADFADFDFS\")\n        ansans.splice(indexans, 1);\n    }\n    \n    if (index > -1) {\n      options.splice(index, 1);\n    }\n    // console.log(this.state.value)\n    // console.log(\"aksjhdbfallealleallealle\"+ansans)\n    this.setState({ options: options, Answers:ansans });\n    // console.log(this.state.value)\n  };\n  \n\n  renderOptions = (optionsorans) => {\n    return optionsorans.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                    title=\"HEYY\"\n                    description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(optionsorans,item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  renderAnswers = () => {\n    return this.state.Answers.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(this.state.Answers,item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  onAddQuestion = () => {\n    if (this.state.options.length > 0) {\n      // options are present\n      const result = Joi.validate(\n        { description: this.state.description },\n        Schemas.description\n      );\n      if (result.error) {\n        this.setState({\n          descriptionError: result.error.details[0].message,\n          optionsError: \"\",\n        });\n      } else {\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\n        // if (this.state.value[0]) {\n          if (this.state.Answers[0]) {\n          //      ADD to DATABASE\n          // Closing modal\n          console.log(this.state.value)\n          let ans=[];\n          ans = this.state.Answers\n          this.onAddorUpdate(ans)\n          this.props.handleOk();\n        } else {\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\n        }\n\n        \n      }\n    } else {\n      this.setState({ optionsError: \"Please add atleast one option\" });\n    }\n  };\n  render() { \n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <TextArea\n              placeholder=\"Enter Your Question\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              rows={4}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\n          </div>\n        </div>\n        <br />\n        <div className={classes.BoxOrderDiv}>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n          {/* <div> */}\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Option Here\"\n              value={this.state.optionValue}\n              onChange={(val) => {\n                this.onChangeOptionField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              block\n              type=\"primary\"\n              success\n              onClick={this.onAddOption}\n            >\n              {\" \"}\n              Add Option\n            </Button>\n          </div>\n        </div>\n        <br />\n        <p style={errorStyleText}>{this.state.optionValueError}</p>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n              style ={{width:\"250px\"}}\n              placeholder=\"Enter Answer Here\"\n              value={this.state.AnsValue}\n              onChange={(val) => {\n                this.onChangeAnsField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"105px\" }}\n              block\n              type=\"primary\"\n              success\n              onClick={this.onAddAnswer}\n            >\n              {\" \"}\n              Add Answers\n            </Button>\n          </div>\n        </div>\n        </div>\n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            \n            <p style={errorStyleText}>{this.state.AnsValueError}</p>\n            <br />\n            <p>** Please Enter the Answers in correct sequence **</p>\n          </div>\n        </div>\n\n        <br />\n        <div className={classes.DivinCol}>\n          <div>\n          <h2>Options</h2>\n        {this.renderOptions(this.state.options)}\n          </div>\n        <div>\n        <h2>Answers in order</h2>\n        {this.renderAnswers()}\n        </div>\n        \n        </div>\n        \n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\n            <p style={errorStyleText}> {this.state.optionsError} </p>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\n            <Button block\n              onClick={() => {\n                this.props.handleCancel();\n              }}\n              style={{marginTop: 7}}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"col-12 col-sm-3 \">\n            <Button block\n              onClick={() => {\n                this.onAddQuestion();\n              }}\n              type=\"primary\"\n              style={{marginTop: 7}}\n            >\n              {/* Add Question */}\n              {this.state.addorupdate}\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}","import React, {Component} from 'react';\nimport { Card, Modal, List } from 'antd';\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\nimport MakesequenceInOrder from './MakeSequenceInOrder';\nimport classes from './SequenceInOrder.module.css';\nclass SequenceInOrder extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n    render(){\n        // const ListStyle = {\n        //     display: 'block',\n        //     height: '30px',\n        //     lineHeight: '30px',\n        //   };\n        return(\n            // <div>\n                 <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  actions={[\n                    \n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n                  ]}>\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <div className={classes.DivinCol}>\n                <div>\n                  <h6>Options</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.options.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Seqoptions\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )})}\n            </List>\n                </div>\n                <div>\n                  <h6>Answers</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.ans.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Seqans\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n            </div>\n            </Card>\n            <Modal\n              style={{ width: 1000 }}\n              title=\"Edit Question\"\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              width={1200}\n              footer={null}\n            >\n            \n            <MakesequenceInOrder updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\n            </Modal>\n            </div>\n            // </div>\n        )\n    }\n}\n\n\nexport default SequenceInOrder;","import Joi from \"joi-browser\";\r\nexport const description  = {\r\n    description: Joi.string().required()\r\n  };\r\nexport const option  = {\r\n    option: Joi.string().required().min(1)\r\n  };  ","import React, {useState, useEffect} from 'react'\r\nimport {Button, Divider, Input} from \"antd\";\r\nimport {DeleteTwoTone} from \"@ant-design/icons\";\r\nimport Joi from \"joi-browser\";\r\nimport \"./Blanks.css\";\r\nimport * as Schemas from \"../../Schemas/BlanksSchema\";\r\nconst errorStyleText = {\r\n    color: \"#eb2f96\",\r\n  };\r\n  const { TextArea } = Input;\r\n  const blankString=\"____\";\r\nexport  const MakeFillInTheBlanks = (props) => {\r\n    const [question, setQuestion] = useState({\r\n       \r\n        category: \"Fill in the Blanks\",\r\n        description: \"\",\r\n        options: [],\r\n        ans: [],\r\n        addorupdate:\"Add Question\",\r\n        descriptionError: \"\",\r\n        blankValue: \"\",\r\n        bankValueError: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n      if(props.description){\r\n        setQuestion({\r\n          category: \"Fill in the Blanks\",\r\n          description: props.data.description,\r\n          options: props.data.ans,\r\n          ans: [],\r\n          addorupdate:\"Update Question\",\r\n          descriptionError: \"\",\r\n          blankValue: \"\",\r\n          bankValueError: \"\",\r\n      })\r\n      }\r\n    },[props.description, props.data.description, props.data.ans, props.addorupdate]);\r\n  \r\n\r\n    const deleteBlankInDescription=(index)=>{\r\n      console.log(\"index: \", index)\r\n      let desc=question.description;\r\n      const arr = desc.split(\"\");\r\n      let newArr=[];\r\n      let count=0;\r\n      let dashcount=0;\r\n      arr.forEach((item)=>{\r\n     \r\n        if(item === \"_\"){\r\n          console.log(\"dash\");\r\n          if(index===count){\r\n           \r\n\r\n          }else{\r\n            dashcount++;\r\n            newArr.push(item);\r\n           \r\n          }\r\n            \r\n\r\n        }else{\r\n          if(dashcount===4){\r\n            count++;\r\n            dashcount=0;\r\n          }\r\n        \r\n          newArr.push(item);\r\n        }\r\n      });\r\n     \r\n    \r\n      const newDesc= newArr.join(\"\");\r\n      return newDesc;\r\n    };\r\n   const onDelete = (option, i) => {\r\n        let options = question.options;\r\n        const index = options.indexOf(option);\r\n        if (index > -1) {\r\n          options.splice(index, 1);\r\n        }\r\n       const desc= deleteBlankInDescription(i);\r\n       \r\n        setQuestion({ ...question,options: options, description: desc });\r\n      };\r\n      const onBlankValueChange=(e,index)=>{\r\n        const value = e.target.value;\r\n        let questionOption = question.options;\r\n        questionOption[index]= value;\r\n        setQuestion({ ...question,options: questionOption});\r\n\r\n    };\r\n    const renderOptions = () => {\r\n  \r\n      const {options}= question;\r\n        \r\n        return options.map((item, index) => {\r\n          return (\r\n            <div style={{ marginTop: 7 }} id={item} className=\"row\">\r\n              <div className=\"col-5 col-sm-5 offset-sm-1\">\r\n               <Input onChange={(e)=>{onBlankValueChange(e,index);}} value={item}/>\r\n              </div>\r\n              <div className=\"col-2 col-sm-1 \">\r\n                <Button onClick={() => onDelete(item, index)}>\r\n                  {\" \"}\r\n                  <span>\r\n                    <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n                  </span>\r\n                </Button>\r\n              </div>\r\n              {/* <div className=\"col-2 col-sm-1 \">\r\n           \r\n             <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\r\n         \r\n            </div> */}\r\n            </div>\r\n          );\r\n        });\r\n      };\r\n  \r\nconst         onAddBlank=()=>{\r\n    if(question.blankValue){\r\n        const found = question.options.some(\r\n            (item) => item.toUpperCase() === question.blankValue.toUpperCase()\r\n          );\r\n          if (!found) {\r\n              let updateDesc= question.description;\r\n              \r\n              updateDesc= updateDesc.concat(blankString);\r\n\r\n            setQuestion({ ...question,options:question.options.concat(question.blankValue),blankValueError: \"\", description: updateDesc});\r\n\r\n          } else {\r\n              setQuestion({ ...question, blankValueError: \"Already exists\"})\r\n            \r\n          }\r\n    }else{\r\n        setQuestion({ ...question, blankValueError: \"Please enter Value and then Press Button !\"})\r\n    }\r\n};\r\n\r\nconst onAddorUpdate = (ans)=>{\r\n  if(question.addorupdate === \"Update Question\"){\r\n    console.log(\"Update function is called\")\r\n    // this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n    const data={category: \"Fill in the Blanks\", description: question.description, options: [], ans: ans, id: props.data.id};\r\n    this.props.updateQuestion(data, this.props.question.key)\r\n  }\r\n  else{\r\n    console.log(\"ADD QUESTION function is called\")\r\n    const data={category: \"Fill in the Blanks\", description: question.description, options: [], ans: ans};\r\n    props.addQuestion(data)\r\n  }\r\n}\r\n\r\nconst onAddQuestion = () => {\r\n    if (question.options.length > 0) {\r\n      // options are present\r\n      const result = Joi.validate(\r\n        { description: question.description },\r\n        Schemas.description\r\n      );\r\n      if (result.error) {\r\n        setQuestion({ ...question,\r\n          descriptionError: result.error.details[0].message,\r\n          optionsError: \"\",\r\n        });\r\n      } else {\r\n        setQuestion({  ...question, descriptionError: \"\", optionsError: \"\" });\r\n        \r\n          //      ADD to DATABASE\r\n          // Closing modal\r\n          const ans=question.options;\r\n         \r\n          // const data={category: \"Fill in the Blanks\", description: question.description, options: [], ans: ans};\r\n          onAddorUpdate(ans);\r\n          props.handleOk();\r\n    \r\n\r\n        \r\n      }\r\n    } else {\r\n      // options error : no option present\r\n      setQuestion({ ...question, optionsError: \"Please add atleast one option\" });\r\n    }\r\n  };\r\n \r\n    return (\r\n        <>\r\n        <div className=\"row no-gutters\">\r\n          <div  className=\"col-12 col-sm-7 offset-sm-1 bankValueStyle\">\r\n            <Input\r\n              placeholder=\"Enter Blank Value Here\"\r\n              value={question.blankValue}\r\n              onChange={(e) => {\r\n                setQuestion({ ...question,blankValue: e.target.value});\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button\r\n              className=\"add-blank\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={()=>{onAddBlank();}}\r\n            >\r\n              {\" \"}\r\n              Add Blank\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{question.blankValueError}</p>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n         <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={question.description}\r\n              onChange={(e)=>setQuestion({...question,description: e.target.value})}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        {renderOptions()}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{question.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              Add Question\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Button} from \"antd\";\r\nexport default class AddQuestionFooter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleOk();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              {this.props.type}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","export const FILL_IN_THE_BLANKS=\"Fill in the Blanks\";\r\nexport const MULTIPLE_CHOICE=\"Multiple Choice\";\r\nexport const AUDIO_MULTIPLE_CHOICE=\"Audio Multiple Choice\";\r\nexport const VIDEO_MULTIPLE_CHOICE=\"Video Multiple Choice\";\r\nexport const AUDIO_SEQUENCE_ORDER=\"Audio Sequence Order\";\r\nexport const VIDEO_SEQUENCE_ORDER=\"Video Sequence Order\";\r\nexport const SELECT_FROM_DROPDOWN= \"Select From Dropdown\";\r\nexport const TRUE_AND_FALSE= \"True and False\";\r\nexport const MULTIPLE_SELECT= \"Multiple Select\";\r\nexport const MULTIPLE_CHECKBOX= \"Multiple Checkbox\";\r\nexport const SEQUENCE_IN_ORDER= \"Sequence In Order\";\r\nexport const MATCHING_WORDS=\"Matching Words\";\r\nexport const MATCH_DRAG=\"Match Drag\";\r\nexport const MATCH_DRAG_IMG=\"Match Drag Image\";\r\nexport const DRAG_IMAGE_AREA = \"Drag Image Area\";","import React, { Component } from \"react\";\r\nimport AddQuestionFooter from \"../../AddQuestionFooter\";\r\nimport { Button, Input, Checkbox } from \"antd\";\r\nimport {\r\n  CloseCircleTwoTone,\r\n  PlusOutlined,\r\n  DeleteTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport \"./Styles.css\";\r\nimport { ERROR_COLOR } from \"../../../util/colors\";\r\nimport * as CategoryTypes from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\nexport default class MakeDropDown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\",\r\n      options: [],\r\n      addOptionFields: [],\r\n      addOptionFieldsError: [],\r\n\r\n      ans: [],\r\n\r\n      ansError: \"\",\r\n      descriptionError: \"\",\r\n    };\r\n  }\r\n\r\n  onAddQuestion = () => {\r\n      if(this.state.description.length === 0){\r\n          this.setState({descriptionError: \"Description cannot be Empty!\"});\r\n      }else{\r\n        var temp = this.state.description;\r\n        var dropdownCount = (temp.match(/Dropdown/g) || []).length;\r\n        var optionCount= this.state.options.length;\r\n        if(dropdownCount > optionCount){\r\n            this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n        }else if(dropdownCount === optionCount){\r\n          if(optionCount>0){\r\n            const data={category: CategoryTypes.SELECT_FROM_DROPDOWN, description: this.state.description, options: this.state.options, ans: this.state.ans};\r\n           // console.log(\"data: \", data);\r\n            this.props.addQuestion(data);\r\n            this.props.handleOk();\r\n          }else{\r\n            this.setState({descriptionError: \"Add atleast one Dropdown\"});\r\n          }\r\n        }\r\n        else{\r\n            this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n        }\r\n      }\r\n    \r\n  };\r\n  onChangeDescription = (e) => {\r\n    let value = e.target.value;\r\n    if (e.key === 'Enter') {\r\n     // console.log('do validate');\r\n    \r\n      value= value + \"\\n\";\r\n      //console.log(\"value: \",value);\r\n      this.setState({ description: value });\r\n    }\r\n    console.log(value);\r\n    this.setState({ description: value });\r\n  };\r\n  onEnterOptionValue = (index, e) => {\r\n    const value = e.target.value;\r\n    let newArr = this.state.addOptionFields.splice();\r\n    newArr[index] = value;\r\n    this.setState({ addOptionFields: newArr });\r\n  };\r\n  onOptionChangeValue = (e, index, optionIndex) => {\r\n    const value = e.target.value;\r\n    let optionArray = this.state.options[index].split(\",\");\r\n    optionArray[optionIndex] = value;\r\n    let newOptionArray = optionArray.join(\",\");\r\n    optionArray = this.state.options;\r\n    optionArray[index] = newOptionArray;\r\n    this.setState({ options: optionArray });\r\n  };\r\n  onDeleteOptionValue = (index, optionIndex) => {\r\n    let optionValue = this.state.options[index].split(\",\");\r\n    // let del = optionValue.splice(optionIndex, 1);\r\n    let options = this.state.options;\r\n    if (optionIndex === this.state.ans[index]) {\r\n      //if we remove checked then make ans 0 index\r\n      let ans = this.state.ans;\r\n      ans[index] = 0;\r\n      this.setState({ ans });\r\n    }\r\n\r\n    if (optionIndex < this.state.ans[index]) {\r\n      let ans = this.state.ans;\r\n      let ansValue = this.state.ans[index];\r\n      // console.log(\"ans value: \", ansValue);\r\n      ans[index] = ansValue - 1;\r\n      this.setState({ ans });\r\n    }\r\n    const newOptionValue = optionValue.join(\",\");\r\n    options[index] = newOptionValue;\r\n    this.setState({ options: options });\r\n  };\r\n  onChangeCheckedOptionValue = (index, optionIndex) => {\r\n    let ans = this.state.ans;\r\n    ans[index] = optionIndex;\r\n    this.setState({ ans: ans });\r\n  };\r\n  onAddOptionValueBtn = (index) => {\r\n    const value = this.state.addOptionFields[index];\r\n    let addOptionFields = this.state.addOptionFields;\r\n    //addOptionFields--->index\r\n\r\n    //if emty display errors\r\n\r\n    if (value.length === 0) {\r\n      let err = \"Please Enter Value and then Add\";\r\n      let addOptionFieldsError = this.state.addOptionFieldsError;\r\n      addOptionFieldsError[index] = err;\r\n      this.setState({ addOptionFieldsError });\r\n      setTimeout(() => {\r\n        addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = \"\";\r\n        this.setState({ addOptionFieldsError });\r\n      }, 2000);\r\n    } else {\r\n      //check if same exists\r\n      let optionsValue = this.state.options[index].split(\",\");\r\n      if (optionsValue.includes(value)) {\r\n        let err = \"Already Exists\";\r\n        let addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = err;\r\n        this.setState({ addOptionFieldsError });\r\n        setTimeout(() => {\r\n          addOptionFieldsError = this.state.addOptionFieldsError;\r\n          addOptionFieldsError[index] = \"\";\r\n          this.setState({ addOptionFieldsError });\r\n        }, 2000);\r\n      } else {\r\n          if(optionsValue[0]===\"\"){\r\n              optionsValue[0]=value;\r\n              const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n          }else{\r\n        optionsValue.push(value);\r\n        const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n        // adding to options //\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  onDeleteDropDown = (index) => {\r\n    let { ans, options, addOptionFields, addOptionFieldsError, description} = this.state;\r\n    ans.splice(index,1);\r\n   \r\n    options.splice(index,1);\r\n    addOptionFields.splice(index,1);\r\n    addOptionFieldsError.splice(index,1);\r\n    const str= \"#\"+(index+1)+\" Dropdown#\";\r\n    const newDesc=description.split(str).join(\"\");\r\n    let count=1; \r\n    // let first=true; let skip=false;\r\n    let finalDesc=newDesc.split(\"Dropdown#\");\r\n    let Desc=[];\r\n  //  console.log(\"newDesc: \", newDesc);\r\n    //console.log(\"finaldescBefore: \", finalDesc);//\r\n    finalDesc.forEach((item,index)=>{\r\n      \r\n         const length= item.length;\r\n       \r\n         if(item.length>1){\r\n             let n=length-3;\r\n            \r\n             if(item[n]===\"#\"){\r\n                 n++;\r\n                 let str=item.split(\"\");\r\n                 str[n]=count+\"\";\r\n                 let newStr=str.join(\"\");\r\n                 count++;\r\n                // console.log(\"str: \", newStr);\r\n                 Desc.push(newStr);\r\n            \r\n             }else{\r\n               // console.log(\"item: \", item);\r\n                Desc.push(item);\r\n             }\r\n\r\n         }else{\r\n          //  console.log(\"item: \", item);\r\n            Desc.push(item);\r\n         }\r\n  \r\n    });\r\n \r\n    let finaldescription= Desc.join(\"Dropdown#\");\r\n    if(Desc.length===1){\r\n        var c = (finaldescription.match(/Dropdown/g) || []).length;\r\n        var f = (finaldescription.match(/#/g) || []).length;\r\n        if(c===0 && f===1){\r\n        finaldescription=finaldescription+\"Dropdown#\";}\r\n    }\r\n  \r\n    this.setState({ans, options, addOptionFields, addOptionFieldsError, description: finaldescription});\r\n  }\r\n\r\n  onAddDropdown = () => {\r\n        let {description, ans, options, addOptionFields, addOptionFieldsError} = this.state;\r\n        let length = this.state.options.length;\r\n        description = description + \" #\"+(length+1)+\" Dropdown#\";\r\n        ans[length]=0;\r\n        options[length]=\"\";\r\n        addOptionFields[length]=\"\";\r\n        addOptionFieldsError[length]=\"\";\r\n        this.setState({description, ans, options, addOptionFields, addOptionFieldsError});\r\n  }\r\n\r\n  renderAddDropdownSection = (item, index) => {\r\n    const optionArray = item.split(\",\"); //1,2,3\r\n    return (\r\n      <div style={{textAlign: \"center\"}} className=\"col-11 col-sm-4 offset-sm-1 dropdown-container-style\">\r\n        <div id=\"box\">\r\n          <Button onClick={()=>{this.onDeleteDropDown(index);}} type=\"text\" id=\"icon-delete-dropdown\">\r\n            <span>\r\n              <CloseCircleTwoTone\r\n                style={{ fontSize: 20 }}\r\n                twoToneColor=\"#eb2f96\"\r\n              />\r\n            </span>\r\n          </Button>\r\n        </div>\r\n        {/* input field and add button */}\r\n        <h5 style={{margin : 7}}>Dropdown #{index+1}</h5>\r\n        <div\r\n          style={{ marginTop: 10 }}\r\n          className=\"row no-gutters enter-option-value-container\"\r\n        >\r\n          <div className=\"enter-option-value-input\">\r\n            <Input\r\n              value={this.state.addOptionFields[index]}\r\n              onChange={(e) => this.onEnterOptionValue(index, e)}\r\n              placeholder=\"Enter Option Value to Add\"\r\n            />\r\n          </div>\r\n          <div className=\"enter-option-value-add-btn\">\r\n            <Button\r\n              onClick={() => {\r\n                this.onAddOptionValueBtn(index);\r\n              }}\r\n              type=\"primary\"\r\n            >\r\n              <span>\r\n                <PlusOutlined\r\n                  style={{\r\n                    color: \"white\",\r\n                    verticalAlign: \"baseline\",\r\n                    fontSize: 18,\r\n                  }}\r\n                />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        {/* error row */}\r\n        <div className=\"row no-gutters\">\r\n          <p style={{ color: ERROR_COLOR }}>\r\n            {this.state.addOptionFieldsError[index]}\r\n          </p>\r\n        </div>\r\n        {/* List of options */}\r\n\r\n        {this.state.options[index] !== \"\"\r\n          ? optionArray.map((item, optionIndex) => {\r\n              let checked = false;\r\n              if (optionIndex === this.state.ans[0]) {\r\n                checked = true;\r\n              }\r\n              return (\r\n                <div className=\"row \">\r\n                  <div className=\"checkbox-div\">\r\n                    <Button type=\"text\">\r\n                      <Checkbox\r\n                        checked={checked}\r\n                        onChange={(e) => {\r\n                          this.onChangeCheckedOptionValue(index, optionIndex);\r\n                        }}\r\n                      />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"option-value-div\">\r\n                    <Input\r\n                      value={item}\r\n                      onChange={(e) => {\r\n                        this.onOptionChangeValue(e, index, optionIndex);\r\n                      }}\r\n                      placeholder=\"Option Value\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"option-value-delete-div\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.onDeleteOptionValue(index, optionIndex);\r\n                      }}\r\n                    >\r\n                      <span>\r\n                        <DeleteTwoTone\r\n                          twoToneColor=\"#eb2f96\"\r\n                          style={{ verticalAlign: \"baseline\" }}\r\n                        />{\" \"}\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    // console.log(this.state.ans);\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* <h1>Select from Dropdown</h1> */}\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{ color: ERROR_COLOR }}>\r\n                {this.state.descriptionError}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\r\n                <div >\r\n                <Button onClick={()=>this.onAddDropdown()} type=\"primary\" style={{position: \"absolute\", right :13}}>Add Dropdown</Button>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <br/><br/>\r\n        <div className=\"row\">\r\n          {this.state.options.map((item, index) => {\r\n            return <>{this.renderAddDropdownSection(item, index)}</>;\r\n          })}\r\n        </div>\r\n        <AddQuestionFooter\r\n        type= \"Add Question\"\r\n          handleCancel={this.props.handleCancel}\r\n          handleOk={this.onAddQuestion}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Input, Divider, Button, Radio} from \"antd\";\r\nimport {ERROR_COLOR} from \"../../../util/colors\";\r\nimport { TRUE_AND_FALSE} from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\n\r\nexport default function MakeTrueFalse(props) {\r\n    const [question, setQuestion] = useState({\r\n       \r\n        category: TRUE_AND_FALSE,\r\n        description: \"\",\r\n        options: [],\r\n        ans: [],\r\n        \r\n        descriptionError: \"\",\r\n       \r\n    });\r\n    const [value, setValue] = useState(true);\r\n\r\n\r\n    const onAddQuestion = () => {\r\n        if(question.description.length===0){\r\n            setQuestion({ ...question,descriptionError: \"Description Empty!!!\"});\r\n        }else{\r\n            \r\n        let ans=[];\r\n        ans[0]=value;\r\n             \r\n              const data={category: TRUE_AND_FALSE, description: question.description, options: [], ans: ans };\r\n             //console.log(data);\r\n               props.addQuestion(data);\r\n              props.handleOk();\r\n        }\r\n      };\r\n\r\n\r\n\r\n      const onChange = e => {\r\n       // console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n      };\r\n      const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n      };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n       \r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{color:ERROR_COLOR}}>{question.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n         <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={question.description}\r\n              onChange={(e)=>setQuestion({...question,description: e.target.value})}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n          <Radio.Group onChange={onChange} value={value}>\r\n      <Radio style={radioStyle} value={true}>True</Radio>\r\n      <Radio style={radioStyle} value={false}>False</Radio>\r\n      \r\n    </Radio.Group>\r\n          </div>\r\n        </div>\r\n        \r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              Add Question\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\nimport { Input,  Button, Divider, List } from \"antd\";\nimport { DeleteTwoTone } from \"@ant-design/icons\";\nimport Joi from \"joi-browser\";\nimport * as Schemas from \"../../Schemas/Mcqs\";\nimport \"../Multiple Choice/MakeMultipleChoice.css\";\nimport classes from './MatchingWords.module.css'\nconst { TextArea } = Input;\n\nconst errorStyleText = {\n  color: \"#eb2f96\",\n};\nexport default class MakeMatchingWords extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n//  here left oprtions are leftoptions\n//  right options are options\n//  correct order of answers(ans) is Answers\n      description: \"\",\n      descriptionError: \"\",\n      optionValue: \"\",\n      optionValueError: \"\",\n      AnsValueError: \"\",\n      addorupdate : \"Add Question\",\n      options: [],\n      leftoptions:[],\n      leftoptionsError:\"\",\n      leftoptionValue:\"\",\n      leftoptionValueError:\"\",\n      Answers:[],\n      optionsError: \"\",\n      AnsValue:\"\",\n      value: [],\n    };\n  }\n  componentDidMount() {\n    if(this.props.description){\n      console.log(this.props.question)\n        this.setState({description: this.props.question.description,\n            options: this.props.question.rightoptions,\n            leftoptions: this.props.question.leftoptions,\n            Answers: this.props.question.ans,\n            addorupdate : \"Update Question\"})\n    }\n  }\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  onChangeOptionField = (val) => {\n    console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ optionValue: value });\n    console.log(this.state.optionValue)\n  };\n  onChangeAnsField = (val) => {\n    // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ AnsValue: value });\n    // console.log(this.state.AnsValue)\n  };\n  onChangeLeftField = (val) => {\n    // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ leftoptionValue: value });\n    // console.log(this.state.AnsValue)\n  };\n\n  onChangeDescription = (e) => {\n    const value = e.target.value;\n    this.setState({ description: value });\n  };\n\n\n  onAddLeftOption = () => {\n    const result = Joi.validate(\n      { option: this.state.leftoptionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ leftoptionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.leftoptions.some(\n        (item) => item.toUpperCase() === this.state.leftoptionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          leftoptions: this.state.leftoptions.concat(this.state.leftoptionValue),\n          leftoptionValueError: \"\",\n        });\n      } else {\n        this.setState({ leftoptionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddOption = () => {\n    const result = Joi.validate(\n      { option: this.state.optionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ optionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.options.some(\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          options: this.state.options.concat(this.state.optionValue),\n          optionValueError: \"\",\n        });\n      } else {\n        this.setState({ optionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddAnswer = () => {\n    const result = Joi.validate(\n      { option: this.state.AnsValue },\n      Schemas.option\n    );\n    if(this.state.options.includes(this.state.AnsValue)){\n      if (result.error) {\n        this.setState({ AnsValueError: result.error.details[0].message });\n      } \n      else {\n        const found = this.state.Answers.some(\n          (item) => item.toUpperCase() === this.state.AnsValue.toUpperCase()\n        );\n        if (!found) {\n          this.setState({\n            Answers: this.state.Answers.concat(this.state.AnsValue),\n            AnsValueError: \"\",\n          });\n        } else {\n          this.setState({ AnsValueError: \"Already exists\" });\n        }\n      }\n    }\n    else{\n      this.setState({ AnsValueError: \"Answer value is not present in Options\" });\n    }\n    \n  };\n\n  onAddorUpdate = (ans)=>{\n    if(this.state.addorupdate === \"Update Question\"){\n      console.log(\"Update function is called\")\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\n      const data={category: \"Matching Words\", description: this.state.description,leftoptions:this.state.leftoptions, rightoptions: this.state.options, ans: ans,id:this.props.question.id};\n      this.props.updateQuestion(data, this.props.question.key)\n    }\n    else{\n      console.log(\"ADD QUESTION function is called\")\n      const data={category: \"Matching Words\", description: this.state.description,leftoptions:this.state.leftoptions, rightoptions: this.state.options, ans: ans};\n      this.props.addQuestion(data)\n    }\n  }\n\n  onDeleteLeft = (option)=>{\n    let leftoptions = this.state.leftoptions;\n    const index = leftoptions.indexOf(option);\n    if (index > -1) {\n      leftoptions.splice(index, 1);\n    }\n    this.setState({ leftoptions: leftoptions})\n\n  }\n  onDelete = (optionsorans,option) => {\n    let options = optionsorans;\n    let ansans = this.state.Answers\n    console.log(options, this.state)\n    const index = options.indexOf(option);\n    const indexans = ansans.indexOf(option);\n    // if(ansans.includes(option)){\n      // console.log(\"indexans  \"+indexans)\n    if (indexans > -1) {\n      // console.log(\"ASDFASDFADFADFDFS\")\n        ansans.splice(indexans, 1);\n    }\n    \n    if (index > -1) {\n      options.splice(index, 1);\n    }\n    // console.log(this.state.value)\n    // console.log(\"aksjhdbfallealleallealle\"+ansans)\n    this.setState({ options: options, Answers:ansans });\n    // console.log(this.state.value)\n  };\n  \n\n  renderAnswers = (optionsorans) => {\n    return optionsorans.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className={classes.DivinCol}>\n          <div className=\"col-5 col-sm-6 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(this.state.options,item)}>\n              {/* {\" \"} */}\n              <span>\n                <DeleteTwoTone  twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  renderOptions = (leftoptions) => {\n    return leftoptions.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className={classes.DivinCol}>\n         <div className=\"col-5 col-sm-6 offset-sm-1\">\n          {/* <div > */}\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDeleteLeft(item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  onAddQuestion = () => {\n    if (this.state.options.length > 0) {\n      // options are present\n      const result = Joi.validate(\n        { description: this.state.description },\n        Schemas.description\n      );\n      if (result.error) {\n        this.setState({\n          descriptionError: result.error.details[0].message,\n          optionsError: \"\",\n        });\n      } else {\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\n        // if (this.state.value[0]) {\n          if (this.state.Answers[0]) {\n          //      ADD to DATABASE\n          // Closing modal\n          console.log(this.state.value)\n          let ans=[];\n          ans = this.state.Answers\n          this.onAddorUpdate(ans)\n          this.props.handleOk();\n        } else {\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\n        }\n\n        \n      }\n    } else {\n      this.setState({ optionsError: \"Please add atleast one option\" });\n    }\n  };\n\n\n//  Add database connection.....\n\n\n\n\n  render() { \n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\n            <TextArea\n              placeholder=\"Enter Your Question\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              rows={4}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\n          </div>\n        </div>\n        <br />\n\n      <div className={classes.BoxOrderDiv}>\n\n      \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Left Option Here\"\n              value={this.state.leftoptionValue}\n              onChange={(val) => {\n                this.onChangeLeftField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddLeftOption}\n            >\n              {\" \"}\n              Add Left\n            </Button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Right Option Here\"\n              value={this.state.optionValue}\n              onChange={(val) => {\n                this.onChangeOptionField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddOption}\n            >\n              {\" \"}\n              Add Right\n            </Button>\n          </div>\n        </div>\n        \n        </div>\n              <br />\n          <div className=\"row\" style={{width:\"600px\", margin:\"0 auto\"}}>\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Answer Here\"\n              value={this.state.AnsValue}\n              onChange={(val) => {\n                this.onChangeAnsField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"105px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddAnswer}\n            >\n              {\" \"}\n              Add Answers\n            </Button>\n          </div>\n        </div>\n        \n\n        <p style={errorStyleText}>{this.state.optionValueError}</p>\n        <br />\n       \n        \n\n\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            \n            <p style={errorStyleText}>{this.state.AnsValueError}</p>\n            {/* <br /> */}\n            <p>** Please Enter the Answers in correct sequence **</p>\n          </div>\n        </div>\n\n        <br />\n        <div className={classes.DivinCol}>\n        <div>\n          <h6>Left Options</h6>\n        {this.renderOptions(this.state.leftoptions)}\n          </div>\n          <div>\n          <h6>Right Options</h6>\n        {this.renderAnswers(this.state.options)}\n          </div>\n        \n        </div>\n        <br />\n        <div className=\"col\" style={{paddingLeft:\"40%\"}}>\n        <h6>Answers in order</h6>\n        {this.renderAnswers(this.state.Answers)}\n        </div>\n        \n        \n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\n            <p style={errorStyleText}> {this.state.optionsError} </p>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\n            <Button block\n              onClick={() => {\n                this.props.handleCancel();\n              }}\n              style={{marginTop: 7}}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"col-12 col-sm-3 \">\n            <Button block\n              onClick={() => {\n                this.onAddQuestion();\n              }}\n              type=\"primary\"\n              style={{marginTop: 7}}\n            >\n              {/* Add Question */}\n              {this.state.addorupdate}\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Input,  Button, Divider, List } from \"antd\";\nimport { DeleteTwoTone } from \"@ant-design/icons\";\nimport Joi from \"joi-browser\";\nimport * as Schemas from \"../../Schemas/Mcqs\";\n// import \"../Multiple Choice/MakeMultipleChoice.css\";\nimport classes from '../MatchingWords/MatchingWords.module.css'\nconst { TextArea } = Input;\n\nconst errorStyleText = {\n  color: \"#eb2f96\",\n};\nexport default class MakeMatchDrag extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n//  here left oprtions are leftoptions\n//  right options are options\n//  correct order of answers(ans) is Answers\n      description: \"\",\n      descriptionError: \"\",\n      optionValue: \"\",\n      optionValueError: \"\",\n      AnsValueError: \"\",\n      addorupdate : \"Add Question\",\n      options: [],\n      leftoptions:[],\n      leftoptionsError:\"\",\n      leftoptionValue:\"\",\n      leftoptionValueError:\"\",\n      Answers:[],\n      optionsError: \"\",\n      AnsValue:\"\",\n      value: [],\n    };\n  }\n  componentDidMount() {\n    if(this.props.description){\n      // console.log(this.props.question)\n        this.setState({description: this.props.question.description,\n            options: this.props.question.rightoptions,\n            leftoptions: this.props.question.leftoptions,\n            Answers: this.props.question.ans,\n            addorupdate : \"Update Question\"})\n    }\n  }\n  onFinish = (values) => {\n    // console.log(\"Success:\", values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    // console.log(\"Failed:\", errorInfo);\n  };\n\n  onChangeOptionField = (val) => {\n    // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ optionValue: value });\n    // console.log(this.state.optionValue)\n  };\n  onChangeAnsField = (val) => {\n    // // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ AnsValue: value });\n    // // console.log(this.state.AnsValue)\n  };\n  onChangeLeftField = (val) => {\n    // // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ leftoptionValue: value });\n    // // console.log(this.state.AnsValue)\n  };\n\n  onChangeDescription = (e) => {\n    const value = e.target.value;\n    this.setState({ description: value });\n  };\n\n\n  onAddLeftOption = () => {\n    const result = Joi.validate(\n      { option: this.state.leftoptionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ leftoptionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.leftoptions.some(\n        (item) => item.toUpperCase() === this.state.leftoptionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          leftoptions: this.state.leftoptions.concat(this.state.leftoptionValue),\n          leftoptionValueError: \"\",\n        });\n      } else {\n        this.setState({ leftoptionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddOption = () => {\n    const result = Joi.validate(\n      { option: this.state.optionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ optionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.options.some(\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          options: this.state.options.concat(this.state.optionValue),\n          optionValueError: \"\",\n        });\n      } else {\n        this.setState({ optionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddAnswer = () => {\n    const result = Joi.validate(\n      { option: this.state.AnsValue },\n      Schemas.option\n    );\n    if(this.state.options.includes(this.state.AnsValue)){\n      if (result.error) {\n        this.setState({ AnsValueError: result.error.details[0].message });\n      } \n      else {\n        const found = this.state.Answers.some(\n          (item) => item.toUpperCase() === this.state.AnsValue.toUpperCase()\n        );\n        if (!found) {\n          this.setState({\n            Answers: this.state.Answers.concat(this.state.AnsValue),\n            AnsValueError: \"\",\n          });\n        } else {\n          this.setState({ AnsValueError: \"Already exists\" });\n        }\n      }\n    }\n    else{\n      this.setState({ AnsValueError: \"Answer value is not present in Options\" });\n    }\n    \n  };\n\n  onAddorUpdate = (ans)=>{\n    if(this.state.addorupdate === \"Update Question\"){\n      // console.log(\"Update function is called\")\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\n      const data={category: \"Match Drag\", description: this.state.description,leftoptions:this.state.leftoptions, rightoptions: this.state.options, ans: ans,id:this.props.question.id};\n      this.props.updateQuestion(data, this.props.question.key)\n    }\n    else{\n      // console.log(\"ADD QUESTION function is called\")\n      const data={category: \"Match Drag\", description: this.state.description,leftoptions:this.state.leftoptions, rightoptions: this.state.options, ans: ans};\n      this.props.addQuestion(data)\n    }\n  }\n\n  onDeleteLeft = (option)=>{\n    let leftoptions = this.state.leftoptions;\n    const index = leftoptions.indexOf(option);\n    if (index > -1) {\n      leftoptions.splice(index, 1);\n    }\n    this.setState({ leftoptions: leftoptions})\n\n  }\n  onDelete = (optionsorans,option) => {\n    let options = optionsorans;\n    let ansans = this.state.Answers\n    // console.log(options, this.state)\n    const index = options.indexOf(option);\n    const indexans = ansans.indexOf(option);\n    // if(ansans.includes(option)){\n      // // console.log(\"indexans  \"+indexans)\n    if (indexans > -1) {\n      // // console.log(\"ASDFASDFADFADFDFS\")\n        ansans.splice(indexans, 1);\n    }\n    \n    if (index > -1) {\n      options.splice(index, 1);\n    }\n    // // console.log(this.state.value)\n    // // console.log(\"aksjhdbfallealleallealle\"+ansans)\n    this.setState({ options: options, Answers:ansans });\n    // // console.log(this.state.value)\n  };\n  \n\n  renderAnswers = (optionsorans) => {\n    return optionsorans.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className={classes.DivinCol}>\n          <div className=\"col-5 col-sm-6 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(this.state.options,item)}>\n              {/* {\" \"} */}\n              <span>\n                <DeleteTwoTone  twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  renderOptions = (leftoptions) => {\n    return leftoptions.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className={classes.DivinCol}>\n         <div className=\"col-5 col-sm-6 offset-sm-1\">\n          {/* <div > */}\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDeleteLeft(item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  onAddQuestion = () => {\n    if (this.state.options.length > 0) {\n      // options are present\n      const result = Joi.validate(\n        { description: this.state.description },\n        Schemas.description\n      );\n      if (result.error) {\n        this.setState({\n          descriptionError: result.error.details[0].message,\n          optionsError: \"\",\n        });\n      } else {\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\n        // if (this.state.value[0]) {\n          if (this.state.Answers[0]) {\n          //      ADD to DATABASE\n          // Closing modal\n          // console.log(this.state.value)\n          let ans=[];\n          ans = this.state.Answers\n          this.onAddorUpdate(ans)\n          this.props.handleOk();\n        } else {\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\n        }\n\n        \n      }\n    } else {\n      this.setState({ optionsError: \"Please add atleast one option\" });\n    }\n  };\n\n\n//  Add database connection.....\n\n\n\n\n  render() { \n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\n            <TextArea\n              placeholder=\"Enter Your Question\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              rows={4}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\n          </div>\n        </div>\n        <br />\n\n      <div className={classes.BoxOrderDiv}>\n\n      \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Left Option Here\"\n              value={this.state.leftoptionValue}\n              onChange={(val) => {\n                this.onChangeLeftField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddLeftOption}\n            >\n              {\" \"}\n              Add Left\n            </Button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Right Option Here\"\n              value={this.state.optionValue}\n              onChange={(val) => {\n                this.onChangeOptionField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddOption}\n            >\n              {\" \"}\n              Add Right\n            </Button>\n          </div>\n        </div>\n        \n        </div>\n              <br />\n          <div className=\"row\" style={{width:\"600px\", margin:\"0 auto\"}}>\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Answer Here\"\n              value={this.state.AnsValue}\n              onChange={(val) => {\n                this.onChangeAnsField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"105px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddAnswer}\n            >\n              {\" \"}\n              Add Answers\n            </Button>\n          </div>\n        </div>\n        \n\n        <p style={errorStyleText}>{this.state.optionValueError}</p>\n        <br />\n       \n        \n\n\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            \n            <p style={errorStyleText}>{this.state.AnsValueError}</p>\n            {/* <br /> */}\n            <p>** Please Enter the Answers in correct sequence **</p>\n          </div>\n        </div>\n\n        <br />\n        <div className={classes.DivinCol}>\n        <div>\n          <h6>Left Options</h6>\n        {this.renderOptions(this.state.leftoptions)}\n          </div>\n          <div>\n          <h6>Right Options</h6>\n        {this.renderAnswers(this.state.options)}\n          </div>\n        \n        </div>\n        <br />\n        <div className=\"col\" style={{paddingLeft:\"40%\"}}>\n        <h6>Answers in order</h6>\n        {this.renderAnswers(this.state.Answers)}\n        </div>\n        \n        \n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\n            <p style={errorStyleText}> {this.state.optionsError} </p>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\n            <Button block\n              onClick={() => {\n                this.props.handleCancel();\n              }}\n              style={{marginTop: 7}}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"col-12 col-sm-3 \">\n            <Button block\n              onClick={() => {\n                this.onAddQuestion();\n              }}\n              type=\"primary\"\n              style={{marginTop: 7}}\n            >\n              {/* Add Question */}\n              {this.state.addorupdate}\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Input,  Button, Divider, List } from \"antd\";\nimport { DeleteTwoTone } from \"@ant-design/icons\";\nimport Joi from \"joi-browser\";\nimport * as Schemas from \"../../Schemas/Mcqs\";\n// import \"../Multiple Choice/MakeMultipleChoice.css\";\nimport classes from '../MatchingWords/MatchingWords.module.css'\nconst { TextArea } = Input;\n\nconst errorStyleText = {\n  color: \"#eb2f96\",\n};\nexport default class MakeMatchDragImg extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n//  here left oprtions are leftoptions\n//  right options are options\n//  correct order of answers(ans) is Answers\n      description: \"\",\n      descriptionError: \"\",\n      optionValue: \"\",\n      optionValueError: \"\",\n      AnsValueError: \"\",\n      addorupdate : \"Add Question\",\n      options: [],\n      leftoptions:[],\n      leftoptionsError:\"\",\n      leftoptionValue:\"\",\n      leftoptionValueError:\"\",\n      Answers:[],\n      optionsError: \"\",\n      AnsValue:\"\",\n      value: [],\n    };\n  }\n  componentDidMount() {\n    if(this.props.description){\n      // console.log(this.props.question)\n        this.setState({description: this.props.question.description,\n            options: this.props.question.rightoptions,\n            leftoptions: this.props.question.leftoptions,\n            Answers: this.props.question.ans,\n            addorupdate : \"Update Question\"})\n    }\n  }\n  onFinish = (values) => {\n    // console.log(\"Success:\", values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    // console.log(\"Failed:\", errorInfo);\n  };\n\n  onChangeOptionField = (val) => {\n    // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ optionValue: value });\n    // console.log(this.state.optionValue)\n  };\n  onChangeAnsField = (val) => {\n    // // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ AnsValue: value });\n    // // console.log(this.state.AnsValue)\n  };\n  onChangeLeftField = (val) => {\n    // // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ leftoptionValue: value });\n    // // console.log(this.state.AnsValue)\n  };\n\n  onChangeDescription = (e) => {\n    const value = e.target.value;\n    this.setState({ description: value });\n  };\n\n\n  onAddLeftOption = () => {\n    const result = Joi.validate(\n      { option: this.state.leftoptionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ leftoptionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.leftoptions.some(\n        (item) => item.toUpperCase() === this.state.leftoptionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          leftoptions: this.state.leftoptions.concat(this.state.leftoptionValue),\n          leftoptionValueError: \"\",\n        });\n      } else {\n        this.setState({ leftoptionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddOption = () => {\n    const result = Joi.validate(\n      { option: this.state.optionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ optionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.options.some(\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          options: this.state.options.concat(this.state.optionValue),\n          optionValueError: \"\",\n        });\n      } else {\n        this.setState({ optionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddAnswer = () => {\n    const result = Joi.validate(\n      { option: this.state.AnsValue },\n      Schemas.option\n    );\n    if(this.state.options.includes(this.state.AnsValue)){\n      if (result.error) {\n        this.setState({ AnsValueError: result.error.details[0].message });\n      } \n      else {\n        const found = this.state.Answers.some(\n          (item) => item.toUpperCase() === this.state.AnsValue.toUpperCase()\n        );\n        if (!found) {\n          this.setState({\n            Answers: this.state.Answers.concat(this.state.AnsValue),\n            AnsValueError: \"\",\n          });\n        } else {\n          this.setState({ AnsValueError: \"Already exists\" });\n        }\n      }\n    }\n    else{\n      this.setState({ AnsValueError: \"Answer value is not present in Options\" });\n    }\n    \n  };\n\n  onAddorUpdate = (ans)=>{\n    if(this.state.addorupdate === \"Update Question\"){\n      // console.log(\"Update function is called\")\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\n      const data={category: \"Match Drag Image\", description: this.state.description,leftoptions:this.state.options, rightoptions: ans, ans: ans,\n      leftoptionsurl:this.state.leftoptions, id:this.props.question.id};\n      this.props.updateQuestion(data, this.props.question.key)\n    }\n    else{\n      // console.log(\"ADD QUESTION function is called\")\n      const data={category: \"Match Drag Image\", description: this.state.description,leftoptions:this.state.options, leftoptionsurl:this.state.leftoptions, rightoptions: ans, ans: ans};\n      this.props.addQuestion(data)\n    }\n  }\n\n  onDeleteLeft = (option)=>{\n    let leftoptions = this.state.leftoptions;\n    const index = leftoptions.indexOf(option);\n    if (index > -1) {\n      leftoptions.splice(index, 1);\n    }\n    this.setState({ leftoptions: leftoptions})\n\n  }\n  onDelete = (optionsorans,option) => {\n    let options = optionsorans;\n    let ansans = this.state.Answers\n    // console.log(options, this.state)\n    const index = options.indexOf(option);\n    const indexans = ansans.indexOf(option);\n    // if(ansans.includes(option)){\n      // // console.log(\"indexans  \"+indexans)\n    if (indexans > -1) {\n      // // console.log(\"ASDFASDFADFADFDFS\")\n        ansans.splice(indexans, 1);\n    }\n    \n    if (index > -1) {\n      options.splice(index, 1);\n    }\n    // // console.log(this.state.value)\n    // // console.log(\"aksjhdbfallealleallealle\"+ansans)\n    this.setState({ options: options, Answers:ansans });\n    // // console.log(this.state.value)\n  };\n  \n\n  renderAnswers = (optionsorans) => {\n    return optionsorans.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className={classes.DivinCol}>\n          <div className=\"col-5 col-sm-6 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(this.state.options,item)}>\n              {/* {\" \"} */}\n              <span>\n                <DeleteTwoTone  twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  renderOptions = (leftoptions) => {\n    return leftoptions.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className={classes.DivinCol}>\n         <div className=\"col-5 col-sm-6 offset-sm-1\">\n          {/* <div > */}\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDeleteLeft(item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  onAddQuestion = () => {\n    if (this.state.options.length > 0) {\n      // options are present\n      const result = Joi.validate(\n        { description: this.state.description },\n        Schemas.description\n      );\n      if (result.error) {\n        this.setState({\n          descriptionError: result.error.details[0].message,\n          optionsError: \"\",\n        });\n      } else {\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\n        // if (this.state.value[0]) {\n          if (this.state.Answers[0]) {\n          //      ADD to DATABASE\n          // Closing modal\n          // console.log(this.state.value)\n          let ans=[];\n          ans = this.state.Answers\n          this.onAddorUpdate(ans)\n          this.props.handleOk();\n        } else {\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\n        }\n\n        \n      }\n    } else {\n      this.setState({ optionsError: \"Please add atleast one option\" });\n    }\n  };\n\n\n//  Add database connection.....\n\n\n\n\n  render() { \n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\n            <TextArea\n              placeholder=\"Enter Your Question\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              rows={4}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\n          </div>\n        </div>\n        <br />\n\n      <div className={classes.BoxOrderDiv}>\n\n      \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Image url here\"\n              value={this.state.leftoptionValue}\n              onChange={(val) => {\n                this.onChangeLeftField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddLeftOption}\n            >\n              {\" \"}\n              Add image\n            </Button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Image Name in order\"\n              value={this.state.optionValue}\n              onChange={(val) => {\n                this.onChangeOptionField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddOption}\n            >\n              {\" \"}\n              Image Name\n            </Button>\n          </div>\n        </div>\n        \n        </div>\n              <br />\n          <div className=\"row\" style={{width:\"600px\", margin:\"0 auto\"}}>\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Swapped Options list\"\n              value={this.state.AnsValue}\n              onChange={(val) => {\n                this.onChangeAnsField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"105px\" }}\n              // block\n              type=\"primary\"\n              success\n              onClick={this.onAddAnswer}\n            >\n              {\" \"}\n              Add Answers\n            </Button>\n          </div>\n        </div>\n        \n\n        <p style={errorStyleText}>{this.state.optionValueError}</p>\n        <br />\n       \n        \n\n\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            \n            <p style={errorStyleText}>{this.state.AnsValueError}</p>\n            {/* <br /> */}\n            <p>** Please Enter the Answers in correct sequence **</p>\n          </div>\n        </div>\n\n        <br />\n        <div className={classes.DivinCol}>\n        <div>\n          <h6>URL's of the Images </h6>\n        {this.renderOptions(this.state.leftoptions)}\n          </div>\n          <div>\n          <h6>Image names with respect to URL's</h6>\n        {this.renderAnswers(this.state.options)}\n          </div>\n        \n        </div>\n        <br />\n        <div className=\"col\" style={{paddingLeft:\"40%\"}}>\n        <h6>Swapped options List</h6>\n        {this.renderAnswers(this.state.Answers)}\n        </div>\n        \n        \n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\n            <p style={errorStyleText}> {this.state.optionsError} </p>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\n            <Button block\n              onClick={() => {\n                this.props.handleCancel();\n              }}\n              style={{marginTop: 7}}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"col-12 col-sm-3 \">\n            <Button block\n              onClick={() => {\n                this.onAddQuestion();\n              }}\n              type=\"primary\"\n              style={{marginTop: 7}}\n            >\n              {/* Add Question */}\n              {this.state.addorupdate}\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}","import React, { Component } from \"react\";\r\nimport { Input,  Button, Radio, Divider } from \"antd\";\r\nimport { DeleteTwoTone } from \"@ant-design/icons\";\r\nimport Joi from \"joi-browser\";\r\nimport * as Schemas from \"../../Schemas/Mcqs\";\r\nimport \"./MakeAudioMultipleChoice.css\";\r\nconst { TextArea } = Input;\r\n\r\nconst errorStyleText = {\r\n  color: \"#eb2f96\",\r\n};\r\nexport default class MakeAudioMultipleChoice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\",\r\n      descriptionError: \"\",\r\n      optionValue: \"\",\r\n      optionValueError: \"\",\r\n      options: [],\r\n      optionsError: \"\",\r\n      value: 0,\r\n      audiourl:\"\",\r\n      addorupdate: \"Add Question\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if(this.props.description){\r\n      this.setState({description: this.props.question.description,\r\n          options: this.props.question.options,\r\n          value: this.props.question.ans[0],\r\n          addorupdate:\"Update Question\"},\r\n          )\r\n  }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    // console.log(\"radio checked\", e.target.value);\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  onChangeOptionField = (val) => {\r\n    //console.log(val.target.value);\r\n    const value = val.target.value;\r\n    this.setState({ optionValue: value });\r\n\r\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\r\n    // if(result.error)\r\n    //  console.log(result.error.details[0].message);\r\n\r\n    //const errors = {};\r\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\r\n    // console.log(\"errors: \", errors);\r\n  };\r\n\r\n  onChangeDescription = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ description: value });\r\n  };\r\n  onAddOption = () => {\r\n    const result = Joi.validate(\r\n      { option: this.state.optionValue },\r\n      Schemas.option\r\n    );\r\n    if (result.error) {\r\n      this.setState({ optionValueError: result.error.details[0].message });\r\n    } else {\r\n      const found = this.state.options.some(\r\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\r\n      );\r\n      if (!found) {\r\n        this.setState({\r\n          options: this.state.options.concat(this.state.optionValue),\r\n          optionValueError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ optionValueError: \"Already exists\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  onAddorUpdate = (ans)=>{\r\n    if(this.state.addorupdate === \"Update Question\"){\r\n      console.log(\"Update function is called\")\r\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n      const data={category: \"Audio Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans, audiourl:this.state.audiourl,id:this.props.question.id};\r\n      this.props.updateQuestion(data, this.props.question.key)\r\n    }\r\n    else{\r\n      console.log(\"ADD QUESTION function is called\")\r\n      const data={category: \"Audio Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans, audiourl:this.state.audiourl};\r\n      this.props.addQuestion(data)\r\n    }\r\n  }\r\n\r\n  onDelete = (option) => {\r\n    let options = this.state.options;\r\n    const index = options.indexOf(option);\r\n    if (index > -1) {\r\n      options.splice(index, 1);\r\n    }\r\n    this.setState({ options: options });\r\n  };\r\n\r\n  renderOptions = () => {\r\n   \r\n    const radioStyle = {\r\n      display: \"inline-block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n    const { value } = this.state;\r\n    return this.state.options.map((item) => {\r\n      return (\r\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\r\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\r\n            <Radio.Group onChange={this.onChange} value={value}>\r\n              <Radio style={radioStyle} value={item}>\r\n                {item}\r\n              </Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <div className=\"col-2 col-sm-1 \">\r\n            <Button onClick={() => this.onDelete(item)}>\r\n              {\" \"}\r\n              <span>\r\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n          {/* <div className=\"col-2 col-sm-1 \">\r\n       \r\n         <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\r\n     \r\n        </div> */}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  onChangeURLField = (e) =>{\r\n    const value = e.target.value;\r\n    this.setState({ audiourl: value });\r\n  }\r\n  onAddQuestion = () => {\r\n    if (this.state.options.length > 0) {\r\n      // options are present\r\n      const result = Joi.validate(\r\n        { description: this.state.description },\r\n        Schemas.description\r\n      );\r\n      if (result.error) {\r\n        this.setState({\r\n          descriptionError: result.error.details[0].message,\r\n          optionsError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n        if (this.state.value) {\r\n          //      ADD to DATABASE\r\n          // Closing modal\r\n          const ans=[];\r\n          ans[0]=this.state.value;\r\n          // const data={category: \"Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans};\r\n          // this.props.addQuestion(data);\r\n          this.onAddorUpdate(ans)\r\n          this.props.handleOk();\r\n        } else {\r\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\r\n        }\r\n\r\n        \r\n      }\r\n    } else {\r\n      // options error : no option present\r\n      this.setState({ optionsError: \"Please add atleast one option\" });\r\n    }\r\n  };\r\n  render() { \r\n    // const radioStyle = {\r\n    //   display: \"inline-block\",\r\n    //   height: \"30px\",\r\n    //   lineHeight: \"30px\",\r\n    // };\r\n    // const { value } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Audio URL here\"\r\n              value={this.state.audiourl}\r\n              onChange={(val) => {\r\n                this.onChangeURLField(val);\r\n              }}\r\n            />\r\n          </div>\r\n          {/* <div className=\"col-12 col-sm-3\">\r\n            <Button\r\n              className=\"add-option\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={this.onAddAudiourl}\r\n            >\r\n              {\" \"}\r\n              Add Audio URL\r\n            </Button>\r\n          </div> */}\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\r\n            <Input\r\n              placeholder=\"Enter Option Here\"\r\n              value={this.state.optionValue}\r\n              onChange={(val) => {\r\n                this.onChangeOptionField(val);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-3\">\r\n            <Button\r\n              className=\"add-option\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={this.onAddOption}\r\n            >\r\n              {\" \"}\r\n              Add Option\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.optionValueError}</p>\r\n            <br />\r\n            <p>** Please Select Correct Option **</p>\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        {this.renderOptions()}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\r\n            <p style={errorStyleText}> {this.state.optionsError} </p>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                this.onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              {/* Add Question */}\r\n              {this.state.addorupdate}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Input,  Button, Divider, List } from \"antd\";\nimport { DeleteTwoTone } from \"@ant-design/icons\";\nimport Joi from \"joi-browser\";\nimport * as Schemas from \"../../Schemas/Mcqs\";\nimport \"../Multiple Choice/MakeMultipleChoice.css\";\nimport classes from './SequenceInOrder.module.css'\nconst { TextArea } = Input;\n\nconst errorStyleText = {\n  color: \"#eb2f96\",\n};\nexport default class AudioMakeSequenceInOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      descriptionError: \"\",\n      optionValue: \"\",\n      optionValueError: \"\",\n      AnsValueError: \"\",\n      addorupdate : \"Add Question\",\n      options: [],\n      Answers:[],\n      optionsError: \"\",\n      AnsValue:\"\",\n      audiourl:\"\",\n      value: [],\n    };\n  }\n  componentDidMount() {\n    if(this.props.description){\n      console.log(this.props.question)\n        this.setState({description: this.props.question.description,\n            options: this.props.question.options,\n            Answers: this.props.question.ans,\n            addorupdate : \"Update Question\"})\n    }\n  }\n\n  // onChangeC = (checkedValues) => {\n  //   console.log('checked = ', checkedValues.target.value);\n  //   console.log(\"valuee\", this.state.value);\n  //   let uncheck = checkedValues.target.value\n  //   let myvalues = this.state.value\n  //   if(myvalues.includes(uncheck)){\n  //       const index = myvalues.indexOf(uncheck);\n  //       if (index > -1) {\n  //       myvalues.splice(index, 1);\n  //       }\n  //   this.setState({ value: myvalues });\n  // }\n  //   else{\n  //       this.setState({\n  //           value: this.state.value.concat(uncheck)\n  //         });\n  //   }\n    \n  // }\n//   onChange = (e) => {\n//     console.log(\"checked\", this.state.value);\n//     this.setState({\n//         value: this.state.value.concat(e.target.value)\n//       });\n    \n//   };\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  onChangeOptionField = (val) => {\n    console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ optionValue: value });\n    console.log(this.state.optionValue)\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\n    // if(result.error)\n    //  console.log(result.error.details[0].message);\n\n    //const errors = {};\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\n    // console.log(\"errors: \", errors);\n  };\n  onChangeAnsField = (val) => {\n    // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ AnsValue: value });\n    // console.log(this.state.AnsValue)\n  };\n\n  onChangeDescription = (e) => {\n    const value = e.target.value;\n    this.setState({ description: value });\n  };\n  onAddOption = () => {\n    const result = Joi.validate(\n      { option: this.state.optionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ optionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.options.some(\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          options: this.state.options.concat(this.state.optionValue),\n          optionValueError: \"\",\n        });\n      } else {\n        this.setState({ optionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddAnswer = () => {\n    const result = Joi.validate(\n      { option: this.state.AnsValue },\n      Schemas.option\n    );\n    if(this.state.options.includes(this.state.AnsValue)){\n      if (result.error) {\n        this.setState({ AnsValueError: result.error.details[0].message });\n      } \n      else {\n        const found = this.state.Answers.some(\n          (item) => item.toUpperCase() === this.state.AnsValue.toUpperCase()\n        );\n        if (!found) {\n          this.setState({\n            Answers: this.state.Answers.concat(this.state.AnsValue),\n            AnsValueError: \"\",\n          });\n        } else {\n          this.setState({ AnsValueError: \"Already exists\" });\n        }\n      }\n    }\n    else{\n      this.setState({ AnsValueError: \"Answer value is not present in Options\" });\n    }\n    \n  };\n\n  onAddorUpdate = (ans)=>{\n    if(this.state.addorupdate === \"Update Question\"){\n      console.log(\"Update function is called\")\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\n      const data={category: \"Audio Sequence Order\", description: this.state.description, audiourl:this.state.audiourl, options: this.state.options, ans: ans,id:this.props.question.id};\n      this.props.updateQuestion(data, this.props.question.key)\n    }\n    else{\n      console.log(\"ADD QUESTION function is called\")\n      const data={category: \"Audio Sequence Order\", description: this.state.description, audiourl:this.state.audiourl, options: this.state.options, ans: ans};\n      this.props.addQuestion(data)\n    }\n  }\n\n\n  onDelete = (optionsorans,option) => {\n    let options = optionsorans;\n    let ansans = this.state.Answers\n    console.log(options, this.state)\n    const index = options.indexOf(option);\n    const indexans = ansans.indexOf(option);\n    // if(ansans.includes(option)){\n      // console.log(\"indexans  \"+indexans)\n    if (indexans > -1) {\n      // console.log(\"ASDFASDFADFADFDFS\")\n        ansans.splice(indexans, 1);\n    }\n    \n    if (index > -1) {\n      options.splice(index, 1);\n    }\n    // console.log(this.state.value)\n    // console.log(\"aksjhdbfallealleallealle\"+ansans)\n    this.setState({ options: options, Answers:ansans });\n    // console.log(this.state.value)\n  };\n  \n\n  renderOptions = (optionsorans) => {\n    return optionsorans.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                    title=\"HEYY\"\n                    description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(optionsorans,item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  renderAnswers = () => {\n    return this.state.Answers.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(this.state.Answers,item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  onChangeURLField = (e) =>{\n    const value = e.target.value;\n    this.setState({ audiourl: value });\n  }\n  onAddQuestion = () => {\n    if (this.state.options.length > 0) {\n      // options are present\n      const result = Joi.validate(\n        { description: this.state.description },\n        Schemas.description\n      );\n      if (result.error) {\n        this.setState({\n          descriptionError: result.error.details[0].message,\n          optionsError: \"\",\n        });\n      } else {\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\n        // if (this.state.value[0]) {\n          if (this.state.Answers[0]) {\n          //      ADD to DATABASE\n          // Closing modal\n          console.log(this.state.value)\n          let ans=[];\n          ans = this.state.Answers\n          this.onAddorUpdate(ans)\n          this.props.handleOk();\n        } else {\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\n        }\n\n        \n      }\n    } else {\n      this.setState({ optionsError: \"Please add atleast one option\" });\n    }\n  };\n  render() { \n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <TextArea\n              placeholder=\"Enter Your Question\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              rows={4}\n            />\n            <br />\n            <br />\n            <TextArea\n            placeholder=\"Enter Audio URL here\"\n            value={this.state.audiourl}\n        onChange={(val) => {\n          this.onChangeURLField(val);\n        }}\n      />\n          </div>\n\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\n          </div>\n        </div>       \n        <br />\n        <br />\n        <div className={classes.BoxOrderDiv}>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n          {/* <div> */}\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Option Here\"\n              value={this.state.optionValue}\n              onChange={(val) => {\n                this.onChangeOptionField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              block\n              type=\"primary\"\n              success\n              onClick={this.onAddOption}\n            >\n              {\" \"}\n              Add Option\n            </Button>\n          </div>\n        </div>\n        <br />\n        <p style={errorStyleText}>{this.state.optionValueError}</p>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n              style ={{width:\"250px\"}}\n              placeholder=\"Enter Answer Here\"\n              value={this.state.AnsValue}\n              onChange={(val) => {\n                this.onChangeAnsField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"105px\" }}\n              block\n              type=\"primary\"\n              success\n              onClick={this.onAddAnswer}\n            >\n              {\" \"}\n              Add Answers\n            </Button>\n          </div>\n        </div>\n        </div>\n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            \n            <p style={errorStyleText}>{this.state.AnsValueError}</p>\n            <br />\n            <p>** Please Enter the Answers in correct sequence **</p>\n          </div>\n        </div>\n\n        <br />\n        <div className={classes.DivinCol}>\n          <div>\n          <h2>Options</h2>\n        {this.renderOptions(this.state.options)}\n          </div>\n        <div>\n        <h2>Answers in order</h2>\n        {this.renderAnswers()}\n        </div>\n        \n        </div>\n        \n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\n            <p style={errorStyleText}> {this.state.optionsError} </p>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\n            <Button block\n              onClick={() => {\n                this.props.handleCancel();\n              }}\n              style={{marginTop: 7}}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"col-12 col-sm-3 \">\n            <Button block\n              onClick={() => {\n                this.onAddQuestion();\n              }}\n              type=\"primary\"\n              style={{marginTop: 7}}\n            >\n              {/* Add Question */}\n              {this.state.addorupdate}\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}","import React, { Component } from \"react\";\r\nimport { Input,  Button, Radio, Divider } from \"antd\";\r\nimport { DeleteTwoTone } from \"@ant-design/icons\";\r\nimport Joi from \"joi-browser\";\r\nimport * as Schemas from \"../../Schemas/Mcqs\";\r\nimport \"./MakeAudioMultipleChoice.css\";\r\nconst { TextArea } = Input;\r\n\r\nconst errorStyleText = {\r\n  color: \"#eb2f96\",\r\n};\r\nexport default class MakeVideosMultipleChoice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\",\r\n      descriptionError: \"\",\r\n      optionValue: \"\",\r\n      optionValueError: \"\",\r\n      options: [],\r\n      optionsError: \"\",\r\n      value: 0,\r\n      videourl:\"\",\r\n      addorupdate: \"Add Question\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if(this.props.description){\r\n      this.setState({description: this.props.question.description,\r\n          options: this.props.question.options,\r\n          value: this.props.question.ans[0],\r\n          addorupdate:\"Update Question\"},\r\n          )\r\n  }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    // console.log(\"radio checked\", e.target.value);\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  onChangeOptionField = (val) => {\r\n    //console.log(val.target.value);\r\n    const value = val.target.value;\r\n    this.setState({ optionValue: value });\r\n\r\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\r\n    // if(result.error)\r\n    //  console.log(result.error.details[0].message);\r\n\r\n    //const errors = {};\r\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\r\n    // console.log(\"errors: \", errors);\r\n  };\r\n\r\n  onChangeDescription = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ description: value });\r\n  };\r\n  onAddOption = () => {\r\n    const result = Joi.validate(\r\n      { option: this.state.optionValue },\r\n      Schemas.option\r\n    );\r\n    if (result.error) {\r\n      this.setState({ optionValueError: result.error.details[0].message });\r\n    } else {\r\n      const found = this.state.options.some(\r\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\r\n      );\r\n      if (!found) {\r\n        this.setState({\r\n          options: this.state.options.concat(this.state.optionValue),\r\n          optionValueError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ optionValueError: \"Already exists\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  onAddorUpdate = (ans)=>{\r\n    if(this.state.addorupdate === \"Update Question\"){\r\n      console.log(\"Update function is called\")\r\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n      const data={category: \"Video Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans, videourl:this.state.videourl,id:this.props.question.id};\r\n      this.props.updateQuestion(data, this.props.question.key)\r\n    }\r\n    else{\r\n      console.log(\"ADD QUESTION function is called\")\r\n      const data={category: \"Video Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans, videourl:this.state.videourl};\r\n      this.props.addQuestion(data)\r\n    }\r\n  }\r\n\r\n  onDelete = (option) => {\r\n    let options = this.state.options;\r\n    const index = options.indexOf(option);\r\n    if (index > -1) {\r\n      options.splice(index, 1);\r\n    }\r\n    this.setState({ options: options });\r\n  };\r\n\r\n  renderOptions = () => {\r\n   \r\n    const radioStyle = {\r\n      display: \"inline-block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n    const { value } = this.state;\r\n    return this.state.options.map((item) => {\r\n      return (\r\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\r\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\r\n            <Radio.Group onChange={this.onChange} value={value}>\r\n              <Radio style={radioStyle} value={item}>\r\n                {item}\r\n              </Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <div className=\"col-2 col-sm-1 \">\r\n            <Button onClick={() => this.onDelete(item)}>\r\n              {\" \"}\r\n              <span>\r\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n          {/* <div className=\"col-2 col-sm-1 \">\r\n       \r\n         <Button> <span><EditTwoTone twoToneColor=\"#52c41a\" /></span></Button>\r\n     \r\n        </div> */}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  onChangeURLField = (e) =>{\r\n    const value = e.target.value;\r\n    this.setState({ videourl: value });\r\n  }\r\n  onAddQuestion = () => {\r\n    if (this.state.options.length > 0) {\r\n      // options are present\r\n      const result = Joi.validate(\r\n        { description: this.state.description },\r\n        Schemas.description\r\n      );\r\n      if (result.error) {\r\n        this.setState({\r\n          descriptionError: result.error.details[0].message,\r\n          optionsError: \"\",\r\n        });\r\n      } else {\r\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\r\n        if (this.state.value) {\r\n          //      ADD to DATABASE\r\n          // Closing modal\r\n          const ans=[];\r\n          ans[0]=this.state.value;\r\n          // const data={category: \"Multiple Choice\", description: this.state.description, options: this.state.options, ans: ans};\r\n          // this.props.addQuestion(data);\r\n          this.onAddorUpdate(ans)\r\n          this.props.handleOk();\r\n        } else {\r\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\r\n        }\r\n\r\n        \r\n      }\r\n    } else {\r\n      // options error : no option present\r\n      this.setState({ optionsError: \"Please add atleast one option\" });\r\n    }\r\n  };\r\n  render() { \r\n    // const radioStyle = {\r\n    //   display: \"inline-block\",\r\n    //   height: \"30px\",\r\n    //   lineHeight: \"30px\",\r\n    // };\r\n    // const { value } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Video URL here\"\r\n              value={this.state.videourl}\r\n              onChange={(val) => {\r\n                this.onChangeURLField(val);\r\n              }}\r\n            />\r\n          </div>\r\n          {/* <div className=\"col-12 col-sm-3\">\r\n            <Button\r\n              className=\"add-option\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={this.onAddAudiourl}\r\n            >\r\n              {\" \"}\r\n              Add Audio URL\r\n            </Button>\r\n          </div> */}\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-5 offset-sm-1\">\r\n            <Input\r\n              placeholder=\"Enter Option Here\"\r\n              value={this.state.optionValue}\r\n              onChange={(val) => {\r\n                this.onChangeOptionField(val);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-3\">\r\n            <Button\r\n              className=\"add-option\"\r\n              style={{ marginLeft: 0 }}\r\n              block\r\n              type=\"primary\"\r\n              success\r\n              onClick={this.onAddOption}\r\n            >\r\n              {\" \"}\r\n              Add Option\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={errorStyleText}>{this.state.optionValueError}</p>\r\n            <br />\r\n            <p>** Please Select Correct Option **</p>\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        {this.renderOptions()}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\r\n            <p style={errorStyleText}> {this.state.optionsError} </p>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                this.props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                this.onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n              {/* Add Question */}\r\n              {this.state.addorupdate}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Input,  Button, Divider, List } from \"antd\";\nimport { DeleteTwoTone } from \"@ant-design/icons\";\nimport Joi from \"joi-browser\";\nimport * as Schemas from \"../../Schemas/Mcqs\";\nimport \"../Multiple Choice/MakeMultipleChoice.css\";\nimport classes from './SequenceInOrder.module.css'\nconst { TextArea } = Input;\n\nconst errorStyleText = {\n  color: \"#eb2f96\",\n};\nexport default class VideoMakeSequenceInOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      descriptionError: \"\",\n      optionValue: \"\",\n      optionValueError: \"\",\n      AnsValueError: \"\",\n      addorupdate : \"Add Question\",\n      options: [],\n      Answers:[],\n      optionsError: \"\",\n      AnsValue:\"\",\n      videourl:\"\",\n      value: [],\n    };\n  }\n  componentDidMount() {\n    if(this.props.description){\n      console.log(this.props.question)\n        this.setState({description: this.props.question.description,\n            options: this.props.question.options,\n            Answers: this.props.question.ans,\n            addorupdate : \"Update Question\"})\n    }\n  }\n\n  // onChangeC = (checkedValues) => {\n  //   console.log('checked = ', checkedValues.target.value);\n  //   console.log(\"valuee\", this.state.value);\n  //   let uncheck = checkedValues.target.value\n  //   let myvalues = this.state.value\n  //   if(myvalues.includes(uncheck)){\n  //       const index = myvalues.indexOf(uncheck);\n  //       if (index > -1) {\n  //       myvalues.splice(index, 1);\n  //       }\n  //   this.setState({ value: myvalues });\n  // }\n  //   else{\n  //       this.setState({\n  //           value: this.state.value.concat(uncheck)\n  //         });\n  //   }\n    \n  // }\n//   onChange = (e) => {\n//     console.log(\"checked\", this.state.value);\n//     this.setState({\n//         value: this.state.value.concat(e.target.value)\n//       });\n    \n//   };\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  onChangeOptionField = (val) => {\n    console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ optionValue: value });\n    console.log(this.state.optionValue)\n    //  const result=Joi.validate({description: value}, schema, { abortEarly: false } )\n    // if(result.error)\n    //  console.log(result.error.details[0].message);\n\n    //const errors = {};\n    //for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\n    // console.log(\"errors: \", errors);\n  };\n  onChangeAnsField = (val) => {\n    // console.log(val.target.value);\n    \n    const value = val.target.value;\n    this.setState({ AnsValue: value });\n    // console.log(this.state.AnsValue)\n  };\n\n  onChangeDescription = (e) => {\n    const value = e.target.value;\n    this.setState({ description: value });\n  };\n  onAddOption = () => {\n    const result = Joi.validate(\n      { option: this.state.optionValue },\n      Schemas.option\n    );\n    if (result.error) {\n      this.setState({ optionValueError: result.error.details[0].message });\n    } \n    else {\n      const found = this.state.options.some(\n        (item) => item.toUpperCase() === this.state.optionValue.toUpperCase()\n      );\n      if (!found) {\n        this.setState({\n          options: this.state.options.concat(this.state.optionValue),\n          optionValueError: \"\",\n        });\n      } else {\n        this.setState({ optionValueError: \"Already exists\" });\n      }\n    }\n  };\n  onAddAnswer = () => {\n    const result = Joi.validate(\n      { option: this.state.AnsValue },\n      Schemas.option\n    );\n    if(this.state.options.includes(this.state.AnsValue)){\n      if (result.error) {\n        this.setState({ AnsValueError: result.error.details[0].message });\n      } \n      else {\n        const found = this.state.Answers.some(\n          (item) => item.toUpperCase() === this.state.AnsValue.toUpperCase()\n        );\n        if (!found) {\n          this.setState({\n            Answers: this.state.Answers.concat(this.state.AnsValue),\n            AnsValueError: \"\",\n          });\n        } else {\n          this.setState({ AnsValueError: \"Already exists\" });\n        }\n      }\n    }\n    else{\n      this.setState({ AnsValueError: \"Answer value is not present in Options\" });\n    }\n    \n  };\n\n  onAddorUpdate = (ans)=>{\n    if(this.state.addorupdate === \"Update Question\"){\n      console.log(\"Update function is called\")\n      // this.setState({ descriptionError: \"\", optionsError: \"\" });\n      const data={category: \"Video Sequence Order\", description: this.state.description, videourl:this.state.videourl, options: this.state.options, ans: ans,id:this.props.question.id};\n      this.props.updateQuestion(data, this.props.question.key)\n    }\n    else{\n      console.log(\"ADD QUESTION function is called\")\n      const data={category: \"Video Sequence Order\", description: this.state.description, videourl:this.state.videourl, options: this.state.options, ans: ans};\n      this.props.addQuestion(data)\n    }\n  }\n\n\n  onDelete = (optionsorans,option) => {\n    let options = optionsorans;\n    let ansans = this.state.Answers\n    console.log(options, this.state)\n    const index = options.indexOf(option);\n    const indexans = ansans.indexOf(option);\n    // if(ansans.includes(option)){\n      // console.log(\"indexans  \"+indexans)\n    if (indexans > -1) {\n      // console.log(\"ASDFASDFADFADFDFS\")\n        ansans.splice(indexans, 1);\n    }\n    \n    if (index > -1) {\n      options.splice(index, 1);\n    }\n    // console.log(this.state.value)\n    // console.log(\"aksjhdbfallealleallealle\"+ansans)\n    this.setState({ options: options, Answers:ansans });\n    // console.log(this.state.value)\n  };\n  \n\n  renderOptions = (optionsorans) => {\n    return optionsorans.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                    title=\"HEYY\"\n                    description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(optionsorans,item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  renderAnswers = () => {\n    return this.state.Answers.map((item) => {\n      return (\n        <div style={{ marginTop: 7 }} id={item} className=\"row\">\n          <div className=\"col-5 col-sm-5 offset-sm-1\">\n            <div className={classes.MyListDiv}>\n                        <List.Item\n                        id={item}\n                   >{item}</List.Item>\n                    </div>\n          </div>\n          <div className=\"col-2 col-sm-1 \">\n            <Button onClick={() => this.onDelete(this.state.Answers,item)}>\n              {\" \"}\n              <span>\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\n              </span>\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  };\n  onChangeURLField = (e) =>{\n    const value = e.target.value;\n    this.setState({ videourl: value });\n  }\n  onAddQuestion = () => {\n    if (this.state.options.length > 0) {\n      // options are present\n      const result = Joi.validate(\n        { description: this.state.description },\n        Schemas.description\n      );\n      if (result.error) {\n        this.setState({\n          descriptionError: result.error.details[0].message,\n          optionsError: \"\",\n        });\n      } else {\n        this.setState({ descriptionError: \"\", optionsError: \"\" });\n        // if (this.state.value[0]) {\n          if (this.state.Answers[0]) {\n          //      ADD to DATABASE\n          // Closing modal\n          console.log(this.state.value)\n          let ans=[];\n          ans = this.state.Answers\n          this.onAddorUpdate(ans)\n          this.props.handleOk();\n        } else {\n          this.setState({ optionsError: \"Please Select Atleast One Option.\" });\n        }\n\n        \n      }\n    } else {\n      this.setState({ optionsError: \"Please add atleast one option\" });\n    }\n  };\n  render() { \n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <TextArea\n              placeholder=\"Enter Your Question\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              rows={4}\n            />\n            <br />\n            <br />\n            <TextArea\n            placeholder=\"Enter Video URL here\"\n            value={this.state.videourl}\n        onChange={(val) => {\n          this.onChangeURLField(val);\n        }}\n      />\n          </div>\n\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            <p style={errorStyleText}>{this.state.descriptionError}</p>\n          </div>\n        </div>       \n        <br />\n        <br />\n        <div className={classes.BoxOrderDiv}>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n          {/* <div> */}\n            <Input\n            style ={{width:\"250px\"}}\n              placeholder=\"Enter Option Here\"\n              value={this.state.optionValue}\n              onChange={(val) => {\n                this.onChangeOptionField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"100px\" }}\n              block\n              type=\"primary\"\n              success\n              onClick={this.onAddOption}\n            >\n              {\" \"}\n              Add Option\n            </Button>\n          </div>\n        </div>\n        <br />\n        <p style={errorStyleText}>{this.state.optionValueError}</p>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-7 offset-sm-1\">\n            <Input\n              style ={{width:\"250px\"}}\n              placeholder=\"Enter Answer Here\"\n              value={this.state.AnsValue}\n              onChange={(val) => {\n                this.onChangeAnsField(val);\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-sm-3\">\n            <Button\n              className=\"add-option\"\n              style={{ marginLeft: 0, width:\"105px\" }}\n              block\n              type=\"primary\"\n              success\n              onClick={this.onAddAnswer}\n            >\n              {\" \"}\n              Add Answers\n            </Button>\n          </div>\n        </div>\n        </div>\n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\n            \n            <p style={errorStyleText}>{this.state.AnsValueError}</p>\n            <br />\n            <p>** Please Enter the Answers in correct sequence **</p>\n          </div>\n        </div>\n\n        <br />\n        <div className={classes.DivinCol}>\n          <div>\n          <h2>Options</h2>\n        {this.renderOptions(this.state.options)}\n          </div>\n        <div>\n        <h2>Answers in order</h2>\n        {this.renderAnswers()}\n        </div>\n        \n        </div>\n        \n        \n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 offset-sm-1\">\n            <p style={errorStyleText}> {this.state.optionsError} </p>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\n            <Button block\n              onClick={() => {\n                this.props.handleCancel();\n              }}\n              style={{marginTop: 7}}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"col-12 col-sm-3 \">\n            <Button block\n              onClick={() => {\n                this.onAddQuestion();\n              }}\n              type=\"primary\"\n              style={{marginTop: 7}}\n            >\n              {/* Add Question */}\n              {this.state.addorupdate}\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}","import React, { Component } from \"react\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Menu, Modal, Dropdown, Divider,} from \"antd\";\r\nimport \"./css/main.css\";\r\nimport MakeMultipleChoice from \"./Categories/Multiple Choice/MakeMultipleChoice\"\r\nimport {MakeFillInTheBlanks} from \"./Categories/Blanks/MakeFillInTheBlanks\";\r\nimport MakeMultipleCheckbox from \"./Categories/MultipleCheckbox/MakeMultipleCheckbox\";\r\nimport MakeDropDown from \"./Categories/Select-From-dropdown/MakeDropDown\";\r\nimport MakeTrueFalse from \"./Categories/TrueAndFalse/MakeTrueFalse\";\r\nimport MakeSequenceinorder from \"./Categories/SequenceInOrder/MakeSequenceInOrder\";\r\nimport MakeMatchingWords from \"./Categories/MatchingWords/MakeMatchingWords\";\r\nimport MakeMatchDrag from \"./Categories/MatchDrag/MakeMatchDrag\";\r\nimport MakeMatchDragImg from \"./Categories/MatchDragImg/MakeMatchDragImg\";\r\nimport MakeAudioMultipleChoice from './Categories/AudioMultipleChoice/MakeAudioMultipleChoice';\r\nimport AudioMakeSequence from './Categories/AudioSequenceInOrder/AudioMakeSequence';\r\nimport MakeVideoMultipleChoice from './Categories/VideoMultipleChoice/MakeVideoMultipleChoice';\r\nimport VideoMakeSequence from './Categories/VideoSequenceInOrder/VideoMakeSequence';\r\n// import MakeMatchDragArea from './Categories/MatchDragArea/MakeMatchDragArea';\r\nimport * as CategoryTypes from \"../util/Categories\";\r\n\r\nexport default class AddQuestion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { visible: false, catergory: \"\"};\r\n  }\r\n\r\n  componentDidMount(){\r\n   // this.props.addQuestion();\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  onCatChange=(value)=>{\r\n    this.setState({catergory: value});\r\n    \r\n  }\r\n\r\n   menu = () =>{\r\n       return (\r\n        <Menu>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.MULTIPLE_CHOICE);}}>\r\n          \r\n              Multiple Choice\r\n         \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.FILL_IN_THE_BLANKS);}}>\r\n           \r\n              Fill in the Blanks\r\n   \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.SELECT_FROM_DROPDOWN);}}>\r\n          \r\n              Select From Dropdown\r\n     \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.TRUE_AND_FALSE);}}>\r\n          \r\n              True and False\r\n     \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.MULTIPLE_CHECKBOX);}}>\r\n          \r\n              Multiple Response\r\n     \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.SEQUENCE_IN_ORDER);}}>\r\n          \r\n              Sequence In Order\r\n     \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.MATCHING_WORDS);}}>\r\n          \r\n              Matching Words\r\n     \r\n          </Menu.Item>\r\n          <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.MATCH_DRAG);}}>\r\n          \r\n          Match Drag\r\n \r\n      </Menu.Item>\r\n      <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.MATCH_DRAG_IMG);}}>\r\n          \r\n          Match Drag Image\r\n \r\n      </Menu.Item>\r\n      <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.AUDIO_MULTIPLE_CHOICE);}}>\r\n          \r\n          Audio Multiple Choice\r\n \r\n      </Menu.Item>\r\n      <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.AUDIO_SEQUENCE_ORDER);}}>\r\n          \r\n          Audio Sequence Order\r\n \r\n      </Menu.Item>\r\n      <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.VIDEO_MULTIPLE_CHOICE);}}>\r\n          \r\n          Video Multiple Choice\r\n \r\n      </Menu.Item>\r\n      <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.VIDEO_SEQUENCE_ORDER);}}>\r\n          \r\n          Video Sequence Order\r\n \r\n      </Menu.Item>\r\n      {/* <Menu.Item onClick={()=>{this.onCatChange(CategoryTypes.DRAG_IMAGE_AREA);}}>\r\n          \r\n          Drag Image Area\r\n \r\n      </Menu.Item> */}\r\n        </Menu>\r\n      );\r\n   }\r\n\r\n \r\n   CategoryLoader=()=>{\r\n      \r\n       if(this.state.catergory === \"Multiple Choice\"){\r\n        \r\n           return (<MakeMultipleChoice addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }else if (this.state.catergory === \"Fill in the Blanks\"){\r\n        return (<MakeFillInTheBlanks addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }else if (this.state.catergory === CategoryTypes.SELECT_FROM_DROPDOWN){\r\n        return (<MakeDropDown addQuestion={this.props.addQuestion}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }else if (this.state.catergory === CategoryTypes.TRUE_AND_FALSE){\r\n        return (<MakeTrueFalse addQuestion={this.props.addQuestion}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.MULTIPLE_CHECKBOX){\r\n        return (<MakeMultipleCheckbox addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.SEQUENCE_IN_ORDER){\r\n        return (<MakeSequenceinorder addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.MATCHING_WORDS){\r\n        return (<MakeMatchingWords addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.MATCH_DRAG){\r\n        return (<MakeMatchDrag addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.MATCH_DRAG_IMG){\r\n        return (<MakeMatchDragImg addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.AUDIO_MULTIPLE_CHOICE){\r\n        return (<MakeAudioMultipleChoice addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.AUDIO_SEQUENCE_ORDER){\r\n        return (<AudioMakeSequence addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.VIDEO_MULTIPLE_CHOICE){\r\n        return (<MakeVideoMultipleChoice addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n       else if (this.state.catergory === CategoryTypes.VIDEO_SEQUENCE_ORDER){\r\n        return (<VideoMakeSequence addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n       }\r\n      //  else if (this.state.catergory === CategoryTypes.DRAG_IMAGE_AREA){\r\n      //   return (<MakeMatchDragArea addQuestion={this.props.addQuestion} description={NaN} handleOk={this.handleOk} handleCancel={this.handleCancel}/>);\r\n      //  }\r\n       return null;\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12\">\r\n        <div style={{ display: \"flex\" }} className=\"block\">\r\n          <hr />\r\n          <div\r\n            style={{\r\n              justifyContent: \"center\",\r\n              textAlign: \"center\",\r\n              postion: \"fixed\",\r\n            }}\r\n            className=\"mx-auto\"\r\n          >\r\n            <Button\r\n              block\r\n              type=\"primary\"\r\n              icon={\r\n                <PlusOutlined\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    verticalAlign: \"baseline\",\r\n                  }}\r\n                />\r\n              }\r\n              onClick={this.showModal}\r\n            >\r\n              Questions\r\n            </Button>\r\n            <Modal\r\n              style={{ width: 1000 }}\r\n              title=\"Create Question\"\r\n              visible={this.state.visible}\r\n              onCancel={this.handleCancel}\r\n              width={1200}\r\n              footer={null}\r\n            >\r\n              <div>\r\n                <div className=\"cat-choose\">\r\n                  <Dropdown overlay={this.menu} placement=\"bottomLeft\" arrow>\r\n            <Button>{this.state.catergory?this.state.catergory:<span>Click to Choose Catergory</span>}</Button>\r\n                  </Dropdown>\r\n                </div>\r\n\r\n                {/* body */}\r\n                <Divider />\r\n                {this.CategoryLoader()}\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Card } from \"antd\";\r\nimport { DeleteTwoTone, EditTwoTone } from \"@ant-design/icons\";\r\n// import {EditFillInTheBlanks} from \"./EditFillInTheBlanks\";\r\nimport {MakeFillInTheBlanks} from \"./MakeFillInTheBlanks\";\r\nconst blankString = \"____\";\r\n\r\n\r\nconst myIncludes=(str)=>{\r\n    if(str.includes(\".\")){\r\n        return true;\r\n    }else if(str.includes(\",\")){\r\n        return true;\r\n    }else if(str.includes(\"'\")){\r\n        return true;\r\n    }else if(str.includes(\"\\\"\")){\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const Blanks = (props) => {\r\n // console.log(\"props: \",props.data);\r\n  const [visible, toggleModal] = useState(false);\r\n\r\n  const showModal = () => {\r\n    toggleModal(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    toggleModal(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    toggleModal(false);\r\n  };\r\n  const onDelete = () => {\r\n    props.deleteQuestion(props.data.id);\r\n  };\r\n  const makeDescription = (desc) => {\r\n    //console.log(\"ans: \",props.data.ans[0]);\r\n    const array = desc.split(\" \");\r\n    let count = 0;\r\n    const result = array.map((item, index) => {\r\n      // console.log(index);\r\n      if((myIncludes(item)) &&  item.includes(\"____\")){\r\n        console.log(\"found: \", item);\r\n        if (item[item.length - 1] === \".\") {\r\n            \r\n            count=count+1\r\n          return (\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }} key={\"Blanks0\"+count}>\r\n              {props.data.ans[count-1]}\r\n              {\".\"}\r\n              \r\n            </span>\r\n          );\r\n        } else if (item[0] === \".\") {\r\n            console.log(\"found\");\r\n            count=count+1;\r\n            return (\r\n                <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }} key={\"Blanks1\"+count}>.{\" \"} \r\n                  {props.data.ans[count-1]}\r\n                  \r\n                </span>\r\n              );\r\n        }else if (item[item.length - 1] === \",\") {\r\n            count=count+1;\r\n            return (\r\n              <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }} key={\"Blanks2\"+count}>\r\n                {props.data.ans[count-1]}\r\n                {\",\"}\r\n                \r\n              </span>\r\n            );\r\n          } else if (item[0] === \",\") {\r\n            count=count+1;\r\n              return (\r\n                  <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }} key={\"Blanks3\"+count}>,{\" \"} \r\n                    {props.data.ans[count-1]}\r\n                    \r\n                  </span>\r\n                );\r\n          }\r\n          \r\n      }else{ \r\n      if (item === blankString) {\r\n        count=count+1;\r\n        return (\r\n          <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }} key={\"Blanks4\"+count}>\r\n            {props.data.ans[count-1]}{\" \"}\r\n           \r\n          </span>\r\n        );\r\n      } else if (item !== blankString) {\r\n        return <span>{item} </span>;\r\n      }\r\n    \r\n    }if(item.includes(\".\")){\r\n        count=count+1;\r\n        const arr= item.split(\".\");\r\n        if(arr[0]===blankString){\r\n            return(<>\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }} key={\"Blanks5\"+count}>\r\n            {props.data.ans[count-1]}\r\n            \r\n          </span>. {arr[1]} {\" \"}</>);\r\n        }else{\r\n            return(\r\n            <>{arr[0]}.\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }} key={\"Blanks6\"+count}>\r\n            {props.data.ans[count-1]} {\" \"}\r\n            \r\n          </span>\r\n          </>);\r\n        }\r\n    }\r\n    if(item.includes(\",\")){\r\n        count=count+1;\r\n        const arr= item.split(\",\");\r\n        if(arr[0]===blankString){\r\n            return(<>\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }} key={\"Blanks7\"+count}>\r\n            {props.data.ans[count-1]}\r\n            \r\n          </span>, {arr[1]} {\" \"}</>);\r\n        }else{\r\n            return(\r\n            <>{arr[0]},\r\n            <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }} key={\"Blanks8\"+count}>\r\n            {props.data.ans[count-1]} {\" \"}\r\n            \r\n          </span>\r\n          </>);\r\n        }\r\n    }\r\n     \r\n    });\r\n\r\n\r\n     //console.log(\"last result\");\r\n    return result;\r\n  };\r\n  return (\r\n    <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n      <Card\r\n        style={{ backgroundColor: props.color }}\r\n        actions={[\r\n          <EditTwoTone\r\n            onClick={() => {\r\n              showModal();\r\n            }}\r\n            twoToneColor=\"#52c41a\"\r\n            key=\"edit\"\r\n          />,\r\n          <DeleteTwoTone\r\n            onClick={() => {\r\n              onDelete();\r\n            }}\r\n            twoToneColor=\"#eb2f96\"\r\n            key=\"del\"\r\n          />,\r\n        ]}\r\n      >\r\n        <p style={{ fontSize: 17 }}>\r\n         \r\n          {props.quesNo}. {makeDescription(props.data.description)}\r\n        </p>\r\n      </Card>\r\n      <Modal\r\n        style={{ width: 1000 }}\r\n        title=\"Edit Question\"\r\n        visible={visible}\r\n        onCancel={() => handleCancel()}\r\n        width={1200}\r\n        footer={null}\r\n      >\r\n         <MakeFillInTheBlanks updateQuestion={props.updateQuestion} description={props.data.description} data={props.data} handleOk={handleOk} handleCancel={handleCancel}/> \r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport AddQuestionFooter from \"../../AddQuestionFooter\";\r\nimport { Button, Input, Checkbox } from \"antd\";\r\nimport {\r\n  CloseCircleTwoTone,\r\n  PlusOutlined,\r\n  DeleteTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport \"./Styles.css\";\r\nimport { ERROR_COLOR } from \"../../../util/colors\";\r\nimport * as CategoryTypes from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\nexport default class EditDropDown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: this.props.data.description,\r\n      options: this.props.data.options,\r\n      addOptionFields: [],\r\n      addOptionFieldsError: [],\r\n\r\n      ans: this.props.data.ans,\r\n\r\n      ansError: \"\",\r\n      descriptionError: \"\",\r\n    };\r\n  }\r\n\r\n  onAddQuestion = () => {\r\n    if(this.state.description.length === 0){\r\n        this.setState({descriptionError: \"Description cannot be Empty!\"});\r\n    }else{\r\n      var temp = this.state.description;\r\n      var dropdownCount = (temp.match(/Dropdown/g) || []).length;\r\n      var optionCount= this.state.options.length;\r\n      if(dropdownCount > optionCount){\r\n          this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n      }else if(dropdownCount === optionCount){\r\n        if(optionCount>0){\r\n          const data={category: CategoryTypes.SELECT_FROM_DROPDOWN, description: this.state.description, options: this.state.options, ans: this.state.ans, id : this.props.data.id};\r\n          //console.log(\"data: \", data);\r\n          this.props.updateQuestion(data, this.props.question.key)\r\n          this.props.handleOk();\r\n        }else{\r\n          this.setState({descriptionError: \"Add atleast one Dropdown\"});\r\n        }\r\n      }\r\n      else{\r\n          this.setState({descriptionError: \"Count of Dropdown is not equal\"});\r\n      }\r\n    }\r\n}\r\n_handleKeyDown = (e) => {\r\n \r\n}\r\n  onChangeDescription = (e) => {\r\n    let value = e.target.value;\r\n    if (e.key === 'Enter') {\r\n     // console.log('do validate');\r\n    \r\n      value= value + \"\\n\";\r\n      //console.log(\"value: \",value);\r\n      this.setState({ description: value });\r\n    }\r\n    console.log(value);\r\n    this.setState({ description: value });\r\n  };\r\n  onEnterOptionValue = (index, e) => {\r\n    const value = e.target.value;\r\n    let newArr = this.state.addOptionFields.splice();\r\n    newArr[index] = value;\r\n    this.setState({ addOptionFields: newArr });\r\n  };\r\n  onOptionChangeValue = (e, index, optionIndex) => {\r\n    const value = e.target.value;\r\n    let optionArray = this.state.options[index].split(\",\");\r\n    optionArray[optionIndex] = value;\r\n    let newOptionArray = optionArray.join(\",\");\r\n    optionArray = this.state.options;\r\n    optionArray[index] = newOptionArray;\r\n    this.setState({ options: optionArray });\r\n  };\r\n  onDeleteOptionValue = (index, optionIndex) => {\r\n    let optionValue = this.state.options[index].split(\",\");\r\n    // let del = optionValue.splice(optionIndex, 1);\r\n    let options = this.state.options;\r\n    if (optionIndex === this.state.ans[index]) {\r\n      //if we remove checked then make ans 0 index\r\n      let ans = this.state.ans;\r\n      ans[index] = 0;\r\n      this.setState({ ans });\r\n    }\r\n\r\n    if (optionIndex < this.state.ans[index]) {\r\n      let ans = this.state.ans;\r\n      let ansValue = this.state.ans[index];\r\n      // console.log(\"ans value: \", ansValue);\r\n      ans[index] = ansValue - 1;\r\n      this.setState({ ans });\r\n    }\r\n    const newOptionValue = optionValue.join(\",\");\r\n    options[index] = newOptionValue;\r\n    this.setState({ options: options });\r\n  };\r\n  onChangeCheckedOptionValue = (index, optionIndex) => {\r\n    let ans = this.state.ans;\r\n    ans[index] = optionIndex;\r\n    this.setState({ ans: ans });\r\n  };\r\n  onAddOptionValueBtn = (index) => {\r\n    const value = this.state.addOptionFields[index];\r\n    let addOptionFields = this.state.addOptionFields;\r\n    //addOptionFields--->index\r\n\r\n    //if emty display errors\r\n\r\n    if (value.length === 0) {\r\n      let err = \"Please Enter Value and then Add\";\r\n      let addOptionFieldsError = this.state.addOptionFieldsError;\r\n      addOptionFieldsError[index] = err;\r\n      this.setState({ addOptionFieldsError });\r\n      setTimeout(() => {\r\n        addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = \"\";\r\n        this.setState({ addOptionFieldsError });\r\n      }, 2000);\r\n    } else {\r\n      //check if same exists\r\n      let optionsValue = this.state.options[index].split(\",\");\r\n      if (optionsValue.includes(value)) {\r\n        let err = \"Already Exists\";\r\n        let addOptionFieldsError = this.state.addOptionFieldsError;\r\n        addOptionFieldsError[index] = err;\r\n        this.setState({ addOptionFieldsError });\r\n        setTimeout(() => {\r\n          addOptionFieldsError = this.state.addOptionFieldsError;\r\n          addOptionFieldsError[index] = \"\";\r\n          this.setState({ addOptionFieldsError });\r\n        }, 2000);\r\n      } else {\r\n          if(optionsValue[0]===\"\"){\r\n              optionsValue[0]=value;\r\n              const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n          }else{\r\n        optionsValue.push(value);\r\n        const newOptionsValue = optionsValue.join(\",\");\r\n        const options = this.state.options;\r\n        options[index] = newOptionsValue;\r\n\r\n        addOptionFields[index]=\"\";\r\n        this.setState({ options, addOptionFields });\r\n        // adding to options //\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  onDeleteDropDown = (index) => {\r\n    let { ans, options, addOptionFields, addOptionFieldsError, description} = this.state;\r\n    ans.splice(index,1);\r\n   \r\n    options.splice(index,1);\r\n    addOptionFields.splice(index,1);\r\n    addOptionFieldsError.splice(index,1);\r\n    const str= \"#\"+(index+1)+\" Dropdown#\";\r\n    const newDesc=description.split(str).join(\"\");\r\n    let count=1; \r\n    // let first=true; let skip=false;\r\n    let finalDesc=newDesc.split(\"Dropdown#\");\r\n    let Desc=[];\r\n  //  console.log(\"newDesc: \", newDesc);\r\n    //console.log(\"finaldescBefore: \", finalDesc);//\r\n    finalDesc.forEach((item,index)=>{\r\n      \r\n         const length= item.length;\r\n       \r\n         if(item.length>1){\r\n             let n=length-3;\r\n            \r\n             if(item[n]===\"#\"){\r\n                 n++;\r\n                 let str=item.split(\"\");\r\n                 str[n]=count+\"\";\r\n                 let newStr=str.join(\"\");\r\n                 count++;\r\n                // console.log(\"str: \", newStr);\r\n                 Desc.push(newStr);\r\n            \r\n             }else{\r\n               // console.log(\"item: \", item);\r\n                Desc.push(item);\r\n             }\r\n\r\n         }else{\r\n          //  console.log(\"item: \", item);\r\n            Desc.push(item);\r\n         }\r\n  \r\n    });\r\n \r\n    let finaldescription= Desc.join(\"Dropdown#\");\r\n    if(Desc.length===1){\r\n        var c = (finaldescription.match(/Dropdown/g) || []).length;\r\n        var f = (finaldescription.match(/#/g) || []).length;\r\n        if(c===0 && f===1){\r\n        finaldescription=finaldescription+\"Dropdown#\";}\r\n    }\r\n  \r\n    this.setState({ans, options, addOptionFields, addOptionFieldsError, description: finaldescription});\r\n  }\r\n\r\n  onAddDropdown = () => {\r\n        let {description, ans, options, addOptionFields, addOptionFieldsError} = this.state;\r\n        let length = this.state.options.length;\r\n        description = description + \" #\"+(length+1)+\" Dropdown#\";\r\n        ans[length]=0;\r\n        options[length]=\"\";\r\n        addOptionFields[length]=\"\";\r\n        addOptionFieldsError[length]=\"\";\r\n        this.setState({description, ans, options, addOptionFields, addOptionFieldsError});\r\n  }\r\n\r\n  renderAddDropdownSection = (item, index) => {\r\n    const optionArray = item.split(\",\"); //1,2,3\r\n    return (\r\n      <div style={{textAlign: \"center\"}} className=\"col-11 col-sm-4 offset-sm-1 dropdown-container-style\">\r\n        <div id=\"box\">\r\n          <Button onClick={()=>{this.onDeleteDropDown(index);}} type=\"text\" id=\"icon-delete-dropdown\">\r\n            <span>\r\n              <CloseCircleTwoTone\r\n                style={{ fontSize: 20 }}\r\n                twoToneColor=\"#eb2f96\"\r\n              />\r\n            </span>\r\n          </Button>\r\n        </div>\r\n        {/* input field and add button */}\r\n        <h5 style={{margin : 7}}>Dropdown #{index+1}</h5>\r\n        <div\r\n          style={{ marginTop: 10 }}\r\n          className=\"row no-gutters enter-option-value-container\"\r\n        >\r\n          <div className=\"enter-option-value-input\">\r\n            <Input\r\n              value={this.state.addOptionFields[index]}\r\n              onChange={(e) => this.onEnterOptionValue(index, e)}\r\n              placeholder=\"Enter Option Value to Add\"\r\n            />\r\n          </div>\r\n          <div className=\"enter-option-value-add-btn\">\r\n            <Button\r\n              onClick={() => {\r\n                this.onAddOptionValueBtn(index);\r\n              }}\r\n              type=\"primary\"\r\n            >\r\n              <span>\r\n                <PlusOutlined\r\n                  style={{\r\n                    color: \"white\",\r\n                    verticalAlign: \"baseline\",\r\n                    fontSize: 18,\r\n                  }}\r\n                />\r\n              </span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        {/* error row */}\r\n        <div className=\"row no-gutters\">\r\n          <p style={{ color: ERROR_COLOR }}>\r\n            {this.state.addOptionFieldsError[index]}\r\n          </p>\r\n        </div>\r\n        {/* List of options */}\r\n\r\n        {this.state.options[index] !== \"\"\r\n          ? optionArray.map((item, optionIndex) => {\r\n              let checked = false;\r\n              if (optionIndex === this.state.ans[0]) {\r\n                checked = true;\r\n              }\r\n              return (\r\n                <div className=\"row \">\r\n                  <div className=\"checkbox-div\">\r\n                    <Button type=\"text\">\r\n                      <Checkbox\r\n                        checked={checked}\r\n                        onChange={(e) => {\r\n                          this.onChangeCheckedOptionValue(index, optionIndex);\r\n                        }}\r\n                      />\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"option-value-div\">\r\n                    <Input\r\n                      value={item}\r\n                      onChange={(e) => {\r\n                        this.onOptionChangeValue(e, index, optionIndex);\r\n                      }}\r\n                      placeholder=\"Option Value\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"option-value-delete-div\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.onDeleteOptionValue(index, optionIndex);\r\n                      }}\r\n                    >\r\n                      <span>\r\n                        <DeleteTwoTone\r\n                          twoToneColor=\"#eb2f96\"\r\n                          style={{ verticalAlign: \"baseline\" }}\r\n                        />{\" \"}\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    // console.log(this.state.ans);\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* <h1>Select from Dropdown</h1> */}\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              rows={4}\r\n              onKeyDown={this._handleKeyDown}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{ color: ERROR_COLOR }}>\r\n                {this.state.descriptionError}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\r\n                <div >\r\n                <Button onClick={()=>this.onAddDropdown()} type=\"primary\" style={{position: \"absolute\", right :13}}>Add Dropdown</Button>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <br/><br/>\r\n        <div className=\"row\">\r\n          {this.state.options.map((item, index) => {\r\n            return <>{this.renderAddDropdownSection(item, index)}</>;\r\n          })}\r\n        </div>\r\n        <AddQuestionFooter\r\n            type=\"Update\"\r\n          handleCancel={this.props.handleCancel}\r\n          handleOk={this.onAddQuestion}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Modal, Card, Menu, Dropdown} from \"antd\";\r\nimport { EditTwoTone, DeleteTwoTone} from \"@ant-design/icons\";\r\nimport EditDropDown from \"./EditDropDown\";\r\nexport default class DropDownSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n         \r\n            visible: false,\r\n          };\r\n    }\r\n    showModal = () => {\r\n      this.setState({ visible: true });\r\n    };\r\n  \r\n    handleOk = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n  \r\n    handleCancel = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n\r\n    onDelete=()=>{\r\n      this.props.deleteQuestion(this.props.data.id);\r\n    }\r\n     isNumeric(str) {\r\n        if (typeof str != \"string\") return false // we only process strings!  \r\n        return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n               !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\r\n      }\r\n\r\n    onRenderDropdownQuestion=(quesNo, data)=> {\r\n        const dataArray = data.description.split(\"Dropdown#\");\r\n        let ansIndex=0;\r\n        return(<p style={{ fontSize: 17}}>{quesNo}. {\"  \"}\r\n            {dataArray.map((item, index)=>{\r\n               console.log(\"item: \", item);\r\n                if(item.includes(\"#\")){\r\n                    const deepItem=item.split(\"#\");\r\n                    console.log(\"deepItem: \", deepItem);\r\n                     return deepItem.map((item2)=>{\r\n                        if(this.isNumeric(item2[0])){\r\n                            ansIndex++;\r\n                            let count=ansIndex-1;\r\n                            // console.log(count)\r\n                        return(<Dropdown overlay={this.menu(data.options[count], data.ans[count], count)} key={\"Drop\"+data.options[0]}>\r\n                            <a href=\"/\" className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                              -Select- \r\n                            </a>\r\n                          </Dropdown>);    \r\n                        }\r\n                        if(item2.includes(\"\\n\")){\r\n                            const item3 = item2.split(\"\\n\");\r\n                          \r\n                            return item3.map((i)=>{\r\n                                return(<><br/> {i}</>);\r\n                            })\r\n                        }\r\n                        return item2;\r\n                     })\r\n                    \r\n                }else{\r\n                    return item;\r\n                }\r\n            })}\r\n        </p>);\r\n    }\r\n     menu =(options, ans, count)=> {\r\n       console.log(options)\r\n         const optionsArr = options.split(\",\");\r\n            return <Menu>  {optionsArr.map((item,index)=>{\r\n                if(index === ans){\r\n                    return   <Menu.Item key={\"Menuitem\"+index} danger>{item}</Menu.Item>;\r\n                }else{\r\n                    return(\r\n                        \r\n                          <Menu.Item key={\"Menuitem\"+index}>\r\n                            \r\n                              {item}\r\n                          \r\n                          </Menu.Item>\r\n                        \r\n                        \r\n                      );\r\n                }\r\n            }\r\n            )}</Menu>;\r\n     };\r\n    render() {\r\n        return (\r\n            <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n      <Card\r\n        style={{ backgroundColor: this.props.color }}\r\n        actions={[\r\n          <EditTwoTone\r\n            onClick={() => {\r\n              this.showModal();\r\n            }}\r\n            twoToneColor=\"#52c41a\"\r\n            key=\"edit\"\r\n          />,\r\n          <DeleteTwoTone\r\n            onClick={() => {\r\n              this.onDelete();\r\n            }}\r\n            twoToneColor=\"#eb2f96\"\r\n            key=\"del\"\r\n          />,\r\n        ]}\r\n      >\r\n       {this.onRenderDropdownQuestion(this.props.quesNo, this.props.data)}\r\n      </Card>\r\n      <Modal\r\n        style={{ width: 1000 }}\r\n        title=\"Edit Question\"\r\n        visible={this.state.visible}\r\n        onCancel={() => this.handleCancel()}\r\n        width={1200}\r\n        footer={null}\r\n      >\r\n         <EditDropDown updateQuestion={this.props.updateQuestion} data={this.props.data} handleOk={this.handleOk} handleCancel={this.handleCancel}/> \r\n      </Modal>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Input, Divider, Button, Radio} from \"antd\";\r\nimport {ERROR_COLOR} from \"../../../util/colors\";\r\nimport { TRUE_AND_FALSE} from \"../../../util/Categories\";\r\nconst { TextArea } = Input;\r\n\r\nexport default function EditTrueFalse(props) {\r\n    const [question, setQuestion] = useState({\r\n       \r\n        category: TRUE_AND_FALSE,\r\n        description: props.data.description,\r\n        options: [],\r\n        ans: props.data.ans,\r\n        \r\n        descriptionError: \"\",\r\n       \r\n    });\r\n    const [value, setValue] = useState(props.data.ans[0]);\r\n\r\n\r\n    const onAddQuestion = () => {\r\n        if(question.description.length===0){\r\n            setQuestion({ ...question,descriptionError: \"Description Empty!!!\"});\r\n        }else{\r\n            \r\n        let ans=[];\r\n        ans[0]=value;\r\n             \r\n        const data={category: TRUE_AND_FALSE, description: question.description, options: [], ans: ans,descriptionError: \"\", id: props.data.id };\r\n        //console.log(data);\r\n        this.props.updateQuestion(data, this.props.question.key)\r\n        props.handleOk();\r\n        }\r\n      };\r\n\r\n\r\n\r\n      const onChange = e => {\r\n       // console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n      };\r\n      const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n      };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n       \r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <p style={{color:ERROR_COLOR}}>{question.descriptionError}</p>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n         <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n            <TextArea\r\n              placeholder=\"Enter Your Question\"\r\n              value={question.description}\r\n              onChange={(e)=>setQuestion({...question,description: e.target.value})}\r\n              rows={4}\r\n            />\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n          <Radio.Group onChange={onChange} value={value}>\r\n      <Radio style={radioStyle} value={true}>True</Radio>\r\n      <Radio style={radioStyle} value={false}>False</Radio>\r\n      \r\n    </Radio.Group>\r\n          </div>\r\n        </div>\r\n        \r\n        <Divider />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 offset-sm-7\">\r\n            <Button block\r\n              onClick={() => {\r\n                props.handleCancel();\r\n              }}\r\n              style={{marginTop: 7}}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-12 col-sm-3 \">\r\n            <Button block\r\n              onClick={() => {\r\n                onAddQuestion();\r\n              }}\r\n              type=\"primary\"\r\n              style={{marginTop: 7}}\r\n            >\r\n             Update\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { Modal, Card, Radio} from \"antd\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\nimport EditTrueFalse from \"./EditTrueFalse\";\r\nexport default function TrueAndFalse(props) {\r\n    const [visible, toggleModal] = useState(false);\r\n    const radioStyle = {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px',\r\n      };\r\n      const showModal = () => {\r\n        toggleModal(true);\r\n      };\r\n    \r\n      const handleOk = () => {\r\n        toggleModal(false);\r\n      };\r\n    \r\n      const handleCancel = () => {\r\n        toggleModal(false);\r\n      };\r\n      const onDelete = () => {\r\n        props.deleteQuestion(props.data.id);\r\n      };\r\n\r\n    return (\r\n        <div className=\"col-12 col-sm-10 offset-sm-1\">\r\n        <Card\r\n          style={{ backgroundColor: props.color }}\r\n          actions={[\r\n            <EditTwoTone\r\n              onClick={() => {\r\n                showModal();\r\n              }}\r\n              twoToneColor=\"#52c41a\"\r\n              key=\"edit\"\r\n            />,\r\n            <DeleteTwoTone\r\n              onClick={() => {\r\n                onDelete();\r\n              }}\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"del\"\r\n            />,\r\n          ]}\r\n        >\r\n         \r\n<div>\r\n<p style={{ fontSize: 17 }}>\r\n           \r\n           {props.quesNo}. {props.data.description}\r\n          \r\n         </p>\r\n         <Radio.Group  value={props.data.ans[0]}>\r\n      <Radio style={radioStyle} value={true}>True</Radio>\r\n      <Radio style={radioStyle} value={false}>False</Radio>\r\n      \r\n    </Radio.Group>\r\n</div>\r\n\r\n        </Card>\r\n        <Modal\r\n          style={{ width: 1000 }}\r\n          title=\"Edit Question\"\r\n          visible={visible}\r\n          onCancel={() => props.handleCancel()}\r\n          width={1200}\r\n          footer={null}\r\n        >\r\n           <EditTrueFalse updateQuestion={props.updateQuestion} data={props.data} handleOk={handleOk} handleCancel={handleCancel}/> \r\n        </Modal>\r\n      </div>\r\n    )\r\n}\r\n","import React, {Component} from 'react';\nimport { Card, Modal, List } from 'antd';\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\n// import  from './MakeSequenceInOrder';\nimport classes from './MatchingWords.module.css';\nimport MakeMatchingWords from './MakeMatchingWords';\nclass MatchingWords extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => { \n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n    render(){\n        // const ListStyle = {\n        //     display: 'block',\n        //     height: '30px',\n        //     lineHeight: '30px',\n        //   };\n        return(\n            // <div>\n                 <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  actions={[\n                    \n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n                  ]}>\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <div className={classes.DivinCol}>\n                <div>\n                    <h6>Left Options</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.leftoptions.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Matchleft\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )})}\n            </List>\n                </div>\n                <div>\n                    <h6>Right Options</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.rightoptions.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Matchright\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n                <div>\n                    <h6>Right Answers</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.ans.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Matchans\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n            </div>\n            \n            </Card>\n            <Modal\n              style={{ width: 1000 }}\n              title=\"Edit Question\"\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              width={1200}\n              footer={null}\n            >\n            \n            <MakeMatchingWords updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\n            </Modal>\n            </div>\n            // </div>\n        )\n    }\n}\n\n\nexport default MatchingWords;","import React, {Component} from 'react';\nimport { Card, Modal, List } from 'antd';\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\n// import  from './MakeSequenceInOrder';\nimport classes from '../MatchingWords/MatchingWords.module.css';\n\nimport MakeMatchDrag from './MakeMatchDrag';\nclass MatchDrag extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n    render(){\n        // const ListStyle = {\n        //     display: 'block',\n        //     height: '30px',\n        //     lineHeight: '30px',\n        //   };\n        return(\n            // <div>\n                 <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  actions={[\n                    \n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n                  ]}>\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <div className={classes.DivinCol}>\n                <div>\n                    <h6>Left Options</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.leftoptions.map(index=>{\n                // console.log(index)\n                return(\n                    <div className={classes.MyListDiv} key={\"Mergeleft\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )})}\n            </List>\n                </div>\n                <div>\n                    <h6>Right Options</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.rightoptions.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Mergeright\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n                <div>\n                    <h6>Right Answers</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.ans.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Mergeans\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n            </div>\n            \n            </Card>\n            <Modal\n              style={{ width: 1000 }}\n              title=\"Edit Question\"\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              width={1200}\n              footer={null}\n            >\n            \n            <MakeMatchDrag updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\n            </Modal>\n            </div>\n            // </div>\n        )\n    }\n}\n\n\nexport default MatchDrag;","import React, {Component} from 'react';\nimport { Card, Modal, List } from 'antd';\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\n// import  from './MakeSequenceInOrder';\nimport classes from '../MatchDragImg/MatchDrag.module.css';\n\nimport MakeMatchDragImg from './MakeMatchDragImg';\nclass MatchDragImg extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n    render(){\n        // const ListStyle = {\n        //     display: 'block',\n        //     height: '30px',\n        //     lineHeight: '30px',\n        //   };\n        return(\n            // <div>\n                 <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  actions={[\n                    \n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n                  ]}>\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <div className={classes.DivinCol}>\n                <div>\n                    <h6>Image Names</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.leftoptions.map(index=>{\n                // console.log(index)\n                return(\n                    <div className={classes.MyListDiv} key={\"Mergeleft\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )})}\n            </List>\n                </div>\n                <div>\n                    <h6>Images Options</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.leftoptionsurl.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Mergeright\"+index}>\n                        <List.Item>\n                            {/* {index} */}\n                            <img className={classes.Img} src={index} alt={\"img\"}/>\n                        </List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n                <div>\n                    <h6>Swapped/Correct Order</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.ans.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Mergeans\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n            </div>\n            \n            </Card>\n            <Modal\n              style={{ width: 1000 }}\n              title=\"Edit Question\"\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              width={1200}\n              footer={null}\n            >\n            \n            <MakeMatchDragImg updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\n            </Modal>\n            </div>\n            // </div>\n        )\n    }\n}\n\n\nexport default MatchDragImg;","import React, { Component } from 'react'\r\nimport { Radio,  Card, Modal } from 'antd';\r\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\r\n// import EditMultipleChoice from \"./EditMultipleChoice\";\r\nimport MakeAudioMultipleChoice from \"./MakeAudioMultipleChoice\";\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nexport default class AudioMultipleChoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 1,\r\n            visible: false,\r\n          };\r\n    }\r\n    showModal = () => {\r\n      this.setState({ visible: true });\r\n    };\r\n  \r\n    handleOk = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n  \r\n    handleCancel = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n\r\n    onDelete=()=>{\r\n      this.props.deleteQuestion(this.props.data.id);\r\n    }\r\n      onChange = e => {\r\n        //console.log('radio checked', e.target.value);\r\n        this.setState({\r\n          value: e.target.value,\r\n        });\r\n      };\r\n    render() {\r\n        const radioStyle = {\r\n          display: 'block',\r\n          height: '30px',\r\n          lineHeight: '30px',\r\n        };\r\n        \r\n        // const { value } = this.state;\r\n        return (\r\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\r\n                <Card style={{backgroundColor:this.props.color}}\r\n                  actions={[\r\n                    \r\n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\r\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\r\n                  ]}>\r\n                    <ReactAudioPlayer\r\n                src={this.props.data.audiourl}\r\n                autoPlay={false}\r\n                controls\r\n                muted\r\n                />\r\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\r\n                <Radio.Group value={this.props.data.ans[0]}>\r\n                    {this.props.data.options.map(index=>{\r\n                      \r\n                        return(\r\n                            <Radio key={index} style={radioStyle} value={index}>\r\n                            {index}\r\n                          </Radio>\r\n                        );\r\n                    })}\r\n           \r\n                      \r\n          </Radio.Group>\r\n                </Card>\r\n            <Modal\r\n              style={{ width: 1000 }}\r\n              title=\"Edit Question\"\r\n              visible={this.state.visible}\r\n              onCancel={this.handleCancel}\r\n              width={1200}\r\n              footer={null}\r\n            >\r\n            \r\n            <MakeAudioMultipleChoice updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\r\n            </Modal>\r\n            </div>\r\n       \r\n        );\r\n      }\r\n    \r\n}\r\n","import React, {Component} from 'react';\nimport { Card, Modal, List } from 'antd';\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\nimport MakesequenceInOrder from './AudioMakeSequence';\nimport ReactAudioPlayer from 'react-audio-player';\nimport classes from './SequenceInOrder.module.css';\n\n// continue from here....\n\n\nclass AudioSequenceInOrder extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n            audiourl:this.props.data.audiourl\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n    render(){\n        // const ListStyle = {\n        //     display: 'block',\n        //     height: '30px',\n        //     lineHeight: '30px',\n        //   };\n        return(\n            // <div>\n                 <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  actions={[\n                    \n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n                  ]}>\n                    <ReactAudioPlayer\n                src={this.state.audiourl}\n                autoPlay={false}\n                controls\n                />\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <div className={classes.DivinCol}>\n                <div>\n                  <h6>Options</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.options.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Seqoptions\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )})}\n            </List>\n                </div>\n                <div>\n                  <h6>Answers</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.ans.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Seqans\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n            </div>\n            </Card>\n            <Modal\n              style={{ width: 1000 }}\n              title=\"Edit Question\"\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              width={1200}\n              footer={null}\n            >\n            \n            <MakesequenceInOrder updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\n            </Modal>\n            </div>\n            // </div>\n        )\n    }\n}\n\n\nexport default AudioSequenceInOrder;","import React, { Component } from 'react'\r\nimport { Radio,  Card, Modal } from 'antd';\r\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\r\n// import EditMultipleChoice from \"./EditMultipleChoice\";\r\nimport MakeVideoMultipleChoice from \"./MakeVideoMultipleChoice\";\r\n// import ReactAudioPlayer from 'react-audio-player';\r\nimport VideoPlayer from 'react-video-js-player';\r\n// import example from '../../../assets/Video/examplevideo.mov';\r\nexport default class VideoMultipleChoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 1,\r\n            visible: false,\r\n          };\r\n    }\r\n    showModal = () => {\r\n      this.setState({ visible: true });\r\n    };\r\n  \r\n    handleOk = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n  \r\n    handleCancel = () => {\r\n      this.setState({ visible: false });\r\n    };\r\n\r\n    onDelete=()=>{\r\n      this.props.deleteQuestion(this.props.data.id);\r\n    }\r\n      onChange = e => {\r\n        //console.log('radio checked', e.target.value);\r\n        this.setState({\r\n          value: e.target.value,\r\n        });\r\n      };\r\n    render() {\r\n        const radioStyle = {\r\n          display: 'block',\r\n          height: '30px',\r\n          lineHeight: '30px',\r\n        };\r\n        \r\n        // const { value } = this.state;\r\n        return (\r\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\r\n                <Card style={{backgroundColor:this.props.color}}\r\n                  actions={[\r\n                    \r\n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\r\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\r\n                  ]}>\r\n                    {/* <ReactAudioPlayer\r\n                src={this.props.data.audiourl}\r\n                autoPlay={false}\r\n                controls\r\n                muted\r\n                /> */}\r\n                <VideoPlayer controls={true} src={this.props.data.videourl} width=\"720\"\r\n                    height=\"420\" />\r\n                {/* <VideoPlayer controls={true} src={example} /> */}\r\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\r\n                <Radio.Group value={this.props.data.ans[0]}>\r\n                    {this.props.data.options.map(index=>{\r\n                      \r\n                        return(\r\n                            <Radio key={index} style={radioStyle} value={index}>\r\n                            {index}\r\n                          </Radio>\r\n                        );\r\n                    })}\r\n           \r\n                      \r\n          </Radio.Group>\r\n                </Card>\r\n            <Modal\r\n              style={{ width: 1000 }}\r\n              title=\"Edit Question\"\r\n              visible={this.state.visible}\r\n              onCancel={this.handleCancel}\r\n              width={1200}\r\n              footer={null}\r\n            >\r\n            \r\n            <MakeVideoMultipleChoice updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\r\n            </Modal>\r\n            </div>\r\n       \r\n        );\r\n      }\r\n    \r\n}\r\n","import React, {Component} from 'react';\nimport { Card, Modal, List } from 'antd';\nimport { EditTwoTone,  DeleteTwoTone } from '@ant-design/icons';\nimport MakesequenceInOrder from './VideoMakeSequence';\nimport VideoPlayer from 'react-video-js-player';\n// import ReactAudioPlayer from 'react-audio-player';\nimport classes from './SequenceInOrder.module.css';\n\n// continue from here....\n\n\nclass VideoSequenceInOrder extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n            videourl:this.props.data.videourl\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n    render(){\n        // const ListStyle = {\n        //     display: 'block',\n        //     height: '30px',\n        //     lineHeight: '30px',\n        //   };\n        return(\n            // <div>\n                 <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  actions={[\n                    \n                    <EditTwoTone onClick={()=>{this.showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n                    <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n                  ]}>\n                    {/* <ReactAudioPlayer\n                src={this.state.audiourl}\n                autoPlay={false}\n                controls\n                /> */}\n                <VideoPlayer controls={true} src={this.props.data.videourl} width=\"720\"\n                    height=\"420\" />\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <div className={classes.DivinCol}>\n                <div>\n                  <h6>Options</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.options.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Seqoptions\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )})}\n            </List>\n                </div>\n                <div>\n                  <h6>Answers</h6>\n                <List itemLayout=\"horizontal\" >\n            {this.props.data.ans.map(index=>{\n                return(\n                    <div className={classes.MyListDiv} key={\"Seqans\"+index}>\n                        <List.Item>{index}</List.Item>\n                    </div>\n            )  })}\n            </List>\n                </div>\n            </div>\n            </Card>\n            <Modal\n              style={{ width: 1000 }}\n              title=\"Edit Question\"\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              width={1200}\n              footer={null}\n            >\n            \n            <MakesequenceInOrder updateQuestion={this.props.updateQuestion} description={this.props.data.description} question={this.props.data}  handleOk={this.handleOk} handleCancel={this.handleCancel}/>\n            </Modal>\n            </div>\n            // </div>\n        )\n    }\n}\n\n\nexport default VideoSequenceInOrder;","export const ADD_QUESTION=\"ADD_QUESTION\";\r\nexport const DELETE_QUESTION=\"DELETE_QUESTION\";\r\nexport const EDIT_QUESTION=\"EDIT_QUESTION\";\r\nexport const SHOW_QUESTION=\"SHOW_QUESTION\";\r\n\r\nexport const UPDATE_QUESTION=\"UPDATE_QUESTION\";\r\nexport const CHANGE_COLOR=\"CHANGE_COLOR\";\r\nexport const CHANGE_SCORE=\"CHANGE_SCORE\";\r\nexport const CHANGE_TIME=\"CHANGE_TIME\";\r\n\r\nexport const INIT_QUESTIONS = \"INIT_QUESTIONS\";\r\nexport const USER_ANS_LIST = \"USER_ANS_LIST\";\r\nexport const UPDATE_ANS_LIST = \"UPDATE_ANS_LIST\";\r\n\r\n\r\nexport const FETCH_QUESTIONS_START = \"FETCH_QUESTIONS_START\";\r\nexport const FETCH_QUESTIONS_SUCCESS = \"FETCH_QUESTIONS_SUCCESS\";\r\nexport const FETCH_QUESTIONS_FAIL = \"FETCH_QUESTIONS_FAIL\";\r\nexport const FETCH_COLOR_SUCCESS = \"FETCH_COLOR_SUCCESS\";\r\nexport const FETCH_COLOR_FAIL = \"FETCH_COLOR_FAIL\";\r\nexport const FETCH_SCORE_SUCCESS = \"FETCH_SCORE_SUCCESS\";\r\nexport const FETCH_SCORE_FAIL = \"FETCH_SCORE_FAIL\";\r\nexport const FETCH_TIME_SUCCESS = \"FETCH_TIME_SUCCESS\";\r\nexport const FETCH_TIME_FAIL = \"FETCH_TIME_FAIL\"\r\n\r\n","import * as ActionTypes from \"../types/Questions\";\r\nimport axios from \"axios\";\r\nexport const addQuestion = (question) => ({\r\n  type: ActionTypes.ADD_QUESTION,\r\n  payload: question,\r\n});\r\n\r\nexport const deleteQuestion = (question) => ({\r\n  type: ActionTypes.DELETE_QUESTION,\r\n  payload: question,\r\n});\r\nexport const changeColor = (color) => ({\r\n  type: ActionTypes.CHANGE_COLOR,\r\n  payload: color,\r\n});\r\nexport const changetime = (time) =>{\r\n  return dispatch=>{\r\n    axios.put(\"https://ymstutor-lms-default-rtdb.firebaseio.com/time.json\",time)\r\n    .then(\r\n      res =>{\r\n        console.log(\"from change time in db\",res)\r\n        dispatch(changeTime(res.data))\r\n      })\r\n    .catch(err=>{console.log(err)})\r\n  }\r\n}\r\nexport const changescore = (score) =>{\r\n  return dispatch=>{\r\n    axios.put(\"https://ymstutor-lms-default-rtdb.firebaseio.com/score.json\",score)\r\n    .then(\r\n      res =>{\r\n        console.log(\"from change score in db\",res)\r\n        dispatch(changeScore(res.data))\r\n      })\r\n    .catch(err=>{console.log(err)})\r\n  }\r\n}\r\nexport const changecolor = (color) =>{\r\n  console.log(\"from redux\",color)\r\n  return dispatch=>{\r\n    axios.put(\"https://ymstutor-lms-default-rtdb.firebaseio.com/color.json\",{color})\r\n    .then(\r\n      res =>{\r\n        console.log(\"from change color in db\",res)\r\n        dispatch(changeColor(res.data.color))\r\n      })\r\n    .catch(err=>{console.log(err)})\r\n  }\r\n}\r\nexport const changeScore = (score) => ({\r\n    type: ActionTypes.CHANGE_SCORE,\r\n    payload: score,\r\n  });\r\n  export const changeTime = (time) => ({\r\n    type: ActionTypes.CHANGE_TIME,\r\n    payload: time,\r\n  });\r\n\r\n export const updateQuestion = (question)=>({\r\n     type: ActionTypes.UPDATE_QUESTION,\r\n     payload: question,\r\n });\r\n export const fetchQuestionsSuccess=(fetchedMedic)=>{\r\n  return {\r\n      type: ActionTypes.FETCH_QUESTIONS_SUCCESS,\r\n      data: fetchedMedic\r\n  }\r\n}\r\n\r\n// continur from here add change in exam score to db\r\n\r\n\r\n\r\nexport const fetchQuestionsFail =(error)=>{\r\n  return {\r\n    type: ActionTypes.FETCH_QUESTIONS_FAIL,\r\n    error: error\r\n};\r\n}\r\nexport const fetchcolorfail =(error)=>{\r\n  return {\r\n    type: ActionTypes.FETCH_COLOR_FAIL,\r\n    error: error\r\n};\r\n}\r\nexport const fetchcolorsuccess = (color) =>{\r\n  return{\r\n    type: ActionTypes.FETCH_COLOR_SUCCESS,\r\n    color: color\r\n  }\r\n}\r\nexport const fetchscorefail =(error)=>{\r\n  return {\r\n    type: ActionTypes.FETCH_SCORE_FAIL,\r\n    error: error\r\n};\r\n}\r\nexport const fetchscoresuccess = (score) =>{\r\n  return{\r\n    type: ActionTypes.FETCH_SCORE_SUCCESS,\r\n    score: score\r\n  }\r\n}\r\nexport const fetchtimefail =(error)=>{\r\n  return {\r\n    type: ActionTypes.FETCH_TIME_FAIL,\r\n    error: error\r\n};\r\n}\r\nexport const fetchtimesuccess = (time) =>{\r\n  return{\r\n    type: ActionTypes.FETCH_TIME_SUCCESS,\r\n    time: time\r\n  }\r\n}\r\nexport const deletequestion = (id,key) =>{\r\n  console.log(id, key)\r\n  return dispatch =>{\r\n    axios.delete('https://ymstutor-lms-default-rtdb.firebaseio.com/questions/'+key+\".json\")\r\n    .then(res =>{\r\n      console.log(res)\r\n      dispatch(deleteQuestion(id))\r\n    })\r\n  }\r\n}\r\nexport const updatequestion = (data, key) =>{\r\n  // console.log(data.id, data.key)\r\n  return dispatch =>{\r\n    axios.put('https://ymstutor-lms-default-rtdb.firebaseio.com/questions/'+key+\".json\",data)\r\n    .then(res =>{\r\n      console.log(res)\r\n      dispatch(updateQuestion(data))\r\n    })\r\n    .catch( err =>{console.log(err)})\r\n  }\r\n}\r\n\r\nexport const addquestions = (data) =>{\r\n  console.log(data)\r\n  return dispatch =>{\r\n    axios.post(\"https://ymstutor-lms-default-rtdb.firebaseio.com/questions.json\",data)\r\n    .then(res =>{\r\n      console.log(res)\r\n      dispatch(addQuestion(data))\r\n    })\r\n  }\r\n}\r\n\r\n export const initquestions = () =>{\r\n  console.log(\"res\")\r\n   return dispatch =>{\r\n    // dispatch( FetchQuestionsStart() );\r\n    axios.get(\"https://ymstutor-lms-default-rtdb.firebaseio.com/questions.json\")\r\n   .then(res=>{\r\n     console.log(res)\r\n     let x = 0\r\n     const fetcheddata = [];\r\n        for ( let key in res.data ) {\r\n          x = x + 1\r\n          fetcheddata.push( {\r\n            ...res.data[key],\r\n            id: x,\r\n            key: key\r\n        } );\r\n        }\r\n        console.log(fetcheddata)\r\n        dispatch(fetchQuestionsSuccess(fetcheddata));\r\n      })\r\n   .catch(err=>{\r\n     console.log(err)\r\n     dispatch( fetchQuestionsFail( err ) );\r\n   })\r\n   }\r\n   \r\n }\r\n export const changetestscore = (list, totsc, s) =>{\r\n   return dispatch =>{\r\n     const arr = list\r\n     const acscore = totsc\r\n     let score = 0\r\n     if(arr.val){\r\n      score = s + acscore\r\n     }\r\n     else{\r\n       score = acscore\r\n     }\r\n    axios.put(\"https://ymstutor-lms-default-rtdb.firebaseio.com/testscore.json\",score)\r\n    .then(res =>{\r\n      dispatch(userAnsList(list, score))\r\n    })\r\n   }\r\n }\r\n export const initcolor = () =>{\r\n   return dispatch =>{\r\n     axios.get(\"https://ymstutor-lms-default-rtdb.firebaseio.com/color.json\")\r\n     .then(res =>{\r\n      console.log(res)\r\n      dispatch(fetchcolorsuccess(res.data.color))\r\n     })\r\n     .catch(err =>{\r\n      console.log(err)\r\n      dispatch(fetchcolorfail(err))\r\n     })\r\n   }\r\n }\r\n export const initscore = () =>{\r\n  return dispatch =>{\r\n    axios.get(\"https://ymstutor-lms-default-rtdb.firebaseio.com/score.json\")\r\n    .then(res =>{\r\n     console.log(res)\r\n     dispatch(fetchscoresuccess(res.data))\r\n    })\r\n    .catch(err =>{\r\n     console.log(err)\r\n     dispatch(fetchscorefail(err))\r\n    })\r\n  }\r\n}\r\nexport const inittime = () =>{\r\n  return dispatch =>{\r\n    axios.get(\"https://ymstutor-lms-default-rtdb.firebaseio.com/time.json\")\r\n    .then(res =>{\r\n     console.log(res)\r\n     dispatch(fetchtimesuccess(res.data))\r\n    })\r\n    .catch(err =>{\r\n     console.log(err)\r\n     dispatch(fetchtimefail(err))\r\n    })\r\n  }\r\n}\r\n\r\n export const userAnsList = ( list, score )=>({\r\n  \r\n  type: ActionTypes.USER_ANS_LIST,\r\n  payload: list,\r\n  score: score\r\n })\r\n\r\n//  export const updateAnsList = (list) =>({\r\n//   type: ActionTypes.USER_ANS_LIST,\r\n//   payload: list\r\n//  })","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {  withRouter } from \"react-router-dom\";\r\nimport {  } from \"reactstrap\";\r\nimport Header from \"./Header\";\r\nimport {  Divider } from \"antd\";\r\nimport \"./css/main.css\";\r\nimport Options from \"./Options\";\r\nimport MultipleChoice from \"./Categories/Multiple Choice/MultipleChoice\";\r\nimport MultipleCheckbox from \"./Categories/MultipleCheckbox/MultipleCheckbox\";\r\nimport SequenceinOrder from \"./Categories/SequenceInOrder/SequenceInOrder\";\r\nimport AddQuestion from \"./AddQuestion\";\r\nimport {Blanks} from \"./Categories/Blanks/Blanks\";\r\nimport DropDownSelect from \"./Categories/Select-From-dropdown/DropDown\";\r\nimport TrueAndFalse from \"./Categories/TrueAndFalse/TrueAndFalse\";\r\nimport MatchingWords from \"./Categories/MatchingWords/MatchingWords\";\r\nimport MatchDrag from \"./Categories/MatchDrag/MatchDrag\";\r\nimport MatchDragImg from \"./Categories/MatchDragImg/MatchDragImg\";\r\nimport AudioMultipleChoice from \"./Categories/AudioMultipleChoice/AudioMultipleChoice\";\r\nimport AudioSequenceInOrder from './Categories/AudioSequenceInOrder/AudioSequenceInOrder';\r\nimport VideoMultipleChoice from './Categories/VideoMultipleChoice/VideoMultipleChoice';\r\nimport VideoSequenceInOrder from './Categories/VideoSequenceInOrder/VideoSequenceInOrder';\r\nimport * as CategoryTypes from \"../util/Categories\"; \r\n// import { NavLink } from 'react-router-dom';\r\nimport {\r\n  addQuestion,\r\n  deleteQuestion,\r\n  changeColor,\r\n  changeScore,\r\n  changeTime,\r\n  updateQuestion,\r\n  initquestions,\r\n  initcolor, initscore, inittime, changetime, changecolor, changescore, addquestions, deletequestion, updatequestion\r\n} from \"../redux/actions/QuestionActions\";\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addQuestion: (data) => dispatch(addQuestion(data)),\r\n  addquestions: (data) => dispatch(addquestions(data)),\r\n  deletequestion: (id, key) => dispatch(deletequestion(id, key)),\r\n  updatequestion: (data, key) => dispatch(updatequestion(data, key)),\r\n  updateQuestion: (data) => dispatch(updateQuestion(data)),\r\n  deleteQuestion: (data) => {\r\n    dispatch(deleteQuestion(data));\r\n  },\r\n  changeColor: (color) => {\r\n    dispatch(changeColor(color));\r\n  },\r\n  changeScore: (score) => {\r\n    dispatch(changeScore(score));\r\n  },\r\n  changeTime: (time) => {\r\n    dispatch(changeTime(time));\r\n  },\r\n  changetime:(time =>{ dispatch(changetime(time))}),\r\n  changescore:(score =>{ dispatch(changescore(score))}),\r\n  changecolor:(color =>{ dispatch(changecolor(color))}),\r\n  initquestions:()=>{ dispatch(initquestions())},\r\n  initcolor:()=>{dispatch(initcolor())},\r\n  inittime:()=>{dispatch(inittime())},\r\n  initscore:()=>{dispatch(initscore())}\r\n});\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    questions: state.question,\r\n    xyz : state\r\n  };\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      score: 0,\r\n      time: 0,\r\n      color: \"white\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // this.props.addQuestion();\r\n    console.log(\"SASASADSASD\", this.props.xyz)\r\n    console.log(this.props.questions)\r\n    this.props.initquestions()\r\n    this.props.initcolor()\r\n    this.props.initscore()\r\n    this.props.inittime()\r\n  }\r\n  onChangeTime = (value) => {\r\n    const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\r\n    if (\r\n      (!Number.isNaN(value) && reg.test(value)) ||\r\n      value === \"\" ||\r\n      value === \"-\"\r\n    ) {\r\n      // this.props.changeTime(value);\r\n      this.props.changetime(value)\r\n      this.setState({ time: value, timeError: false });\r\n    } else {\r\n      this.setState({ timeError: true });\r\n    }\r\n  };\r\n  onChangeScore = (value) => {\r\n    //console.log(\"value: \", value)\r\n    const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\r\n    if (\r\n      (!Number.isNaN(value) && reg.test(value)) ||\r\n      value === \"\" ||\r\n      value === \"-\"\r\n    ) {\r\n      this.setState({ score: value, scoreError: false });\r\n      this.props.changescore(value);\r\n    } else {\r\n      this.setState({ scoreError: true });\r\n    }\r\n  };\r\n  onChangeColor = (color) => {\r\n    console.log(color)\r\n    this.props.changecolor(color);\r\n    this.setState({ color: color });\r\n  };\r\n  btnClick = () => {};\r\n  renderQuestionRows = () => {\r\n    //<MultipleChoice quesNo={1} data={data} />\r\n    //    const ques = this.props.questions;\r\n    console.log(\"ques.ques: \",this.props.questions.questions);\r\n    console.log(typeof(this.props.questions.questions))\r\n    const result = this.props.questions.questions.map((item, index) => {\r\n      // console.log(\"item \",item);\r\n      index++;\r\n      //console.log(\"item: \", item.category)\r\n      if(item.category === CategoryTypes.MULTIPLE_CHOICE){\r\n      return (\r\n        <div\r\n          key={\"MultipleCM\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <MultipleChoice\r\n            deleteQuestion={this.props.deletequestion}\r\n            updateQuestion={this.props.updatequestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category === CategoryTypes.FILL_IN_THE_BLANKS){\r\n     // console.log(\"sdfsd\");\r\n      return (\r\n        <div\r\n          key={\"BlanksM\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <Blanks\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category=== CategoryTypes.SELECT_FROM_DROPDOWN){\r\n      return (\r\n        <div\r\n          key={\"DropDownM\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <DropDownSelect\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category=== CategoryTypes.TRUE_AND_FALSE){\r\n      return (\r\n        <div\r\n          key={\"TandFM\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <TrueAndFalse\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category === CategoryTypes.MULTIPLE_CHECKBOX){\r\n      return (\r\n        <div\r\n          key={\"MCheckboxM\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <MultipleCheckbox\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }else if(item.category === CategoryTypes.SEQUENCE_IN_ORDER){\r\n      return (\r\n        <div\r\n          key={\"SeqinOM\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <SequenceinOrder\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    else if(item.category === CategoryTypes.MATCHING_WORDS){\r\n      return (\r\n        <div\r\n          key={\"MatchWM\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <MatchingWords\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    else if(item.category === CategoryTypes.MATCH_DRAG_IMG){\r\n      return (\r\n        <div\r\n          key={\"MatchWM\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <MatchDragImg\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    else if(item.category === CategoryTypes.AUDIO_MULTIPLE_CHOICE){\r\n      return (\r\n        <div\r\n          key={\"AudioMC\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <AudioMultipleChoice\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    else if(item.category === CategoryTypes.VIDEO_MULTIPLE_CHOICE){\r\n      return (\r\n        <div\r\n          key={\"VideoMC\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <VideoMultipleChoice\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    else if(item.category === CategoryTypes.AUDIO_SEQUENCE_ORDER){\r\n      return (\r\n        <div\r\n          key={\"AudioSO\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <AudioSequenceInOrder\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    else if(item.category === CategoryTypes.VIDEO_SEQUENCE_ORDER){\r\n      return (\r\n        <div\r\n          key={\"VideoSO\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <VideoSequenceInOrder\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    else if(item.category === CategoryTypes.MATCH_DRAG){\r\n      return (\r\n        <div\r\n          key={\"MDragM\"+index}\r\n          style={{ marginTop: 20 }}\r\n          // key={item}\r\n          className=\"row\"\r\n        >\r\n          <MatchDrag\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            updateQuestion={this.props.updateQuestion}\r\n            color={this.props.questions.color}\r\n            quesNo={index}\r\n            data={item}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return result;\r\n    })\r\n    ;\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    //console.log(\"questions:\",this.props.questions);\r\n    console.log(\"questions:\",this.props.questions);\r\n    // console.log(this.props.data)\r\n    return (\r\n      <div className=\"mainBody\">\r\n        {/* <h1>{this.props.user.username}</h1> */}\r\n        <Header />\r\n        <div style={{ position: \"fixed\" }} className=\"add\">\r\n          <div className=\"row\">\r\n            \r\n            {/* <AddQuestion addQuestion={this.props.addQuestion} /> */}\r\n            <AddQuestion addQuestion={this.props.addquestions} />\r\n            \r\n            <br />\r\n            \r\n            <br />\r\n          </div>\r\n          \r\n        </div>\r\n        {/* Options */}\r\n        <div style={{ height: 10 }} />\r\n        <div style={{ height: 10 }} />\r\n        <div style={{ height: 10 }} />\r\n        <div />\r\n        <Divider style={{ marginTop: 20 }} orientation=\"left\">\r\n          Options\r\n        </Divider>\r\n        <Options\r\n          onChangeColor={this.onChangeColor}\r\n          onChangeScore={this.onChangeScore}\r\n          onChangeTime={this.onChangeTime}\r\n          time={this.props.questions.time}\r\n          score={this.props.questions.score}\r\n          color={this.props.questions.color}\r\n        />\r\n        <Divider style={{ marginTop: 20 }} orientation=\"left\" />\r\n        <div style={{flex:1, flexDirection: \"row-reverse\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"}}>\r\n          <p>Questions :{\" \"}\r\n          {this.props.questions.questions.length\r\n            ? this.props.questions.questions.length\r\n            : \"0\"}</p>\r\n        \r\n        </div>\r\n      \r\n        <br />\r\n        {this.props.questions ? (\r\n          this.renderQuestionRows()\r\n        ) : (\r\n          <p>No Questions Added yet</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import React, { Component } from 'react'\nimport { Radio,  Card, Button} from 'antd';\nexport default class MultipleChoice extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            visible: false,\n            ans : this.props.data.ans[0]\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n\n    onChange = e => {\n        console.log('radio checked', e.target.value);\n        console.log(this.props.data)\n        //  the state.value holds the value that has been chosen by the user...\n        // either we can compare them here and then store them as yes or no or else can store the real ans and user ans\n        // then we can compare the list after clicking the submit button...\n        this.setState({\n          value: e.target.value,\n        });\n      };\n    onClickHandler = ()=>{\n      console.log(\"clicked\")\n      let yesorno = false\n      const userans = this.state.value\n      const ansans = this.state.ans\n      console.log(userans, ansans)\n      if(userans === ansans){\n        yesorno = true\n      }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:ansans, val:yesorno}\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n      console.log(\"i an called nextque and updatelist\");\n      \n    }\n\n\n    render() {\n        const radioStyle = {\n          display: 'block',\n          height: '30px',\n          lineHeight: '30px',\n        };\n        // const { value } = this.state;\n        return (\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  >\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n                <Radio.Group onChange={this.onChange}>\n                    {this.props.data.options.map(index=>{\n                      \n                        return(\n                            <Radio key={index} style={radioStyle} value={index}>\n                            {index}\n                          </Radio>\n                        );\n                    })}\n          </Radio.Group>\n                </Card>\n                <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickHandler}>Next</Button>\n            </div>\n       \n        );\n      }\n    \n}\n","import React, { Component} from \"react\";\nimport { Card, Button} from \"antd\";\n// import { DeleteTwoTone, EditTwoTone } from \"@ant-design/icons\";\n// import {EditFillInTheBlanks} from \"./EditFillInTheBlanks\";\n// const blankString = \"____\";\n\n\n// const myIncludes=(str)=>{\n//     if(str.includes(\".\")){\n//         return true;\n//     }else if(str.includes(\",\")){\n//         return true;\n//     }else if(str.includes(\"'\")){\n//         return true;\n//     }else if(str.includes(\"\\\"\")){\n//         return true;\n//     }\n//     return false;\n// };\n\n// export const BlanksTest = (props) => {\nclass BlanksTest extends Component{\n\n    state = {\n      description:this.props.data.description,\n      ans: this.props.data.ans,\n      userans:new Array(this.props.data.ans.length),\n      numOfBlanks:0,\n      mod:\"\"\n    }\n    \n  \n  componentDidMount(){\n    this.makeNumberedBlanks(this.state.description)\n  }\n    // console.log(props)\n    makeNumberedBlanks = (sen) => {\n      const words = sen.split('____');\n      let na = 0\n      let mod = \"\";\n      let c=1;\n      for(let i=0;i<words.length;i++){\n        if(words[i].length>0){\n          \n          mod+= \"(\"+c+\")____\"+words[i];\n          c++;\n        }\n        \n      }\n      na = c-1;\n      this.setState({numOfBlanks:na, mod:mod})\n      console.log(mod)\n      // return mod;\n      \n    };\n    \n   \n    onChangeHandler=(val)=>{\n      // console.log(val.target)\n      const m = val.target.value\n      const name = Number(val.target.name)\n      let ansans = this.state.userans\n      ansans[name-1] = m\n      this.setState({userans:ansans})\n      // console.log(this.state.userans)\n    };\n\n    onClickHandler = ()=>{\n      console.log(\"clicked\")\n      let yesorno = false\n      const userans = [...this.state.userans];\n      const ansans = [...this.state.ans];\n      if(userans.length !== ansans.length){\n        yesorno = false\n        console.log(\"first if\")\n      }  \n      else{ \n  // comapring each element of array \n   for(var i=0;i<userans.length;i++){\n    if(userans[i] && (userans[i].toLowerCase() === ansans[i].toLowerCase())){\n      yesorno = true;\n      console.log(\"second if\")\n    }\n\n    else{\n    yesorno = false;\n    console.log(\"else\")\n    break;\n  } }}\n      // if(userans === ansans){\n      //   yesorno = true\n      // }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:ansans, val:yesorno}\n      console.log(data)\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n      // console.log(\"i an called nextque and updatelist\");\n      \n    };\n\n    render(){\n      return(\n        <div className=\"col-12 col-sm-10 offset-sm-1\">\n      <Card\n        style={{ backgroundColor: this.props.color }}\n        \n      >\n        <p style={{ fontSize: 17 }}>\n         \n          {this.props.quesNo}. {this.state.mod}\n        </p>\n        <div>\n        {Array(this.state.numOfBlanks).fill(0).map((item, i) =>{\n          let m = i+1\n           return (\n            <form>\n            <label>{m}\n           <input style={{marginLeft:\"5px\",marginBottom:\"2px\"}} \n           type=\"text\"\n           name={m}\n           key={m} onChange={(val)=>{this.onChangeHandler(val)}}>\n             </input>\n             <br/>\n             </label>\n             </form>)\n        })}\n        </div>\n      </Card>\n      <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickHandler}>Next</Button>\n     \n    </div>\n      )\n    }\n  }\n // console.log(\"props: \",props.data);\n  // const [visible, toggleModal] = useState(false);\n\n  // const showModal = () => {\n  //   toggleModal(true);\n  // };\n\n  // const handleOk = () => {\n  //   toggleModal(false);\n  // };\n\n  // const handleCancel = () => {\n  //   toggleModal(false);\n  // };\n  // const onDelete = () => {\n  //   props.deleteQuestion(props.data.id);\n  // };\n\n\nexport default BlanksTest\n\n // const makeDescription = (desc) => {\n  //   //console.log(\"ans: \",props.data.ans[0]);\n  //   const array = desc.split(\" \");\n  //   let count = 0;\n  //   const result = array.map((item, index) => {\n  //     // console.log(index);\n  //     if((myIncludes(item)) &&  item.includes(\"____\")){\n  //       console.log(\"found: \", item);\n  //       if (item[item.length - 1] === \".\") {\n            \n  //           count=count+1\n  //         return (\n  //           <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //             {props.data.ans[count-1]}\n              \n              \n  //           </span>\n  //         );\n  //       } else if (item[0] === \".\") {\n  //           console.log(\"found\");\n  //           count=count+1;\n  //           return (\n  //               <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>.{\" \"} \n  //                 {props.data.ans[count-1]}\n                  \n  //               </span>\n  //             );\n  //       }else if (item[item.length - 1] === \",\") {\n  //           count=count+1;\n  //           return (\n  //             <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //               {props.data.ans[count-1]}\n  //               {\",\"}\n                \n  //             </span>\n  //           );\n  //         } else if (item[0] === \",\") {\n  //           count=count+1;\n  //             return (\n  //                 <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>,{\" \"} \n  //                   {props.data.ans[count-1]}\n                    \n  //                 </span>\n  //               );\n  //         }\n          \n  //     }else{ \n  //     if (item === blankString) {\n  //       count=count+1;\n  //       return (\n  //         <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //           {props.data.ans[count-1]}{\" \"}\n           \n  //         </span>\n  //       );\n  //     } else if (item !== blankString) {\n  //       return <span>{item} </span>;\n  //     }\n    \n  //   }if(item.includes(\".\")){\n  //       count=count+1;\n  //       const arr= item.split(\".\");\n  //       if(arr[0]===blankString){\n  //           return(<>\n  //           <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //           {props.data.ans[count-1]}\n            \n  //         </span>. {arr[1]} {\" \"}</>);\n  //       }else{\n  //           return(\n  //           <>{arr[0]}.\n  //           <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //           {props.data.ans[count-1]} {\" \"}\n            \n  //         </span>\n  //         </>);\n  //       }\n  //   }\n  //   if(item.includes(\",\")){\n  //       count=count+1;\n  //       const arr= item.split(\",\");\n  //       if(arr[0]===blankString){\n  //           return(<>\n  //           <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //           {props.data.ans[count-1]}\n            \n  //         </span>, {arr[1]} {\" \"}</>);\n  //       }else{\n  //           return(\n  //           <>{arr[0]},\n  //           <span style={{ color: \"#1890ff\", textDecoration: \"underline\" }}>\n  //           {props.data.ans[count-1]} {\" \"}\n            \n  //         </span>\n  //         </>);\n  //       }\n  //   }\n     \n  //   });\n\n\n  //    //console.log(\"last result\");\n  //   return result;\n  // };","import React, { Component } from 'react'\nimport {Card, Menu, Dropdown, Button} from \"antd\";\n// import { EditTwoTone, DeleteTwoTone} from \"@ant-design/icons\";\n// import EditDropDown from \"./EditDropDown\";\nexport default class DropDownSelect extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            val: [],\n            ans: [...this.props.data.ans],\n            userans: new Array(this.props.data.options.length),\n            visible: false,\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n     isNumeric(str) {\n        if (typeof str != \"string\") return false // we only process strings!  \n        return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n               !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\n      }\n    onClickHandler = (count, e) =>{\n      console.log(this.state.val)\n      let ca = this.props.data.options[count].split(\",\")\n      let ansa = []\n      ansa= ca[e.key]\n      // if(this.state.val[count]){\n      let myans = this.state.userans\n      myans[count] = ansa\n      // }\n      console.log( ca[e.key], e)\n      console.log(ansa)\n      console.log(myans)\n      this.setState({val:this.state.val.concat({count, ansa}), userans:myans})\n      \n      console.log(this.state.val)\n    }\n    // onClickHandler = ({key}) =>{\n    //   let ca = this.props.data.options[key]\n    //   // this.setState({val:\"\"})\n    //   console.log( key,ca)\n    //   // console.log(e.target)\n    // }\n\n\n\n      menu =(options, ans, count)=> {\n        const optionsArr = options.split(\",\");\n           return <Menu onClick={(e)=>{this.onClickHandler(count, e)}}>  {optionsArr.map((item,index)=>{\n               // if(index === ans){\n               //     return   <Menu.Item key={index} danger>{item}</Menu.Item>;\n               // }else{\n                   return(\n\n                         <Menu.Item key={index} >\n                         \n                             {item}\n                         \n                         </Menu.Item>\n                       \n                       \n                     );\n               }\n           // }\n           )}</Menu>;\n    };\n    onRenderDropdownQuestion=(quesNo, data)=> {\n        const dataArray = data.description.split(\"Dropdown#\");\n        let ansIndex=0;\n        return(<p style={{ fontSize: 17}}>{quesNo}. {\"  \"}\n            {dataArray.map((item, index)=>{\n               // console.log(\"item: \", item);\n                if(item.includes(\"#\")){\n                    const deepItem=item.split(\"#\");\n                    console.log(\"deepItem: \", deepItem);\n                     return deepItem.map((item2)=>{\n                        if(this.isNumeric(item2[0])){\n                            ansIndex++;\n                            let count=ansIndex-1;\n                            let x = \"-Select\"\n                            if(this.state.userans[count]){\n                              x = this.state.userans[count]\n                            }\n                        return(<Dropdown overlay={this.menu(data.options[count], data.ans[count], count)}>\n                            {/* <a className=\"ant-dropdown-link\"  onClick={e => e.preventDefault()}>\n                              -Select- \n                            </a> */}\n                            <Button className=\"ant-dropdown-link\"  onClick={e => e.preventDefault()}>\n                              {/* -Select-  */}\n                              {x}\n                            </Button>\n                            {/* on click event should have to save the value and the index of the dropdown and the\n                            name -SELECT- have to be changed according to the options... */}\n                          </Dropdown>);    \n                        }\n                        if(item2.includes(\"\\n\")){\n                            const item3 = item2.split(\"\\n\");\n                            return item3.map((i)=>{\n                                return(<><br/> {i}</>);\n                            })\n                        }\n                        return item2;\n                     })\n\n                }else{\n                    return item;\n                }\n            })}\n        </p>);\n    }\n    onClickNextHandler = ()=>{\n      console.log(\"clicked\")\n      let yesorno = false\n      const userans = [...this.state.userans]\n      const ansans = [...this.props.data.ans]\n      console.log(ansans)\n      console.log(userans)\n      const options = [...this.props.data.options];\n      const myans = new Array(ansans.length)\n      \n      for(var j = 0; j<options.length;j++){\n        let x = options[j].split(\",\")\n        console.log(x)\n        myans[j] = x[ansans[j]]\n        console.log(myans)\n      }\n      if(userans.length !== myans.length){\n        yesorno = false\n      }  \n      else{ \n  // comapring each element of array \n        for(var i=0;i<userans.length;i++)\n        if(userans[i] === myans[i]){\n        yesorno = true\n      }\n   else{\n    yesorno = false\n  } }\n      // if(userans === ansans){\n      //   yesorno = true\n      // }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:myans, val:yesorno}\n      console.log(data)\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n      // console.log(\"i an called nextque and updatelist\");\n      \n    };\n\n    render() {\n      console.log(this)\n      console.log(this.props.data.options.length)\n        return (\n            <div className=\"col-12 col-sm-10 offset-sm-1\">\n      <Card\n        style={{ backgroundColor: this.props.color }}\n\n      >\n       {this.onRenderDropdownQuestion(this.props.quesNo, this.props.data)}\n      </Card>\n      <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickNextHandler}>Next</Button>\n\n    </div>\n        )\n    }\n}\n","import React, {useState} from 'react'\nimport {  Card, Radio, Button} from \"antd\";\n// import { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\n// import EditTrueFalse from \"./EditTrueFalse\";\nexport default function TrueAndFalse(props) {\n    // const [visible, toggleModal] = useState(false);\n    const [value, setValue] = useState(1);\n    const radioStyle = {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px',\n      };\n     \n      const onChange = e => {\n        console.log('radio checked', e.target.value);\n        console.log(props)\n        console.log(props.score)\n        setValue(e.target.value);\n        // if(){\n\n        // }\n        // write a if statement to check the ans and verify it and change the total score if possible or store the required \n        // data such as the correct ans and the submitted ans...\n      };\n      const onClickHandler=()=>{\n        let yesorno = false\n        const score = props.score\n        const testscore = props.testscore\n        if(value === props.data.ans[0]){\n          yesorno = true\n        }\n      const data = {queNo: props.quesNo, userAns: value, correctans: props.data.ans[0], val:yesorno}\n      console.log(data)\n      \n      props.userAnsList(data, testscore, score)\n      props.nextQue()\n      console.log(\"i an called nextque and updatelist\");\n      }\n      // console.log(props)\n    return (\n        <div className=\"col-12 col-sm-10 offset-sm-1\">\n        <Card\n          style={{ backgroundColor: props.color }}\n          \n        >\n         \n<div>\n<p style={{ fontSize: 17 }}>\n           \n           {props.quesNo}. {props.data.description}\n          \n         </p>\n\n         <Radio.Group  value={value} onChange={onChange}>\n      <Radio style={radioStyle} value={true}>True</Radio>\n      <Radio style={radioStyle} value={false}>False</Radio>\n      \n    </Radio.Group>\n</div>\n\n        </Card>\n        <Button type=\"primary\" style={{float:\"right\"}} onClick={onClickHandler}>Next</Button>\n    \n      </div>\n    )\n}\n","import React, { Component } from 'react';\nimport {Card,Checkbox, Row, Button } from 'antd';\nclass MultipleCheckboxTest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: [],\n            visible: false,\n          };\n    }\n\n    onChangeC = (checkedValues) => {\n        console.log('checked = ', checkedValues.target.value);\n       \n        let uncheck = checkedValues.target.value\n        let myvalues = this.state.value\n        if(myvalues.includes(uncheck)){\n            const index = myvalues.indexOf(uncheck);\n            if (index > -1) {\n            myvalues.splice(index, 1);\n            }\n        this.setState({ value: myvalues });\n      }\n        else{\n            this.setState({\n                value: this.state.value.concat(uncheck)\n              });\n        }\n        console.log(\"valuee\", this.state.value);\n    }    \n    onClickHandler = ()=>{\n        const userans = this.state.value.sort();\n        const ansans = this.props.data.ans.sort();\n        let yesorno = false\n        if(userans.length !== ansans.length){\n            yesorno = false\n        }\n        else{\n            for(var i = 0; i<userans.length;i++){\n                if(userans[i] === ansans[i]){\n                    yesorno = true\n                }\n                else{\n                    yesorno = false\n                    break;\n                }\n            }\n        }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:ansans, val:yesorno}\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n\n    }\n\n    render(){\n        console.log(\"heuu im form render\")\n        console.log(this.state.value)\n        const radioStyle = {\n            display: 'block',\n            height: '30px',\n            lineHeight: '30px',\n          };\n        return(\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                 >\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n                {/* <Checkbox.Group value={this.props.data.ans}> */}\n                <Checkbox.Group value={this.state.value}>\n                <Row>\n                    {this.props.data.options.map(index=>{\n                      \n                        return(\n                            <Checkbox key={index} style={radioStyle} value={index} onChange={this.onChangeC}>\n                            {index}\n                          </Checkbox>\n                        );\n                        \n                    })}\n                </Row>\n           \n                      \n          </Checkbox.Group>\n                </Card>\n                <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickHandler}>Next</Button>\n            </div>\n        )\n    }\n}\n\n\nexport default MultipleCheckboxTest","import React, {Component} from 'react';\nimport { Card, Button } from 'antd';\nimport classes from './SequenceInOrder.module.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nclass SequenceInTest extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n            mydata: [...this.props.data.options],\n          };\n    }\n    handleOnDragEnd = (result) =>{\n        if (!result.destination) return;\n        console.log(result)\n        const items = Array.from(this.state.mydata);\n        \n        const [reorderedItem] = items.splice(result.source.index, 1);\n        console.log(reorderedItem)\n        items.splice(result.destination.index, 0, reorderedItem);\n        console.log(items)\n        this.setState({mydata: items})\n        \n        \n    }\n    onClickHandler = ()=>{\n        const userans = [...this.state.mydata];\n        const ansans = [...this.props.data.ans];\n        let yesorno = false;\n        for(var i = 0; i<userans.length;i++){\n            if(userans[i] === ansans[i]){\n                yesorno = true\n            }\n            else{\n                yesorno = false\n                break;\n            }\n        }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:ansans, val:yesorno}\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n\n    }\n\n    render(){\n\n        return(\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  >\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <DragDropContext onDragEnd={this.handleOnDragEnd}>\n            <Droppable droppableId=\"characters\" >\n    {(provided) => (\n            <ol className = \"characters\" {...provided.droppableProps} ref={provided.innerRef}>\n            {this.state.mydata.map(index=>{\n                console.log(index.split(\",,\"))\n                // let x = 123 \n                // let lala = index.split(\",,\")\n                // {this.props.data.options.indexOf(index)}\n                return(\n                    <Draggable key = {index} draggableId={index} index= {this.state.mydata.indexOf(index)}>\n                    {(provided) => (\n                    <li className={classes.MyListDiv} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{index}\n                   {/* </List.Item> */}\n                   </li>\n                    // </div>\n                     )}\n                     </Draggable>\n                    \n            )\n                  \n            })}\n            {/* </List> */}\n            {provided.placeholder}\n            </ol>\n            )}\n            </Droppable>\n            </DragDropContext>\n            \n            </Card>\n            <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickHandler}>Next</Button>\n            </div>\n        )\n    }\n}\n// <div className={classes.MyListDiv}>\n// {/* <div > */}\n// {/* <List.Item */}\n\nexport default SequenceInTest;\n\n","import React, {Component} from 'react';\nimport { Card,  List, Button } from 'antd';\nimport classes from \"./MatchingWords.module.css\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nclass MatchingWordsTest extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n            mydata: [...this.props.data.rightoptions],\n            answers: [...this.props.data.ans],\n            leftoptions: [...this.props.data.leftoptions]\n\n          };\n    }\n    handleOnDragEnd = (result) =>{\n        if (!result.destination) return;\n        // console.log(result)\n        const items = Array.from(this.state.mydata);\n        \n        const [reorderedItem] = items.splice(result.source.index, 1);\n        // console.log(reorderedItem)\n        items.splice(result.destination.index, 0, reorderedItem);\n        // console.log(items)\n        this.setState({mydata: items})\n        \n        \n    }\n    onClickHandler = ()=>{\n        const userans = [...this.state.mydata];\n        const ansans = [...this.props.data.ans];\n        let yesorno = false;\n        for(var i = 0; i<userans.length;i++){\n            if(userans[i] === ansans[i]){\n                yesorno = true\n            }\n            else{\n                yesorno = false\n                break;\n            }\n        }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:ansans, val:yesorno}\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n\n    }\n\n\n    render(){\n\n        return(\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  >\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n\n\n        <div className={classes.DivinCol}>\n        <div>\n        <List itemLayout=\"horizontal\" >\n            {this.props.data.leftoptions.map(index=>{\n                return(\n                    <div className={classes.DivinCol}>\n                        <div className={classes.MyListDiv}>\n                        <List.Item>{index}</List.Item>  \n                    </div>\n                    <h6 style={{paddingTop:\"20px\"}}>-----</h6>\n                    </div>\n                    \n            )})}\n            </List>\n\n        </div>\n            {/* </div> */}\n            \n            <DragDropContext onDragEnd={this.handleOnDragEnd}>\n            <Droppable droppableId=\"characters\" >\n    {(provided) => (\n            <ul  className = \"characters\" style={{listStyleType:\"none\"}} {...provided.droppableProps} ref={provided.innerRef}>\n            {this.state.mydata.map(index=>{\n                // console.log(index.split(\",,\"))\n                // let x = 123 \n                // let lala = index.split(\",,\")\n                // {this.props.data.options.indexOf(index)}\n                return(\n                    <div className={classes.DivinCol}>\n                    <Draggable key = {index} draggableId={index} index= {this.state.mydata.indexOf(index)}>\n                    {(provided) => (\n                    <li className={classes.MyListDiv2}\n                     ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{index}\n                   {/* </List.Item> */}\n                   </li>\n                    // </div>\n                     )}\n                     </Draggable>\n                     </div>\n                    \n            )\n                  \n            })}\n            {/* </List> */}\n            {provided.placeholder}\n            </ul>\n            )}\n            </Droppable>\n            </DragDropContext>\n            \n        </div>\n        \n            \n            </Card>\n            <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickHandler}>Next</Button>\n            </div>\n        )\n    }\n}\n// <div className={classes.MyListDiv}>\n// {/* <div > */}\n// {/* <List.Item */}\n\nexport default MatchingWordsTest;\n\n","import React, {Component} from 'react';\nimport {Card, Button} from 'antd';\nimport classes from \"./MatchDrag.module.css\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nclass MatchDragTest extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n            mydata: [...this.props.data.rightoptions],\n            answers: [...this.props.data.ans],\n            leftoptions: [...this.props.data.leftoptions],\n            dragdata: {\n                1:{ id:\"leftoptions\",\n                    data:[...this.props.data.leftoptions],\n                },\n                2:{id:\"rightoptions\",\n                    data:[...this.props.data.rightoptions],\n                }\n            },\n            arr: new Array(this.props.data.rightoptions.length),\n            lrr: [...this.props.data.leftoptions],\n\n          };\n    }\n    handleOnDragEnd = (result) =>{\n        // console.log(result)\n        if (!result.destination) return;\n        const items = this.state.leftoptions\n        const right = this.state.mydata\n        // if(right.includes(result.destination.droppableId) && right.includes(result.source.droppableId)){\n        //     const arr = this.state.arr\n        //     // const [reorderedItem] = arr.splice(result.source.index, 1);\n        //     // arr.splice(result.destination.index, 0, reorderedItem);\n        //     let temp = arr[result.source.index]\n        //     arr[result.source.index] = arr[result.destination.index]\n        //     arr[result.destination.index] = temp\n        //     this.setState({arr: arr})\n        // }\n        // // console.log(items.includes(result.source.droppableId))\n        if(items.includes(result.source.droppableId) && right.includes(result.destination.droppableId)){\n            const srcindex = items.indexOf(result.source.droppableId);\n            \n            \n            const temp = right.indexOf(result.destination.droppableId)\n            const arr = [...this.state.arr];\n            const lrr = [...this.state.lrr]\n            if(arr[temp]){\n                return;\n            }\n            // if(arr[temp] !== null){return;}\n            arr[temp] = result.draggableId\n            lrr[srcindex] = \"\"\n            // console.log(\"right\",right)\n            // console.log(\"items\",items)\n            console.log(\"arr\",arr)\n            this.setState({dragdata:{\n                1:{\n                    id:\"leftoptions\",\n                    data:items\n                },\n                2:{\n                    id:\"rightoptions\",\n                    data:right\n                }\n            }, arr:arr, lrr:lrr})\n        }\n        else if(right.includes(result.source.droppableId) && items.includes(result.destination.droppableId)){\n            const srcindex = right.indexOf(result.source.droppableId);\n            const temp = items.indexOf(result.destination.droppableId)\n            const arr = this.state.arr\n            const lrr = this.state.lrr\n            if(lrr[temp]){\n                return;\n            }\n            arr[srcindex] = \"\"\n            lrr[temp] = result.draggableId\n            // console.log(\"right\",right)\n            // console.log(\"items\",items)\n            // console.log(\"arr\",arr)\n            this.setState({dragdata:{\n                1:{\n                    id:\"leftoptions\",\n                    data:items\n                },\n                2:{\n                    id:\"rightoptions\",\n                    data:right\n                }\n            }, arr:arr, lrr:lrr})\n        }\n        else{\n            return;\n        }\n        // console.log(result)\n    }\n\n\n    myanslist=(m,data)=>{\n        // console.log(this.state.arr[m])\n        let temp = this.state.arr[m]\n        // console.log(isNaN(temp))\n        if(!temp){\n            // console.log(m)\n            return(<div></div>)\n        }\n        else{\n            // console.log(\"bllllllll\")\n            return(\n                <div>\n                        <Draggable key = {temp} draggableId={temp} index= {m}>\n                        {(provided) => (\n                           \n                        <li className={classes.MyListDiv}\n                         ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{this.state.arr[m]}\n                       </li>\n                         )}\n                         </Draggable>\n                            </div>\n            );\n        }\n    }\n\n    myoptionlist = (m) =>{\n        let temp = this.state.lrr[m]\n        if(!temp){\n            // console.log(m)\n            return(<div></div>)\n        }\n        else{\n            // console.log(\"bllllllll\")\n            return(\n                <div>\n                        <Draggable key = {temp} draggableId={temp} index= {m}>\n                        {(provided) => (\n                           \n                        <li className={classes.MyListDiv}\n                         ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{this.state.lrr[m]}\n                       </li>\n                         )}\n                         </Draggable>\n                            </div>\n            );\n        }\n    }\n    onClickHandler = ()=>{\n        const ansans = [...this.state.answers];\n        const userans = [...this.state.arr]\n        let yesorno = false\n        for(var i = 0; i<ansans.length;i++){\n            if(userans[i] === ansans[i]){\n                yesorno = true;\n            }\n            else{\n                yesorno = false;\n                break;\n            }\n        }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:ansans, val:yesorno}\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n\n    }\n\n    render(){\n\n        // console.log(this.state.dragdata)\n        return(\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  >\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n\n            \n             <DragDropContext onDragEnd={this.handleOnDragEnd}>\n             <div className={classes.DivinCol}>\n                {Object.entries(this.state.dragdata).map((data)=>{\n                    // console.log(\"kajhsdkahsdkajshd\",data)\n                    let x = data[1]\n                    // // console.log(x.data)\n                    if(x.id === \"leftoptions\"){\n                        return(\n                            <div >\n                                 {x.data.map(index =>{\n                                     let ma =x.data.indexOf(index)\n                                     const renderdataa = this.myoptionlist(ma,index)\n                                          return(\n                                <Droppable droppableId={index} >\n                                {(provided, snapshot) => (\n                                    <ul  className = \"characters\" \n                                    style={{listStyleType:\"none\", background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\"}} \n                                    {...provided.droppableProps} ref={provided.innerRef}>\n                                     \n                                            <div className={classes.DivinCol2}>\n                                            <div className={classes.MyListDrop}>\n                                                <p  style={{textAlign:\"center\"}}>{}</p>\n                                             </div>\n                                             {renderdataa}\n                                                {/* <Draggable key = {index} draggableId={index} index= {x.data.indexOf(index)}>\n                                                {(provided) => (\n                                                \n                                                <li className={classes.MyListDiv2}\n                                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{index}\n                            \n                                                </li>\n                                \n                                                )}\n                                                </Draggable> */}\n                                            </div>\n                                          \n                                            \n                                            {provided.placeholder}\n                                    </ul>\n                                    \n                                )}\n                                \n                                </Droppable>\n                                )})}\n                            </div>\n                        )\n                    }\n                    \n                    else{\n                        \n                        return(\n                            <div>\n                                {x.data.map(index =>{\n                                    // console.log(\"rightdrop\", x.data)\n                                    let m =x.data.indexOf(index)\n                                    const renderdata = this.myanslist(m,index)\n                                    return(\n                                        <Droppable droppableId={index} >\n                                    {(provided, snapshot) => (\n                                <ul  className = \"characters\" \n                                style={{listStyleType:\"none\",padding:\"0px\", background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\"}} \n                                {...provided.droppableProps} ref={provided.innerRef}>\n                                            <div className={classes.DivinCol2}>\n                                            <div className={classes.MyListDrop}>\n                                                <p  style={{textAlign:\"center\"}}>{index}</p>\n                                             </div>\n                                            {renderdata}\n                                            </div>\n                                            {provided.placeholder}\n                                </ul>\n                                 )}\n                                </Droppable>\n                                )})}\n                            \n                        </div>\n                        )\n                        \n                    }\n\n            // {/* })}\n            // {provided.placeholder}\n            // </ul>\n            // )}\n            // </Droppable>\n                    // )\n                        })} \n             </div>\n            </DragDropContext>\n            </Card>\n            <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickHandler}>Next</Button>\n            </div>\n        )\n    }\n}\n\n\nexport default MatchDragTest;\n\n","import React, {Component} from 'react';\nimport {Card, Button} from 'antd';\nimport classes from \"./MatchDrag.module.css\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nclass MatchDragImgTest extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n            mydata: [...this.props.data.rightoptions],\n            answers: [...this.props.data.ans],\n            leftoptions: [...this.props.data.leftoptions],\n            dragdata: {\n                1:{ id:\"leftoptions\",\n                    data:[...this.props.data.leftoptions],\n                },\n                2:{id:\"rightoptions\",\n                    data:[...this.props.data.rightoptions],\n                }\n            },\n            arr: new Array(this.props.data.rightoptions.length),\n            arrurl: new Array(this.props.data.leftoptionsurl.length),\n            lrr: [...this.props.data.leftoptions],\n            lefturls:[...this.props.data.leftoptionsurl]\n\n          };\n    }\n    handleOnDragEnd = (result) =>{\n        console.log(result)\n        if (!result.destination) return;\n        const items = this.state.leftoptions\n        const right = this.state.mydata\n        const sourceid = result.source.droppableId.substring(3)\n        const destid = result.destination.droppableId.substring(3)\n        const sid = result.source.droppableId.substring(0,3)\n        const did = result.destination.droppableId.substring(0,3)\n        // console.log(sid,did)\n        // console.log(sourceid, destid)\n        if(sid === \"lef\" && did === \"rig\"){\n            const srcindex = items.indexOf(sourceid);\n            const temp = right.indexOf(destid)\n            const arr = [...this.state.arr];\n            const lrr = [...this.state.lrr]\n            const lefturls = [...this.state.lefturls];\n            const arrurl = [...this.state.arrurl];\n            if(arrurl[temp]){\n                return;\n            }\n            // if(arr[temp] !== null){return;}\n            arr[temp] = result.draggableId.substring(3)\n            arrurl[temp] = lefturls[srcindex]\n            lrr[srcindex] = \"\"\n            lefturls[srcindex]= \"\" \n            // console.log(\"right\",right)\n            // console.log(\"items\",items)\n            console.log(\"arr\",arr)\n            console.log(arrurl)\n            this.setState({dragdata:{\n                1:{\n                    id:\"leftoptions\",\n                    data:items\n                },\n                2:{\n                    id:\"rightoptions\",\n                    data:right\n                }\n            }, arr:arr, lrr:lrr, arrurl:arrurl, lefturls:lefturls})\n        }\n        // else if(right.includes(sourceid) && items.includes(destid)){\n        else if(sid === \"rig\" && did === \"lef\"){\n            const srcindex = right.indexOf(sourceid);\n            const temp = items.indexOf(destid)\n            const arr = [...this.state.arr]\n            const lrr = [...this.state.lrr]\n            const lefturls = [...this.state.lefturls];\n            const arrurl = [...this.state.arrurl];\n            if(lefturls[temp]){\n                return;\n            }\n            arr[srcindex] = \"\"\n            lrr[temp] = result.draggableId.substring(3)\n            lefturls[temp]= arrurl[srcindex]\n            arrurl[srcindex] = \"\"\n            \n\n            // console.log(\"right\",right)\n            // console.log(\"items\",items)\n            // console.log(\"arr\",arr)\n            this.setState({dragdata:{\n                1:{\n                    id:\"leftoptions\",\n                    data:items\n                },\n                2:{\n                    id:\"rightoptions\",\n                    data:right\n                }\n            }, arr:arr, lrr:lrr, arrurl:arrurl, lefturls:lefturls})\n        }\n        else{\n            return;\n        }\n        // console.log(result)\n    }\n\n\n    myanslist=(m,data)=>{\n        // console.log(this.state.arr[m])\n        let temp = this.state.arr[m]\n        // console.log(isNaN(temp))\n        if(!temp){\n            // console.log(m)\n            return(<div></div>)\n        }\n        else{\n            // console.log(\"bllllllll\")\n            return(\n                <div>\n                        <Draggable key = {\"ans\"+temp} draggableId={\"ans\"+temp} index= {m}>\n                        {(provided) => (\n                           \n                        <p className={classes.MyListDiv}\n                         ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                            {/* <img {this.state.arr[m]} */}\n                            {/* {this.state.arr[m]} */}\n                            <img className={classes.Img} alt={this.state.arr[m]} src={this.state.arrurl[m]}/>\n                       </p>\n                         )}\n                         </Draggable>\n                            </div>\n            );\n        }\n    }\n\n    myoptionlist = (m) =>{\n        let temp = this.state.lrr[m]\n        if(!temp){\n            // console.log(m)\n            return(<div></div>)\n        }\n        else{\n            // console.log(\"bllllllll\")\n            return(\n                <div>\n                        <Draggable key = {\"opt\"+temp} draggableId={\"opt\"+temp} index= {m}>\n                        {(provided) => (\n                           \n                        <li className={classes.MyListDiv}\n                         ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                            <img className={classes.Img} alt={this.state.lrr[m]} src={this.state.lefturls[m]}/>\n                       </li>\n                         )}\n                         </Draggable>\n                            </div>\n            );\n        }\n    }\n    onClickHandler = ()=>{\n        const ansans = [...this.state.answers];\n        const userans = [...this.state.arr]\n        let yesorno = false\n        for(var i = 0; i<ansans.length;i++){\n            if(userans[i] === ansans[i]){\n                yesorno = true;\n            }\n            else{\n                yesorno = false;\n                break;\n            }\n        }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:ansans, val:yesorno}\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n\n    }\n\n    render(){\n        console.log(this.props.data.leftoptionsurl)\n\n        // console.log(this.state.dragdata)\n        return(\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  >\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n\n            \n             <DragDropContext onDragEnd={this.handleOnDragEnd}>\n             <div className={classes.DivinCol}>\n                {Object.entries(this.state.dragdata).map((data)=>{\n                    // console.log(\"kajhsdkahsdkajshd\",data)\n                    let x = data[1]\n                    // // console.log(x.data)s\n                    if(x.id === \"leftoptions\"){\n                        return(\n                            <div >\n                                 {x.data.map(index =>{\n                                     let ma =x.data.indexOf(index)\n                                     const renderdataa = this.myoptionlist(ma,index)\n                                          return(\n                                <Droppable droppableId={\"lef\"+index} >\n                                {(provided, snapshot) => (\n                                    <ul  className = \"characters\" \n                                    style={{listStyleType:\"none\", background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\"}} \n                                    {...provided.droppableProps} ref={provided.innerRef}>\n                                     \n                                            <div className={classes.DivinCol2}>\n                                            <div className={classes.MyListDrop}>\n                                                {/* <p  style={{textAlign:\"center\"}}>{}</p> */}\n                                             </div>\n                                             {renderdataa}\n                                                {/* <Draggable key = {index} draggableId={index} index= {x.data.indexOf(index)}>\n                                                {(provided) => (\n                                                \n                                                <li className={classes.MyListDiv2}\n                                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{index}\n                            \n                                                </li>\n                                \n                                                )}\n                                                </Draggable> */}\n                                            </div>\n                                          \n                                            \n                                            {provided.placeholder}\n                                    </ul>\n                                    \n                                )}\n                                \n                                </Droppable>\n                                )})}\n                            </div>\n                        )\n                    }\n                    \n                    else{\n                        \n                        return(\n                            <div>\n                                {x.data.map(index =>{\n                                    // console.log(\"rightdrop\", x.data)\n                                    let m =x.data.indexOf(index)\n                                    const renderdata = this.myanslist(m,index)\n                                    return(\n                                        <Droppable droppableId={\"rig\"+index} >\n                                    {(provided, snapshot) => (\n                                <ul  className = \"characters\" \n                                style={{listStyleType:\"none\",padding:\"0px\", background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\"}} \n                                {...provided.droppableProps} ref={provided.innerRef}>\n                                            <div className={classes.DivinCol2}>\n                                            <div className={classes.MyListDrop}>\n                                                <p  style={{textAlign:\"center\"}}>{index}</p>\n                                             </div>\n                                            {renderdata}\n                                            </div>\n                                            {provided.placeholder}\n                                </ul>\n                                 )}\n                                </Droppable>\n                                )})}\n                            \n                        </div>\n                        )\n                        \n                    }\n\n            // {/* })}\n            // {provided.placeholder}\n            // </ul>\n            // )}\n            // </Droppable>\n                    // )\n                        })} \n             </div>\n            </DragDropContext>\n            </Card>\n            <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickHandler}>Next</Button>\n            </div>\n        )\n    }\n}\n\n\nexport default MatchDragImgTest;\n\n","import React, { Component } from 'react'\nimport { Radio,  Card, Button} from 'antd';\nimport ReactAudioPlayer from 'react-audio-player';\n// import Myaudio from '../../../assets/Audio/TestAudio.m4a'\nexport default class AudioMultipleChoiceTest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            visible: false,\n            ans : this.props.data.ans[0],\n            audiourl : this.props.data.audiourl\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n\n    onChange = e => {\n        console.log('radio checked', e.target.value);\n        console.log(this.props.data)\n        //  the state.value holds the value that has been chosen by the user...\n        // either we can compare them here and then store them as yes or no or else can store the real ans and user ans\n        // then we can compare the list after clicking the submit button...\n        this.setState({\n          value: e.target.value,\n        });\n      };\n    onClickHandler = ()=>{\n      console.log(\"clicked\")\n      let yesorno = false\n      const userans = this.state.value\n      const ansans = this.state.ans\n      console.log(userans, ansans)\n      if(userans === ansans){\n        yesorno = true\n      }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:ansans, val:yesorno}\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n      console.log(\"i an called nextque and updatelist\");\n      \n    }\n\n\n    render() {\n        const radioStyle = {\n          display: 'block',\n          height: '30px',\n          lineHeight: '30px',\n        };\n        // const { value } = this.state;\n        return (\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}>\n                <ReactAudioPlayer\n                src={this.state.audiourl}\n                autoPlay\n                controls\n                />\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n                <Radio.Group onChange={this.onChange}>\n                    {this.props.data.options.map(index=>{\n                      \n                        return(\n                            <Radio key={index} style={radioStyle} value={index}>\n                            {index}\n                          </Radio>\n                        );\n                    })}\n          </Radio.Group>\n                </Card>\n                <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickHandler}>Next</Button>\n            </div>\n       \n        );\n      }\n    \n}\n","import React, {Component} from 'react';\nimport { Card, Button } from 'antd';\nimport classes from './SequenceInOrder.module.css';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nclass AudioSequenceInTest extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n            mydata: [...this.props.data.options],\n            audiourl : this.props.data.audiourl\n          };\n    }\n    handleOnDragEnd = (result) =>{\n        if (!result.destination) return;\n        console.log(result)\n        const items = Array.from(this.state.mydata);\n        \n        const [reorderedItem] = items.splice(result.source.index, 1);\n        console.log(reorderedItem)\n        items.splice(result.destination.index, 0, reorderedItem);\n        console.log(items)\n        this.setState({mydata: items})\n        \n        \n    }\n    onClickHandler = ()=>{\n        const userans = [...this.state.mydata];\n        const ansans = [...this.props.data.ans];\n        let yesorno = false;\n        for(var i = 0; i<userans.length;i++){\n            if(userans[i] === ansans[i]){\n                yesorno = true\n            }\n            else{\n                yesorno = false\n                break;\n            }\n        }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:ansans, val:yesorno}\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n\n    }\n\n    render(){\n\n        return(\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  >\n                <ReactAudioPlayer\n                src={this.state.audiourl}\n                autoPlay\n                controls\n                />\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <DragDropContext onDragEnd={this.handleOnDragEnd}>\n            <Droppable droppableId=\"characters\" >\n    {(provided) => (\n            <ol className = \"characters\" {...provided.droppableProps} ref={provided.innerRef}>\n            {this.state.mydata.map(index=>{\n                console.log(index.split(\",,\"))\n                // let x = 123 \n                // let lala = index.split(\",,\")\n                // {this.props.data.options.indexOf(index)}\n                return(\n                    <Draggable key = {index} draggableId={index} index= {this.state.mydata.indexOf(index)}>\n                    {(provided) => (\n                    <li className={classes.MyListDiv} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{index}\n                   {/* </List.Item> */}\n                   </li>\n                    // </div>\n                     )}\n                     </Draggable>\n                    \n            )\n                  \n            })}\n            {/* </List> */}\n            {provided.placeholder}\n            </ol>\n            )}\n            </Droppable>\n            </DragDropContext>\n            \n            </Card>\n            <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickHandler}>Next</Button>\n            </div>\n        )\n    }\n}\n// <div className={classes.MyListDiv}>\n// {/* <div > */}\n// {/* <List.Item */}\n\nexport default AudioSequenceInTest;\n\n","import React, { Component } from 'react'\nimport { Radio,  Card, Button} from 'antd';\nimport VideoPlayer from 'react-video-js-player';\n// import ReactAudioPlayer from 'react-audio-player';\n// import Myaudio from '../../../assets/Audio/TestAudio.m4a'\nexport default class VideoMultipleChoiceTest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            visible: false,\n            ans : this.props.data.ans[0],\n            videourl : this.props.data.videourl\n          };\n    }\n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    handleOk = () => {\n      this.setState({ visible: false });\n    };\n  \n    handleCancel = () => {\n      this.setState({ visible: false });\n    };\n\n    onDelete=()=>{\n      this.props.deleteQuestion(this.props.data.id);\n    }\n\n    onChange = e => {\n        console.log('radio checked', e.target.value);\n        console.log(this.props.data)\n        //  the state.value holds the value that has been chosen by the user...\n        // either we can compare them here and then store them as yes or no or else can store the real ans and user ans\n        // then we can compare the list after clicking the submit button...\n        this.setState({\n          value: e.target.value,\n        });\n      };\n    onClickHandler = ()=>{\n      console.log(\"clicked\")\n      let yesorno = false\n      const userans = this.state.value\n      const ansans = this.state.ans\n      console.log(userans, ansans)\n      if(userans === ansans){\n        yesorno = true\n      }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:ansans, val:yesorno}\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n      console.log(\"i an called nextque and updatelist\");\n      \n    }\n\n\n    render() {\n        const radioStyle = {\n          display: 'block',\n          height: '30px',\n          lineHeight: '30px',\n        };\n        // const { value } = this.state;\n        return (\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}>\n                {/* <ReactAudioPlayer\n                src={this.state.audiourl}\n                autoPlay\n                controls\n                /> */}\n                <VideoPlayer controls={true} src={this.props.data.videourl} width=\"720\"\n                    height=\"420\" />\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n                <Radio.Group onChange={this.onChange}>\n                    {this.props.data.options.map(index=>{\n                      \n                        return(\n                            <Radio key={index} style={radioStyle} value={index}>\n                            {index}\n                          </Radio>\n                        );\n                    })}\n          </Radio.Group>\n                </Card>\n                <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickHandler}>Next</Button>\n            </div>\n       \n        );\n      }\n    \n}\n","import React, {Component} from 'react';\nimport { Card, Button } from 'antd';\nimport classes from './SequenceInOrder.module.css';\n// import ReactAudioPlayer from 'react-audio-player';\nimport VideoPlayer from 'react-video-js-player';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nclass VideoSequenceInTest extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 1,\n            visible: false,\n            mydata: [...this.props.data.options],\n            videourl : this.props.data.videourl\n          };\n    }\n    handleOnDragEnd = (result) =>{\n        if (!result.destination) return;\n        console.log(result)\n        const items = Array.from(this.state.mydata);\n        \n        const [reorderedItem] = items.splice(result.source.index, 1);\n        console.log(reorderedItem)\n        items.splice(result.destination.index, 0, reorderedItem);\n        console.log(items)\n        this.setState({mydata: items})\n        \n        \n    }\n    onClickHandler = ()=>{\n        const userans = [...this.state.mydata];\n        const ansans = [...this.props.data.ans];\n        let yesorno = false;\n        for(var i = 0; i<userans.length;i++){\n            if(userans[i] === ansans[i]){\n                yesorno = true\n            }\n            else{\n                yesorno = false\n                break;\n            }\n        }\n      const data = {queNo: this.props.quesNo, userAns: userans, correctans:ansans, val:yesorno}\n      this.props.userAnsList(data, this.props.testscore, this.props.score)\n      this.props.nextQue()\n\n    }\n\n    render(){\n\n        return(\n            <div  className=\"col-12 col-sm-10 offset-sm-1\">\n                <Card style={{backgroundColor:this.props.color}}\n                  >\n                {/* <ReactAudioPlayer\n                src={this.state.audiourl}\n                autoPlay\n                controls\n                /> */}\n                <VideoPlayer controls={true} src={this.props.data.videourl} width=\"720\"\n                    height=\"420\" />\n        <p style={{ fontSize: 17}}>{this.props.quesNo}. {this.props.data.description}</p>\n            {/* </div> */}\n            <DragDropContext onDragEnd={this.handleOnDragEnd}>\n            <Droppable droppableId=\"characters\" >\n    {(provided) => (\n            <ol className = \"characters\" {...provided.droppableProps} ref={provided.innerRef}>\n            {this.state.mydata.map(index=>{\n                console.log(index.split(\",,\"))\n                // let x = 123 \n                // let lala = index.split(\",,\")\n                // {this.props.data.options.indexOf(index)}\n                return(\n                    <Draggable key = {index} draggableId={index} index= {this.state.mydata.indexOf(index)}>\n                    {(provided) => (\n                    <li className={classes.MyListDiv} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>{index}\n                   {/* </List.Item> */}\n                   </li>\n                    // </div>\n                     )}\n                     </Draggable>\n                    \n            )\n                  \n            })}\n            {/* </List> */}\n            {provided.placeholder}\n            </ol>\n            )}\n            </Droppable>\n            </DragDropContext>\n            \n            </Card>\n            <Button type=\"primary\" style={{float:\"right\"}} onClick={this.onClickHandler}>Next</Button>\n            </div>\n        )\n    }\n}\n// <div className={classes.MyListDiv}>\n// {/* <div > */}\n// {/* <List.Item */}\n\nexport default VideoSequenceInTest;","import React, {Component} from \"react\";\nimport {  Divider } from \"antd\";\nimport Header from \"../Header\";\nimport { connect } from \"react-redux\";\nimport {  withRouter } from \"react-router-dom\";\n\n\nclass SubmitTest extends Component{\n    render(){\n        console.log(this.props)\n        return(\n            <div className=\"mainBody\">\n            {/* <h1>{this.props.user.username}</h1> */}\n            <Header />\n            <div style={{ position: \"fixed\" }} className=\"add\">\n              <div className=\"row\">\n                <br />\n                <hr />\n                <br />\n              </div>\n            </div>\n            {/* Options */}\n            <div style={{ height: 10 }} />\n            <div style={{ height: 10 }} />\n            <div style={{ height: 10 }} />\n            <div />\n            <Divider style={{ marginTop: 20 }} orientation=\"center\">\n              Completed Test Succusfully\n            </Divider>\n            <br />\n            <div style={{textAlign:\"center\"}}>\n            <h1>Your Score: {this.props.testscore}</h1>\n            {this.props.list.map(id =>{\n                // console.log(id)\n                return(\n                    <div>\n                        <p>QueNo:{id.queNo}, userAns:{id.userAns}, CorrectAns:{id.correctans}</p>\n                    </div>\n                )\n                \n            })}\n            </div>\n            \n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      user: state.user,\n      questions: state.question,\n      option: state.option,\n      list: state.question.list,\n      testscore: state.question.testscore\n    };\n  };\n\nexport default withRouter(connect(mapStateToProps,)(SubmitTest))","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {  withRouter } from \"react-router-dom\";\nimport Header from \"../Header\";\n// import Countdown from \"react-countdown\";\nimport {  Divider } from \"antd\";\nimport * as CategoryTypes from '../../util/Categories';\nimport * as actions from \"../../redux/actions/QuestionActions\";\nimport MultipleChoiceTest from \"../Categories/Multiple Choice/MultipleChoiceTest\";\nimport BlanksTest from \"../Categories/Blanks/BlanksTest\";\nimport DropDownTest from \"../Categories/Select-From-dropdown/DropDownTest\";\nimport TrueAndFalseTest from \"../Categories/TrueAndFalse/TrueAndFalseTest\";\nimport MultipleCheckboxTest from \"../Categories/MultipleCheckbox/MultipleCheckboxTest\";\nimport SequenceInTest from \"../Categories/SequenceInOrder/SequenceInTest\";\nimport MatchingWordsTest from \"../Categories/MatchingWords/MatchingWordsTest\";\nimport MatchDragTest from \"../Categories/MatchDrag/MatchDragTest\";\nimport MatchDragImgTest from \"../Categories/MatchDragImg/MatchDragImgTest\";\nimport AudioMultipleChoiceTest from '../Categories/AudioMultipleChoice/AudioMultipleChoiceTest';\nimport AudioSequenceInTest from '../Categories/AudioSequenceInOrder/AudioSequenceInTest';\nimport VideoMultipleChoiceTest from '../Categories/VideoMultipleChoice/VideoMultipleChoiceTest';\nimport VideoSequenceInTest from '../Categories/VideoSequenceInOrder/VideoSequenceInTest';\nimport SubmitTest from \"../SubmitTest/SubmitTest\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n// import CountDown from 'react-native-countdown-component';\n// import MultipleC from \"../Categories/Multip\"\n\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nclass MyTest extends Component{\n\n  state = {\n    router: React.PropTypes,\n    currentquestion:0,\n    questions:this.props.questions\n  }\n  renderTime = (dimension, time) => {\n    return (\n      <div className=\"time-wrapper\">\n        <div className=\"time\">{time}</div>\n        <div>{dimension}</div>\n      </div>\n    );\n  };\n  getTimeSeconds = (time) => (minuteSeconds - time) | 0;\n  getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\n  \n  componentDidMount() {\n    // this.props.addQuestion();\n    console.log(\"loading questions From Test page \")\n    console.log(this.props.questions)\n    console.log(this.state.questions)\n    this.props.initquestions()\n    this.props.initcolor()\n    this.props.initscore()\n    this.props.inittime()\n  }\n\n  updateCurrentNo = ()=>{\n    let x = this.state.currentquestion + 1\n    // if(x<this.props.questions.questions.length)\n\n\n    // start from here make sure that the final test complete page is added ans also score..\n\n\n\n    this.setState({currentquestion: x})\n  }\n\n  renderQuestionRows = (item, cur) => {\n    //<MultipleChoice quesNo={1} data={data} />\n    //    const ques = this.props.questions;\n    console.log(this.state.questions.questions[1])\n    console.log(this.state.questions)\n    //console.log(\"ques.ques: \",this.props.questions.questions);\n    // const result = this.props.questions.questions.map((item, index) => {\n      //console.log(\"item \",item);\n      cur++;\n      const index = cur\n      console.log(index, cur)\n      //console.log(\"item: \", item.category)\n      if(item.category === CategoryTypes.MULTIPLE_CHOICE){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <MultipleChoiceTest\n            color={this.props.questions.color}\n            // actions={[\n                    \n            //   <EditTwoTone onClick={()=>{(new MultipleChoice()).showModal();}} twoToneColor=\"#52c41a\"   key=\"edit\" />,\n            //   <DeleteTwoTone onClick={()=>{this.onDelete();}} twoToneColor=\"#eb2f96\" key=\"del\"/>,\n            // ]}\n            quesNo={index}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            data={item}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n        </div>\n      );\n    }else if(item.category === CategoryTypes.FILL_IN_THE_BLANKS){\n     // console.log(\"sdfsd\");\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <BlanksTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n        </div>\n      );\n    }else if(item.category === CategoryTypes.SELECT_FROM_DROPDOWN){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <DropDownTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n          \n        </div>\n      );\n    }else if(item.category === CategoryTypes.TRUE_AND_FALSE){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <TrueAndFalseTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            score = {this.props.score}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            testscore = {this.props.testscore}\n            \n          />\n        </div>\n      )\n      ;\n    }\n    else if(item.category === CategoryTypes.MULTIPLE_CHECKBOX){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <MultipleCheckboxTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n        </div>\n      );\n    }\n    else if(item.category === CategoryTypes.SEQUENCE_IN_ORDER){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <SequenceInTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n        </div>\n      );\n    }\n    else if(item.category === CategoryTypes.MATCHING_WORDS){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <MatchingWordsTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n        </div>\n      );\n    }\n    else if(item.category === CategoryTypes.MATCH_DRAG_IMG){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <MatchDragImgTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n        </div>\n      );\n    }\n    else if(item.category === CategoryTypes.AUDIO_MULTIPLE_CHOICE){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <AudioMultipleChoiceTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n        </div>\n      );\n    }\n    else if(item.category === CategoryTypes.AUDIO_SEQUENCE_ORDER){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <AudioSequenceInTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n        </div>\n      );\n    }\n    else if(item.category === CategoryTypes.VIDEO_MULTIPLE_CHOICE){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <VideoMultipleChoiceTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n        </div>\n      );\n    }\n    else if(item.category === CategoryTypes.VIDEO_SEQUENCE_ORDER){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <VideoSequenceInTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n        </div>\n      );\n    }\n    else if(item.category === CategoryTypes.MATCH_DRAG){\n      return (\n        <div\n          key={item.ans[0]}\n          style={{ marginTop: 20 }}\n          // key={item}\n          className=\"row\"\n        >\n          <MatchDragTest\n            color={this.props.questions.color}\n            quesNo={index}\n            data={item}\n            userAnsList={this.props.updateUserAnsList}\n            nextQue = {this.updateCurrentNo}\n            score = {this.props.score}\n            testscore = {this.props.testscore}\n          />\n        </div>\n      );\n    }\n    // })\n    ;\n    // return result;\n  };\n\n  RenderorSubmit = ()=>{\n    const crr = this.state.currentquestion\n    if(crr === this.props.questions.questions.length){\n      return(\n        <SubmitTest />\n      )\n    }\n    else if(this.props.questions.questions){\n      console.log(this.props.questions.questions[this.state.currentquestion])\n      return(\n        this.renderQuestionRows(this.props.questions.questions[this.state.currentquestion],this.state.currentquestion)\n      )\n    }\n    else{\n      return(\n        <p>No Questions Added yet</p>\n      )\n    }\n  }\n\n\n    render(){\n    console.log(this.state.router)\n    console.log(this.props.score)\n      console.log(window.location.href)\n        console.log(this.props.questions)\n        console.log(this.props.questions.color)\n        const timerProps = {\n          isPlaying: true,\n          size: 60,\n          strokeWidth: 6\n        };\n        const remainingTime = this.props.time * 60\n        console.log(remainingTime)\n        console.log(this.props.time)\n        return(\n            <div className=\"mainBody\">\n        {/* <h1>{this.props.user.username}</h1> */}\n        <Header />\n        <div style={{ position: \"fixed\" }} className=\"add\">\n          <div className=\"row\">\n            <br />\n            <hr />\n            <br />\n          </div>\n        </div>\n        {/* Options */}\n        <div style={{ height: 10 }} />\n        <div style={{ height: 10 }} />\n        <div style={{ height: 10 }} />\n        <div />\n        <Divider style={{ marginTop: 20 }} orientation=\"left\">\n        \n        </Divider>\n\n        <div className=\"row\" style={{float: \"right\", paddingRight:\"50px\"}}>\n        <CountdownCircleTimer\n        {...timerProps}\n        colors={[[\"#EF798A\"]]}\n        duration={remainingTime}\n        // initialRemainingTime={remainingTime % hourSeconds}\n        onComplete={(totalElapsedTime) => [\n          remainingTime - totalElapsedTime > minuteSeconds\n        ]}\n      >\n        {({ elapsedTime }) =>\n        // console.log(elapsedTime)\n          this.renderTime(\"M\", this.getTimeMinutes(remainingTime - elapsedTime))\n        }\n      </CountdownCircleTimer>\n      <CountdownCircleTimer\n        {...timerProps}\n        // colors={[[\"#218380\"]]}\n        colors={[[\"#000000\"]]}\n        // colors={this.props.questions.color}\n        duration={minuteSeconds}\n        // duration={20}\n        // initialRemainingTime={remainingTime % minuteSeconds}\n        onComplete={(totalElapsedTime) => [\n          remainingTime - totalElapsedTime > 0\n        ]}\n      >\n        {({ elapsedTime }) =>\n          this.renderTime(\"S\", this.getTimeSeconds(elapsedTime))\n        }\n      </CountdownCircleTimer>\n      </div>\n\n\n\n\n        <Divider style={{ marginTop: 20 }} orientation=\"left\" />\n        <div style={{flex:1, flexDirection: \"row-reverse\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"}}>\n          <p>Questions :{\" \"}\n          {this.props.questions.questions.length\n            ? this.props.questions.questions.length\n            : \"0\"}</p>\n        \n        </div>\n      \n        <br />\n        {/* {this.props.questions ? (\n          this.renderQuestionRows(this.state.questions.questions[this.state.currentquestion],this.state.currentquestion)\n          // this.renderQuestionRows(this.state.questions.questions[7])\n        ) : (\n          <p>No Questions Added yet</p>\n        )} */}\n        {/* {this.RenderorSubmit()} */}\n        {this.props.questions ? (\n          this.RenderorSubmit()\n        ) : (\n          <p>No Questions Added yet</p>\n        )}\n      </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    // addQuestion: (data) => dispatch(addQuestion(data)),\n    // updateQuestion: (data) => dispatch(updateQuestion(data)),\n    // deleteQuestion: (data) => {\n    //   dispatch(deleteQuestion(data));\n    // },\n    // changeColor: (color) => {\n    //   dispatch(changeColor(color));\n    // },\n    // changeScore: (score) => {\n    //   dispatch(changeScore(score));\n    // },\n    // changeTime: (time) => {\n    //   dispatch(changeTime(time));\n    // },\n    updateUserAnsList :(list, score, testscore ) =>{\n      dispatch(actions.changetestscore(list, testscore, score))\n    },\n    initquestions:()=>{ dispatch(actions.initquestions())},\n    initcolor:()=>{dispatch(actions.initcolor())},\n    inittime:()=>{dispatch(actions.inittime())},\n    initscore:()=>{dispatch(actions.initscore())}\n\n  });\n  const mapStateToProps = (state) => {\n    return {\n      user: state.user,\n      questions: state.question,\n      option: state.option,\n      score: state.question.score,\n      testscore: state.question.testscore,\n      time: state.question.time\n\n    };\n  };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MyTest));","import React from 'react';\nimport \"./App.css\";\nimport { Route} from 'react-router-dom';\nimport {Switch, withRouter} from 'react-router-dom';\n\nimport Main from \"./components/Main\";\nimport 'antd/dist/antd.css';\n// import Test from './components/Test.js';\nimport MyTest from \"./components/MyTest/MyTest\";\nimport SubmitTest from \"./components/SubmitTest/SubmitTest\";\n\n\nfunction App() {\n  return (\n      <Switch>\n      <Route path=\"/\" exact component={Main} />\n      {/* <Route path=\"/test\" component={Test} /> */}\n      <Route path=\"/test123\" component={MyTest} />\n      <Route path=\"/submittest\" component={SubmitTest} />\n      </Switch>\n  )\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObj, updatedObj)=>{\n    return{\n        ...oldObj,\n        ...updatedObj\n    };\n    };","import * as types from \"../types/Questions\";\r\nimport {updateObject} from \"../types/utility\";\r\n\r\nconst initialState = {\r\n  questions: [\r\n      // {       id:123,\r\n      //         category: \"Multiple Choice\",\r\n      //         description: \"How long one-one meeting with the subordinate last.\",\r\n      //         options: [\"5 mins\", \"10 mins\", \"15 mins\"],\r\n      //         ans: [\"5 mins\"],\r\n      //       }, {       id:126,\r\n      //         category: \"Fill in the Blanks\",\r\n      //         description: \"____ of America is ____ .but ____ is the capital of Australia\",\r\n      //         options: [],\r\n      //         ans: [\"Capital\",\"New York\", \"Sydney\"],\r\n      //       }, {       id:16,\r\n      //         category: \"Select From Dropdown\",\r\n      //         description: \"Islamabad is the capital of  #1 Dropdown#. China is her  #2 Dropdown#\",\r\n      //         options: [\"Pakistan,India\",\"bestfriend,enemy\"],\r\n      //         ans: [0,0],\r\n      //       },{       id:166,\r\n      //         category: \"True and False\",\r\n      //         description: \"Is Trump President of America.\",\r\n      //         options: [],\r\n      //         ans: [false],\r\n      //       },{       id:\"ale\",\r\n      //         category: \"Multiple Checkbox\",\r\n      //         description: \"From the below options select the states in INDIA\",\r\n      //         options: [\"New York\", \"Telangana\",  \"Nepal\",\"Kerala\"],\r\n      //         ans: [\"Telangana\", \"Kerala\"],\r\n      //       },{       id:\"ale\",\r\n      //       category: \"Sequence In Order\",\r\n      //       description: \"From the below options place them in alphabetical order \",\r\n      //       options: [\"Dino\", \"From\",  \"Apple\",\"Cat\"],\r\n      //       ans: [\"Apple\", \"Cat\", \"Dino\", \"From\"],\r\n      //     },{       id:\"maaa\",\r\n      //     category: \"Matching Words\",\r\n      //     description: \"From the below options Match them correctly \",\r\n      //     leftoptions: [\"A\",\"B\",\"C\",\"D\"],\r\n      //     rightoptions: [\"Cat\", \"Dino\", \"Apple\", \"Banana\"],\r\n      //     ans: [\"Apple\", \"Banana\", \"Cat\", \"Dino\"],\r\n      //   },{       id:\"match\",\r\n      //   category: \"Match Drag\",\r\n      //   description: \"From the below options Drag and drop in correact positions \",\r\n      //   leftoptions: [\"A\",\"B\",\"C\",\"D\"],\r\n      //   rightoptions: [\"Cat\", \"Dino\", \"Apple\", \"Banana\"],\r\n      //   ans: [\"C\", \"D\", \"A\", \"B\"],\r\n      // }\r\n            \r\n  ],\r\n  color: \"white\",\r\n  score:1,\r\n  testscore:0,\r\n  time:60,\r\n  list:[]\r\n}\r\n\r\n\r\nconst fetchQuestionsSuccess = (state, action)=>{\r\n  console.log(\"detchsuccess\")\r\n  return updateObject(state,{\r\n    questions: action.data\r\n  });\r\n};\r\nconst fetchQuestionsFail = ( state, action ) => {\r\n  return updateObject( state, { questions: [] } );\r\n};\r\n\r\n\r\nexport const Questions = ( state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_QUESTION:\r\n       action.payload.id= action.payload.ans[0];\r\n       console.log(action.payload)\r\n       console.log(state.questions)\r\n       const newOrder = {\r\n        ...action.payload\r\n        // id:action.payload.ans[0]\r\n    }\r\n    const updateobj = {\r\n      questions: state.questions.concat(newOrder)}\r\n      // return { ...state, questions: state.questions.concat(action.payload) };\r\n      // return {...state, questions: [...state.questions, action.payload]}\r\n      return updateObject(state, updateobj)\r\n    // case types.INIT_QUESTIONS:\r\n    //   axios.\r\n\r\n    case types.DELETE_QUESTION:\r\n        const newArray= state.questions.filter(item=>{return item.id!==action.payload});\r\n        return { ...state, questions: newArray};\r\n    case types.CHANGE_COLOR:\r\n         return { ...state, color: action.payload} \r\n    case types.CHANGE_SCORE:\r\n            return { ...state, score: action.payload}\r\n    case types.CHANGE_TIME:\r\n            return { ...state, time: action.payload}  \r\n    case types.USER_ANS_LIST:\r\n       const arr = action.payload\r\n       console.log(state.list)\r\n      //  console.log(action)\r\n      //  const actualscore = state.testscore\r\n      //  console.log(arr.val)\r\n      //  console.log(state.list)\r\n      // //  let score = action.payload.score\r\n      // let score = 0\r\n      //  if(arr.val){\r\n      //   score = action.score + actualscore\r\n      //  }\r\n      //  else{\r\n      //    score = actualscore\r\n      //  }\r\n      // //  const score = action.payload.score + actualscore\r\n      //  console.log(state)\r\n      //  console.log(arr)\r\n      //  console.log(score)\r\n      //  console.log(action)\r\n      //  console.log(state.list)\r\n       return{...state, list:[...state.list, arr],testscore: action.score }\r\n      // return state\r\n    case types.UPDATE_QUESTION:\r\n      console.log(action.payload)\r\n            const question=action.payload;\r\n           // console.log(\"question: \",question);\r\n            const id= question.id;\r\n          //  console.log(\"id: \",id);\r\n            var foundIndex = state.questions.findIndex(x => x.id === id);\r\n           // console.log(\"found index: \",foundIndex);\r\n            state.questions[foundIndex]=question;\r\n            console.log(\"state: \",state);\r\n            return { ...state, questions: state.questions}    \r\n    case types.FETCH_QUESTIONS_SUCCESS: return fetchQuestionsSuccess(state, action);\r\n    case types.FETCH_QUESTIONS_FAIL: return fetchQuestionsFail(state,action)\r\n    case types.FETCH_COLOR_SUCCESS: return updateObject(state,{color: action.color});\r\n    case types.FETCH_COLOR_FAIL: return updateObject( state, { color: \"white\" } );\r\n    case types.FETCH_SCORE_SUCCESS: return updateObject(state,{score: action.score});\r\n    case types.FETCH_SCORE_FAIL: return updateObject( state, { score: 1 } );\r\n    case types.FETCH_TIME_SUCCESS: return updateObject(state,{time: action.time});\r\n    case types.FETCH_TIME_FAIL: return updateObject( state, { time: 60 } );\r\n\r\n\r\n    default:\r\n            return state;\r\n  }\r\n  // return state;\r\n};\r\n\r\nexport default Questions;\r\n// {\r\n//     category: \"Multiple Choice\",\r\n//     description: \"How long one-one meeting with the subordinate last.\",\r\n//     options: [\"5 mins\", \"10 mins\", \"15 mins\"],\r\n//     ans: \"5 mins\",\r\n//   },\r\n//   {\r\n//     category: \"Multiple Choice\",\r\n//     description: \"How long one-one meeting with the subordinate last.\",\r\n//     options: [\"5 mins\", \"10 mins\", \"15 mins\"],\r\n//     ans: \"5 mins\",\r\n//   },","export const CHANGE_COLOR=\"CHANGE_COLOR\";\r\nexport const CHANGE_SCORE=\"CHANGE_SCORE\";\r\nexport const CHANGE_TIME=\"CHANGE_TIME\";\r\n\r\nexport const GET_COLOR=\"GET_COLOR\";\r\nexport const GET_SCORE=\"GET_SCORE\";\r\nexport const GET_TIME=\"GET_TIME\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import { ConfigureStore } from \"./redux/ConfigureStore\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport {  User } from \"./redux/reducers/User\";\nimport {  Questions } from \"./redux/reducers/Questions\";\nimport {  options } from \"./redux/reducers/Option\";\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore, applyMiddleware, compose, combineReducers } from 'redux';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\n\nconst rootReducer = combineReducers({\n  user: User,\n    question: Questions,\n    option: options\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\r\nexport const User= (state={username: \"user123\"}, action) =>{\r\n return state;\r\n}","import * as opt from \"../types/OptionTypes\";\r\n\r\nexport const options = (\r\n  state = {\r\n    score: 0,\r\n    time: 0,\r\n    color: \"white\",\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case opt.CHANGE_COLOR:\r\n      return { ...state, color: action.payload };\r\n    case opt.CHANGE_SCORE:\r\n      return { ...state, score: action.payload };\r\n    case opt.CHANGE_TIME:\r\n      return { ...state, time: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainDiv\":\"MatchDrag_MainDiv___-frJ\",\"MyListDiv\":\"MatchDrag_MyListDiv__3xjjO\",\"MyListDrop\":\"MatchDrag_MyListDrop__8JArW\",\"MyListDiv2\":\"MatchDrag_MyListDiv2__2qo4S\",\"DivinCol\":\"MatchDrag_DivinCol__1Sy0t\",\"DivinCol2\":\"MatchDrag_DivinCol2__2MFCf\",\"InnerDiv\":\"MatchDrag_InnerDiv__3LlRd\",\"BoxOrderDiv\":\"MatchDrag_BoxOrderDiv__3lor6\",\"DropContent\":\"MatchDrag_DropContent__cq6jE\",\"Img\":\"MatchDrag_Img__2JOX0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainDiv\":\"SequenceInOrder_MainDiv__P903A\",\"MyListDiv\":\"SequenceInOrder_MyListDiv__GVXQB\",\"DivinCol\":\"SequenceInOrder_DivinCol__1A5Vd\",\"InnerDiv\":\"SequenceInOrder_InnerDiv__3LnZY\",\"BoxOrderDiv\":\"SequenceInOrder_BoxOrderDiv__2p7Ud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainDiv\":\"SequenceInOrder_MainDiv__3gS2f\",\"MyListDiv\":\"SequenceInOrder_MyListDiv__2doSM\",\"DivinCol\":\"SequenceInOrder_DivinCol__yZfjx\",\"InnerDiv\":\"SequenceInOrder_InnerDiv__3yvQ_\",\"BoxOrderDiv\":\"SequenceInOrder_BoxOrderDiv__25pQ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainDiv\":\"SequenceInOrder_MainDiv__3SHOt\",\"MyListDiv\":\"SequenceInOrder_MyListDiv__VWwPT\",\"DivinCol\":\"SequenceInOrder_DivinCol__3F0-O\",\"InnerDiv\":\"SequenceInOrder_InnerDiv__LGkkK\",\"BoxOrderDiv\":\"SequenceInOrder_BoxOrderDiv__18Ysn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainDiv\":\"MatchDrag_MainDiv__pm1t9\",\"MyListDiv\":\"MatchDrag_MyListDiv__1sN9m\",\"MyListDrop\":\"MatchDrag_MyListDrop__2pMYn\",\"MyListDiv2\":\"MatchDrag_MyListDiv2__2b-Wj\",\"DivinCol\":\"MatchDrag_DivinCol__236Jo\",\"DivinCol2\":\"MatchDrag_DivinCol2__1V49F\",\"InnerDiv\":\"MatchDrag_InnerDiv__1nI_K\",\"BoxOrderDiv\":\"MatchDrag_BoxOrderDiv__HDaMx\",\"DropContent\":\"MatchDrag_DropContent__1G5UD\"};"],"sourceRoot":""}